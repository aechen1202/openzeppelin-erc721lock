{
	"id": "40a47048b0700e81170c6a18bf5ba47d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC721.sol\";\r\nimport \"./IERC721Receiver.sol\";\r\nimport \"./extensions/IERC721Metadata.sol\";\r\nimport \"../../utils/Address.sol\";\r\nimport \"../../utils/Context.sol\";\r\nimport \"../../utils/Strings.sol\";\r\nimport \"../../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to owner address\r\n    mapping(uint256 => address) private _owners;\r\n\r\n    // Mapping owner address to token count\r\n    mapping(address => uint256) private _balances;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        require(owner != address(0), \"ERC721: invalid token ID\");\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        _requireMinted(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not token owner or approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }\r\n\r\n    function mint(uint256 tokenId) public virtual override {\r\n        _safeMint(msg.sender,tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        _requireMinted(tokenId);\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\r\n        //solhint-disable-next-line max-line-length\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\r\n\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\r\n        _safeTransfer(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     * and stop existing when they are burned (`_burn`).\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return _ownerOf(tokenId) != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal virtual {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(address(0), to, tokenId, data),\r\n            \"ERC721: transfer to non ERC721Receiver implementer\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal virtual {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\r\n\r\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        unchecked {\r\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\r\n            // Given that tokens are minted one by one, it is impossible in practice that\r\n            // this ever happens. Might change if we allow batch minting.\r\n            // The ERC fails to describe this case.\r\n            _balances[to] += 1;\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(address(0), to, tokenId);\r\n\r\n        _afterTokenTransfer(address(0), to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n\r\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\r\n\r\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\r\n        owner = ERC721.ownerOf(tokenId);\r\n\r\n        // Clear approvals\r\n        delete _tokenApprovals[tokenId];\r\n\r\n        unchecked {\r\n            // Cannot overflow, as that would require more tokens to be burned/transferred\r\n            // out than the owner initially received through minting and transferring in.\r\n            _balances[owner] -= 1;\r\n        }\r\n        delete _owners[tokenId];\r\n\r\n        emit Transfer(owner, address(0), tokenId);\r\n\r\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\r\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\r\n        require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, tokenId, 1);\r\n\r\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\r\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\r\n\r\n        // Clear approvals from the previous owner\r\n        delete _tokenApprovals[tokenId];\r\n\r\n        unchecked {\r\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\r\n            // `from`'s balance is the number of token held, which is at least one before the current\r\n            // transfer.\r\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\r\n            // all 2**256 token ids to be minted, which in practice is impossible.\r\n            _balances[from] -= 1;\r\n            _balances[to] += 1;\r\n        }\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        _afterTokenTransfer(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        require(owner != operator, \"ERC721: approve to caller\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` has not been minted yet.\r\n     */\r\n    function _requireMinted(uint256 tokenId) internal view virtual {\r\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                return retval == IERC721Receiver.onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\r\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\r\n     * - When `from` is zero, the tokens will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `batchSize` is non-zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\r\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\r\n     * - When `from` is zero, the tokens were minted for `to`.\r\n     * - When `to` is zero, ``from``'s tokens were burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `batchSize` is non-zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\r\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\r\n     * that `ownerOf(tokenId)` is `a`.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\r\n        _balances[account] += amount;\r\n    }\r\n}\r\n"
			},
			"contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"
			},
			"contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./math/Math.sol\";\r\nimport \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(int256 value) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}"
			},
			"contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}"
			},
			"contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}"
			},
			"contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    function mint(uint256 tokenId) external;\r\n}"
			},
			"contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
			},
			"contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}"
			},
			"contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC721/ERC721.sol\":646:17581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/ERC721/ERC721.sol\":1433:1549  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token/ERC721/ERC721.sol\":1508:1513  name_ */\n  dup2\n    /* \"contracts/token/ERC721/ERC721.sol\":1500:1505  _name */\n  0x00\n    /* \"contracts/token/ERC721/ERC721.sol\":1500:1513  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/token/ERC721/ERC721.sol\":1534:1541  symbol_ */\n  dup1\n    /* \"contracts/token/ERC721/ERC721.sol\":1524:1531  _symbol */\n  0x01\n    /* \"contracts/token/ERC721/ERC721.sol\":1524:1541  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/token/ERC721/ERC721.sol\":1433:1549  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/token/ERC721/ERC721.sol\":646:17581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC721/ERC721.sol\":646:17581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC721/ERC721.sol\":646:17581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC721/ERC721.sol\":1621:1926  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":2549:2649  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":4172:4343  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":3579:3995  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/token/ERC721/ERC721.sol\":4872:5173  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/token/ERC721/ERC721.sol\":5244:5395  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/token/ERC721/ERC721.sol\":2259:2482  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":1990:2197  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":2718:2822  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":4003:4106  function mint(uint256 tokenId) public virtual override {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/token/ERC721/ERC721.sol\":4415:4570  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/token/ERC721/ERC721.sol\":5466:5745  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/token/ERC721/ERC721.sol\":2893:3174  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":4641:4805  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC721/ERC721.sol\":1621:1926  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"contracts/token/ERC721/ERC721.sol\":1723:1727  bool */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":1775:1800  type(IERC721).interfaceId */\n      0x20dd75a500000000000000000000000000000000000000000000000000000000\n        /* \"contracts/token/ERC721/ERC721.sol\":1760:1800  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":1760:1771  interfaceId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":1760:1800  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":1760:1865  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":1832:1865  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/token/ERC721/ERC721.sol\":1817:1865  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":1817:1828  interfaceId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":1817:1865  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":1760:1865  interfaceId == type(IERC721).interfaceId ||... */\n    tag_81:\n        /* \"contracts/token/ERC721/ERC721.sol\":1760:1918  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":1882:1918  super.supportsInterface(interfaceId) */\n      tag_83\n        /* \"contracts/token/ERC721/ERC721.sol\":1906:1917  interfaceId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":1882:1905  super.supportsInterface */\n      tag_84\n        /* \"contracts/token/ERC721/ERC721.sol\":1882:1918  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/token/ERC721/ERC721.sol\":1760:1918  interfaceId == type(IERC721).interfaceId ||... */\n    tag_82:\n        /* \"contracts/token/ERC721/ERC721.sol\":1740:1918  return... */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":1621:1926  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":2549:2649  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/token/ERC721/ERC721.sol\":2603:2616  string memory */\n      0x60\n        /* \"contracts/token/ERC721/ERC721.sol\":2636:2641  _name */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":2629:2641  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":2549:2649  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":4172:4343  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_33:\n        /* \"contracts/token/ERC721/ERC721.sol\":4248:4255  address */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":4268:4291  _requireMinted(tokenId) */\n      tag_93\n        /* \"contracts/token/ERC721/ERC721.sol\":4283:4290  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":4268:4282  _requireMinted */\n      tag_94\n        /* \"contracts/token/ERC721/ERC721.sol\":4268:4291  _requireMinted(tokenId) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/token/ERC721/ERC721.sol\":4311:4326  _tokenApprovals */\n      0x04\n        /* \"contracts/token/ERC721/ERC721.sol\":4311:4335  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":4327:4334  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":4311:4335  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":4304:4335  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":4172:4343  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":3579:3995  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_39:\n        /* \"contracts/token/ERC721/ERC721.sol\":3660:3673  address owner */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":3676:3699  ERC721.ownerOf(tokenId) */\n      tag_96\n        /* \"contracts/token/ERC721/ERC721.sol\":3691:3698  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":3676:3690  ERC721.ownerOf */\n      tag_49\n        /* \"contracts/token/ERC721/ERC721.sol\":3676:3699  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/token/ERC721/ERC721.sol\":3660:3699  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":3724:3729  owner */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":3718:3729  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":3718:3720  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":3718:3729  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC721/ERC721.sol\":3710:3767  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/token/ERC721/ERC721.sol\":3818:3823  owner */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":3802:3823  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":3802:3814  _msgSender() */\n      tag_100\n        /* \"contracts/token/ERC721/ERC721.sol\":3802:3812  _msgSender */\n      tag_101\n        /* \"contracts/token/ERC721/ERC721.sol\":3802:3814  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/token/ERC721/ERC721.sol\":3802:3823  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":3802:3864  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_102\n      jumpi\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":3827:3864  isApprovedForAll(owner, _msgSender()) */\n      tag_103\n        /* \"contracts/token/ERC721/ERC721.sol\":3844:3849  owner */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":3851:3863  _msgSender() */\n      tag_104\n        /* \"contracts/token/ERC721/ERC721.sol\":3851:3861  _msgSender */\n      tag_101\n        /* \"contracts/token/ERC721/ERC721.sol\":3851:3863  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/token/ERC721/ERC721.sol\":3827:3843  isApprovedForAll */\n      tag_78\n        /* \"contracts/token/ERC721/ERC721.sol\":3827:3864  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/token/ERC721/ERC721.sol\":3802:3864  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_102:\n        /* \"contracts/token/ERC721/ERC721.sol\":3780:3953  require(... */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/token/ERC721/ERC721.sol\":3966:3987  _approve(to, tokenId) */\n      tag_108\n        /* \"contracts/token/ERC721/ERC721.sol\":3975:3977  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":3979:3986  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":3966:3974  _approve */\n      tag_109\n        /* \"contracts/token/ERC721/ERC721.sol\":3966:3987  _approve(to, tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/token/ERC721/ERC721.sol\":3649:3995  {... */\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":3579:3995  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":4872:5173  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_43:\n        /* \"contracts/token/ERC721/ERC721.sol\":5033:5074  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_111\n        /* \"contracts/token/ERC721/ERC721.sol\":5052:5064  _msgSender() */\n      tag_112\n        /* \"contracts/token/ERC721/ERC721.sol\":5052:5062  _msgSender */\n      tag_101\n        /* \"contracts/token/ERC721/ERC721.sol\":5052:5064  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/token/ERC721/ERC721.sol\":5066:5073  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":5033:5051  _isApprovedOrOwner */\n      tag_113\n        /* \"contracts/token/ERC721/ERC721.sol\":5033:5074  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/token/ERC721/ERC721.sol\":5025:5124  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/token/ERC721/ERC721.sol\":5137:5165  _transfer(from, to, tokenId) */\n      tag_117\n        /* \"contracts/token/ERC721/ERC721.sol\":5147:5151  from */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":5153:5155  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":5157:5164  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":5137:5146  _transfer */\n      tag_118\n        /* \"contracts/token/ERC721/ERC721.sol\":5137:5165  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/token/ERC721/ERC721.sol\":4872:5173  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":5244:5395  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_46:\n        /* \"contracts/token/ERC721/ERC721.sol\":5348:5387  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_120\n        /* \"contracts/token/ERC721/ERC721.sol\":5365:5369  from */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":5371:5373  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":5375:5382  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":5348:5387  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":5348:5364  safeTransferFrom */\n      tag_70\n        /* \"contracts/token/ERC721/ERC721.sol\":5348:5387  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_120:\n        /* \"contracts/token/ERC721/ERC721.sol\":5244:5395  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":2259:2482  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"contracts/token/ERC721/ERC721.sol\":2331:2338  address */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":2351:2364  address owner */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":2367:2384  _ownerOf(tokenId) */\n      tag_122\n        /* \"contracts/token/ERC721/ERC721.sol\":2376:2383  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":2367:2375  _ownerOf */\n      tag_123\n        /* \"contracts/token/ERC721/ERC721.sol\":2367:2384  _ownerOf(tokenId) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/token/ERC721/ERC721.sol\":2351:2384  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":2420:2421  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":2403:2422  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":2403:2408  owner */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":2403:2422  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC721/ERC721.sol\":2395:2451  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/token/ERC721/ERC721.sol\":2469:2474  owner */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":2462:2474  return owner */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":2259:2482  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":1990:2197  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_54:\n        /* \"contracts/token/ERC721/ERC721.sol\":2062:2069  uint256 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":2107:2108  0 */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":2090:2109  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":2090:2095  owner */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":2090:2109  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC721/ERC721.sol\":2082:2155  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/token/ERC721/ERC721.sol\":2173:2182  _balances */\n      0x03\n        /* \"contracts/token/ERC721/ERC721.sol\":2173:2189  _balances[owner] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":2183:2188  owner */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":2173:2189  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC721/ERC721.sol\":2166:2189  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":1990:2197  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":2718:2822  function symbol() public view virtual override returns (string memory) {... */\n    tag_58:\n        /* \"contracts/token/ERC721/ERC721.sol\":2774:2787  string memory */\n      0x60\n        /* \"contracts/token/ERC721/ERC721.sol\":2807:2814  _symbol */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":2800:2814  return _symbol */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_87\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_87\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":2718:2822  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":4003:4106  function mint(uint256 tokenId) public virtual override {... */\n    tag_62:\n        /* \"contracts/token/ERC721/ERC721.sol\":4069:4098  _safeMint(msg.sender,tokenId) */\n      tag_138\n        /* \"contracts/token/ERC721/ERC721.sol\":4079:4089  msg.sender */\n      caller\n        /* \"contracts/token/ERC721/ERC721.sol\":4090:4097  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":4069:4078  _safeMint */\n      tag_139\n        /* \"contracts/token/ERC721/ERC721.sol\":4069:4098  _safeMint(msg.sender,tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/token/ERC721/ERC721.sol\":4003:4106  function mint(uint256 tokenId) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":4415:4570  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"contracts/token/ERC721/ERC721.sol\":4510:4562  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_141\n        /* \"contracts/token/ERC721/ERC721.sol\":4529:4541  _msgSender() */\n      tag_142\n        /* \"contracts/token/ERC721/ERC721.sol\":4529:4539  _msgSender */\n      tag_101\n        /* \"contracts/token/ERC721/ERC721.sol\":4529:4541  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/token/ERC721/ERC721.sol\":4543:4551  operator */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":4553:4561  approved */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":4510:4528  _setApprovalForAll */\n      tag_143\n        /* \"contracts/token/ERC721/ERC721.sol\":4510:4562  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/token/ERC721/ERC721.sol\":4415:4570  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":5466:5745  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_70:\n        /* \"contracts/token/ERC721/ERC721.sol\":5597:5638  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_145\n        /* \"contracts/token/ERC721/ERC721.sol\":5616:5628  _msgSender() */\n      tag_146\n        /* \"contracts/token/ERC721/ERC721.sol\":5616:5626  _msgSender */\n      tag_101\n        /* \"contracts/token/ERC721/ERC721.sol\":5616:5628  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/token/ERC721/ERC721.sol\":5630:5637  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":5597:5615  _isApprovedOrOwner */\n      tag_113\n        /* \"contracts/token/ERC721/ERC721.sol\":5597:5638  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/token/ERC721/ERC721.sol\":5589:5688  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_116\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/token/ERC721/ERC721.sol\":5699:5737  _safeTransfer(from, to, tokenId, data) */\n      tag_149\n        /* \"contracts/token/ERC721/ERC721.sol\":5713:5717  from */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":5719:5721  to */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":5723:5730  tokenId */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":5732:5736  data */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":5699:5712  _safeTransfer */\n      tag_150\n        /* \"contracts/token/ERC721/ERC721.sol\":5699:5737  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/token/ERC721/ERC721.sol\":5466:5745  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":2893:3174  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"contracts/token/ERC721/ERC721.sol\":2966:2979  string memory */\n      0x60\n        /* \"contracts/token/ERC721/ERC721.sol\":2992:3015  _requireMinted(tokenId) */\n      tag_152\n        /* \"contracts/token/ERC721/ERC721.sol\":3007:3014  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":2992:3006  _requireMinted */\n      tag_94\n        /* \"contracts/token/ERC721/ERC721.sol\":2992:3015  _requireMinted(tokenId) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/token/ERC721/ERC721.sol\":3028:3049  string memory baseURI */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":3052:3062  _baseURI() */\n      tag_153\n        /* \"contracts/token/ERC721/ERC721.sol\":3052:3060  _baseURI */\n      tag_154\n        /* \"contracts/token/ERC721/ERC721.sol\":3052:3062  _baseURI() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/token/ERC721/ERC721.sol\":3028:3062  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":3104:3105  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":3086:3093  baseURI */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":3080:3101  bytes(baseURI).length */\n      mload\n        /* \"contracts/token/ERC721/ERC721.sol\":3080:3105  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/token/ERC721/ERC721.sol\":3080:3166  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_155\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_156)\n    tag_155:\n        /* \"contracts/token/ERC721/ERC721.sol\":3132:3139  baseURI */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":3141:3159  tokenId.toString() */\n      tag_157\n        /* \"contracts/token/ERC721/ERC721.sol\":3141:3148  tokenId */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":3141:3157  tokenId.toString */\n      tag_158\n        /* \"contracts/token/ERC721/ERC721.sol\":3141:3159  tokenId.toString() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/token/ERC721/ERC721.sol\":3115:3160  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/token/ERC721/ERC721.sol\":3080:3166  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_156:\n        /* \"contracts/token/ERC721/ERC721.sol\":3073:3166  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":2893:3174  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":4641:4805  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \"contracts/token/ERC721/ERC721.sol\":4738:4742  bool */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":4762:4780  _operatorApprovals */\n      0x05\n        /* \"contracts/token/ERC721/ERC721.sol\":4762:4787  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":4781:4786  owner */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":4762:4787  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC721/ERC721.sol\":4762:4797  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":4788:4796  operator */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":4762:4797  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":4755:4797  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":4641:4805  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_84:\n        /* \"contracts/utils/introspection/ERC165.sol\":939:943  bool */\n      0x00\n        /* \"contracts/utils/introspection/ERC165.sol\":978:1003  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/utils/introspection/ERC165.sol\":963:974  interfaceId */\n      dup3\n        /* \"contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/utils/introspection/ERC165.sol\":956:1003  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":13735:13870  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_94:\n        /* \"contracts/token/ERC721/ERC721.sol\":13817:13833  _exists(tokenId) */\n      tag_164\n        /* \"contracts/token/ERC721/ERC721.sol\":13825:13832  tokenId */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":13817:13824  _exists */\n      tag_165\n        /* \"contracts/token/ERC721/ERC721.sol\":13817:13833  _exists(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/token/ERC721/ERC721.sol\":13809:13862  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_126\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/token/ERC721/ERC721.sol\":13735:13870  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_101:\n        /* \"contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":13048:13222  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_109:\n        /* \"contracts/token/ERC721/ERC721.sol\":13150:13152  to */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":13123:13138  _tokenApprovals */\n      0x04\n        /* \"contracts/token/ERC721/ERC721.sol\":13123:13147  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":13139:13146  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":13123:13147  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":13123:13152  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":13206:13213  tokenId */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":13202:13204  to */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":13168:13214  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":13177:13200  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"contracts/token/ERC721/ERC721.sol\":13192:13199  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":13177:13191  ERC721.ownerOf */\n      tag_49\n        /* \"contracts/token/ERC721/ERC721.sol\":13177:13200  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/token/ERC721/ERC721.sol\":13168:13214  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/token/ERC721/ERC721.sol\":13048:13222  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":7735:7999  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_113:\n        /* \"contracts/token/ERC721/ERC721.sol\":7828:7832  bool */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":7845:7858  address owner */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":7861:7884  ERC721.ownerOf(tokenId) */\n      tag_172\n        /* \"contracts/token/ERC721/ERC721.sol\":7876:7883  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":7861:7875  ERC721.ownerOf */\n      tag_49\n        /* \"contracts/token/ERC721/ERC721.sol\":7861:7884  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/token/ERC721/ERC721.sol\":7845:7884  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":7914:7919  owner */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":7903:7919  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":7903:7910  spender */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":7903:7919  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":7903:7955  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_173\n      jumpi\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":7923:7955  isApprovedForAll(owner, spender) */\n      tag_174\n        /* \"contracts/token/ERC721/ERC721.sol\":7940:7945  owner */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":7947:7954  spender */\n      dup6\n        /* \"contracts/token/ERC721/ERC721.sol\":7923:7939  isApprovedForAll */\n      tag_78\n        /* \"contracts/token/ERC721/ERC721.sol\":7923:7955  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/token/ERC721/ERC721.sol\":7903:7955  spender == owner || isApprovedForAll(owner, spender) */\n    tag_173:\n        /* \"contracts/token/ERC721/ERC721.sol\":7903:7990  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_175\n      jumpi\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":7983:7990  spender */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":7959:7990  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":7959:7979  getApproved(tokenId) */\n      tag_176\n        /* \"contracts/token/ERC721/ERC721.sol\":7971:7978  tokenId */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":7959:7970  getApproved */\n      tag_33\n        /* \"contracts/token/ERC721/ERC721.sol\":7959:7979  getApproved(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/token/ERC721/ERC721.sol\":7959:7990  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":7903:7990  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_175:\n        /* \"contracts/token/ERC721/ERC721.sol\":7895:7991  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":7735:7999  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":11700:12929  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_118:\n        /* \"contracts/token/ERC721/ERC721.sol\":11825:11829  from */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":11798:11829  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":11798:11821  ERC721.ownerOf(tokenId) */\n      tag_178\n        /* \"contracts/token/ERC721/ERC721.sol\":11813:11820  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":11798:11812  ERC721.ownerOf */\n      tag_49\n        /* \"contracts/token/ERC721/ERC721.sol\":11798:11821  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/token/ERC721/ERC721.sol\":11798:11829  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":11790:11871  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/token/ERC721/ERC721.sol\":11904:11905  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":11890:11906  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":11890:11892  to */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":11890:11906  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC721/ERC721.sol\":11882:11947  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/token/ERC721/ERC721.sol\":11960:12002  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_185\n        /* \"contracts/token/ERC721/ERC721.sol\":11981:11985  from */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":11987:11989  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":11991:11998  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":12000:12001  1 */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":11960:11980  _beforeTokenTransfer */\n      tag_186\n        /* \"contracts/token/ERC721/ERC721.sol\":11960:12002  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/token/ERC721/ERC721.sol\":12132:12136  from */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":12105:12136  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":12105:12128  ERC721.ownerOf(tokenId) */\n      tag_187\n        /* \"contracts/token/ERC721/ERC721.sol\":12120:12127  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":12105:12119  ERC721.ownerOf */\n      tag_49\n        /* \"contracts/token/ERC721/ERC721.sol\":12105:12128  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/token/ERC721/ERC721.sol\":12105:12136  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":12097:12178  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_181\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/token/ERC721/ERC721.sol\":12250:12265  _tokenApprovals */\n      0x04\n        /* \"contracts/token/ERC721/ERC721.sol\":12250:12274  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12266:12273  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":12250:12274  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12243:12274  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/token/ERC721/ERC721.sol\":12745:12746  1 */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":12726:12735  _balances */\n      0x03\n        /* \"contracts/token/ERC721/ERC721.sol\":12726:12741  _balances[from] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12736:12740  from */\n      dup6\n        /* \"contracts/token/ERC721/ERC721.sol\":12726:12741  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12726:12746  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":12778:12779  1 */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":12761:12770  _balances */\n      0x03\n        /* \"contracts/token/ERC721/ERC721.sol\":12761:12774  _balances[to] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12771:12773  to */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":12761:12774  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12761:12779  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":12820:12822  to */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":12801:12808  _owners */\n      0x02\n        /* \"contracts/token/ERC721/ERC721.sol\":12801:12817  _owners[tokenId] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12809:12816  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":12801:12817  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":12801:12822  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":12859:12866  tokenId */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":12855:12857  to */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":12840:12867  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":12849:12853  from */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":12840:12867  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/token/ERC721/ERC721.sol\":12880:12921  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_190\n        /* \"contracts/token/ERC721/ERC721.sol\":12900:12904  from */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":12906:12908  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":12910:12917  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":12919:12920  1 */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":12880:12899  _afterTokenTransfer */\n      tag_191\n        /* \"contracts/token/ERC721/ERC721.sol\":12880:12921  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/token/ERC721/ERC721.sol\":11700:12929  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":7010:7127  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_123:\n        /* \"contracts/token/ERC721/ERC721.sol\":7076:7083  address */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":7103:7110  _owners */\n      0x02\n        /* \"contracts/token/ERC721/ERC721.sol\":7103:7119  _owners[tokenId] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":7111:7118  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":7103:7119  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":7096:7119  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":7010:7127  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":8341:8451  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_139:\n        /* \"contracts/token/ERC721/ERC721.sol\":8417:8443  _safeMint(to, tokenId, \"\") */\n      tag_194\n        /* \"contracts/token/ERC721/ERC721.sol\":8427:8429  to */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":8431:8438  tokenId */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":8417:8443  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":8417:8426  _safeMint */\n      tag_195\n        /* \"contracts/token/ERC721/ERC721.sol\":8417:8443  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_194:\n        /* \"contracts/token/ERC721/ERC721.sol\":8341:8451  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":13365:13646  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_143:\n        /* \"contracts/token/ERC721/ERC721.sol\":13486:13494  operator */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":13477:13494  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":13477:13482  owner */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":13477:13494  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC721/ERC721.sol\":13469:13524  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/token/ERC721/ERC721.sol\":13573:13581  approved */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":13535:13553  _operatorApprovals */\n      0x05\n        /* \"contracts/token/ERC721/ERC721.sol\":13535:13560  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":13554:13559  owner */\n      dup6\n        /* \"contracts/token/ERC721/ERC721.sol\":13535:13560  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC721/ERC721.sol\":13535:13570  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":13561:13569  operator */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":13535:13570  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":13535:13581  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":13619:13627  operator */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":13597:13638  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":13612:13617  owner */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":13597:13638  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/token/ERC721/ERC721.sol\":13629:13637  approved */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":13597:13638  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC721/ERC721.sol\":13365:13646  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":6626:6896  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_150:\n        /* \"contracts/token/ERC721/ERC721.sol\":6739:6767  _transfer(from, to, tokenId) */\n      tag_202\n        /* \"contracts/token/ERC721/ERC721.sol\":6749:6753  from */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":6755:6757  to */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":6759:6766  tokenId */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":6739:6748  _transfer */\n      tag_118\n        /* \"contracts/token/ERC721/ERC721.sol\":6739:6767  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/token/ERC721/ERC721.sol\":6786:6833  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_203\n        /* \"contracts/token/ERC721/ERC721.sol\":6809:6813  from */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":6815:6817  to */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":6819:6826  tokenId */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":6828:6832  data */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":6786:6808  _checkOnERC721Received */\n      tag_204\n        /* \"contracts/token/ERC721/ERC721.sol\":6786:6833  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/token/ERC721/ERC721.sol\":6778:6888  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/token/ERC721/ERC721.sol\":6626:6896  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":3423:3517  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_154:\n        /* \"contracts/token/ERC721/ERC721.sol\":3474:3487  string memory */\n      0x60\n        /* \"contracts/token/ERC721/ERC721.sol\":3500:3509  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":3423:3517  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/utils/Strings.sol\":465:1181  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_158:\n        /* \"contracts/utils/Strings.sol\":521:534  string memory */\n      0x60\n        /* \"contracts/utils/Strings.sol\":572:586  uint256 length */\n      0x00\n        /* \"contracts/utils/Strings.sol\":609:610  1 */\n      0x01\n        /* \"contracts/utils/Strings.sol\":589:606  Math.log10(value) */\n      tag_210\n        /* \"contracts/utils/Strings.sol\":600:605  value */\n      dup5\n        /* \"contracts/utils/Strings.sol\":589:599  Math.log10 */\n      tag_211\n        /* \"contracts/utils/Strings.sol\":589:606  Math.log10(value) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/utils/Strings.sol\":589:610  Math.log10(value) + 1 */\n      add\n        /* \"contracts/utils/Strings.sol\":572:610  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"contracts/utils/Strings.sol\":625:645  string memory buffer */\n      0x00\n        /* \"contracts/utils/Strings.sol\":659:665  length */\n      dup2\n        /* \"contracts/utils/Strings.sol\":648:666  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n    tag_212:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_215:\n      pop\n        /* \"contracts/utils/Strings.sol\":625:666  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"contracts/utils/Strings.sol\":681:692  uint256 ptr */\n      0x00\n        /* \"contracts/utils/Strings.sol\":810:816  length */\n      dup3\n        /* \"contracts/utils/Strings.sol\":806:808  32 */\n      0x20\n        /* \"contracts/utils/Strings.sol\":802:817  add(32, length) */\n      add\n        /* \"contracts/utils/Strings.sol\":794:800  buffer */\n      dup3\n        /* \"contracts/utils/Strings.sol\":790:818  add(buffer, add(32, length)) */\n      add\n        /* \"contracts/utils/Strings.sol\":783:818  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"contracts/utils/Strings.sol\":847:1135  while (true) {... */\n    tag_216:\n        /* \"contracts/utils/Strings.sol\":854:858  true */\n      0x01\n        /* \"contracts/utils/Strings.sol\":847:1135  while (true) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/utils/Strings.sol\":879:884  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/Strings.sol\":1021:1029  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"contracts/utils/Strings.sol\":1016:1018  10 */\n      0x0a\n        /* \"contracts/utils/Strings.sol\":1009:1014  value */\n      dup7\n        /* \"contracts/utils/Strings.sol\":1005:1019  mod(value, 10) */\n      mod\n        /* \"contracts/utils/Strings.sol\":1000:1030  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"contracts/utils/Strings.sol\":995:998  ptr */\n      dup2\n        /* \"contracts/utils/Strings.sol\":987:1031  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"contracts/utils/Strings.sol\":1077:1079  10 */\n      0x0a\n        /* \"contracts/utils/Strings.sol\":1068:1079  value /= 10 */\n      dup6\n      dup2\n      tag_218\n      jumpi\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n    tag_218:\n      div\n      swap5\n      pop\n        /* \"contracts/utils/Strings.sol\":1111:1112  0 */\n      0x00\n        /* \"contracts/utils/Strings.sol\":1102:1107  value */\n      dup6\n        /* \"contracts/utils/Strings.sol\":1102:1112  value == 0 */\n      sub\n        /* \"contracts/utils/Strings.sol\":847:1135  while (true) {... */\n      tag_216\n        /* \"contracts/utils/Strings.sol\":1098:1119  if (value == 0) break */\n      jumpi\n        /* \"contracts/utils/Strings.sol\":847:1135  while (true) {... */\n    tag_217:\n        /* \"contracts/utils/Strings.sol\":1156:1162  buffer */\n      dup2\n        /* \"contracts/utils/Strings.sol\":1149:1162  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/utils/Strings.sol\":465:1181  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":7440:7568  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_165:\n        /* \"contracts/token/ERC721/ERC721.sol\":7505:7509  bool */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":7558:7559  0 */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":7529:7560  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":7529:7546  _ownerOf(tokenId) */\n      tag_223\n        /* \"contracts/token/ERC721/ERC721.sol\":7538:7545  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":7529:7537  _ownerOf */\n      tag_123\n        /* \"contracts/token/ERC721/ERC721.sol\":7529:7546  _ownerOf(tokenId) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/token/ERC721/ERC721.sol\":7529:7560  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/token/ERC721/ERC721.sol\":7522:7560  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":7440:7568  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":16019:16135  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":16857:16972  function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":8678:8963  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_195:\n        /* \"contracts/token/ERC721/ERC721.sol\":8773:8791  _mint(to, tokenId) */\n      tag_227\n        /* \"contracts/token/ERC721/ERC721.sol\":8779:8781  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":8783:8790  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":8773:8778  _mint */\n      tag_228\n        /* \"contracts/token/ERC721/ERC721.sol\":8773:8791  _mint(to, tokenId) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/token/ERC721/ERC721.sol\":8824:8877  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_229\n        /* \"contracts/token/ERC721/ERC721.sol\":8855:8856  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":8859:8861  to */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":8863:8870  tokenId */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":8872:8876  data */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":8824:8846  _checkOnERC721Received */\n      tag_204\n        /* \"contracts/token/ERC721/ERC721.sol\":8824:8877  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/token/ERC721/ERC721.sol\":8802:8955  require(... */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_207\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/token/ERC721/ERC721.sol\":8678:8963  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":14434:15287  function _checkOnERC721Received(... */\n    tag_204:\n        /* \"contracts/token/ERC721/ERC721.sol\":14588:14592  bool */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":14609:14624  to.isContract() */\n      tag_233\n        /* \"contracts/token/ERC721/ERC721.sol\":14609:14611  to */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":14609:14622  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_234\n        /* \"contracts/token/ERC721/ERC721.sol\":14609:14624  to.isContract() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/token/ERC721/ERC721.sol\":14605:15280  if (to.isContract()) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/token/ERC721/ERC721.sol\":14661:14663  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":14645:14681  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/token/ERC721/ERC721.sol\":14682:14694  _msgSender() */\n      tag_236\n        /* \"contracts/token/ERC721/ERC721.sol\":14682:14692  _msgSender */\n      tag_101\n        /* \"contracts/token/ERC721/ERC721.sol\":14682:14694  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/token/ERC721/ERC721.sol\":14696:14700  from */\n      dup8\n        /* \"contracts/token/ERC721/ERC721.sol\":14702:14709  tokenId */\n      dup7\n        /* \"contracts/token/ERC721/ERC721.sol\":14711:14715  data */\n      dup7\n        /* \"contracts/token/ERC721/ERC721.sol\":14645:14716  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      0x01\n    tag_239:\n        /* \"contracts/token/ERC721/ERC721.sol\":14641:15225  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_242\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_247\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_246)\n    tag_247:\n      0x60\n      swap2\n      pop\n    tag_246:\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":14903:14904  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":14886:14892  reason */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":14886:14899  reason.length */\n      mload\n        /* \"contracts/token/ERC721/ERC721.sol\":14886:14904  reason.length == 0 */\n      sub\n        /* \"contracts/token/ERC721/ERC721.sol\":14882:15210  if (reason.length == 0) {... */\n      tag_248\n      jumpi\n        /* \"contracts/token/ERC721/ERC721.sol\":14929:14989  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_207\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC721/ERC721.sol\":14882:15210  if (reason.length == 0) {... */\n    tag_248:\n        /* \"contracts/token/ERC721/ERC721.sol\":15160:15166  reason */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":15154:15167  mload(reason) */\n      mload\n        /* \"contracts/token/ERC721/ERC721.sol\":15145:15151  reason */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":15141:15143  32 */\n      0x20\n        /* \"contracts/token/ERC721/ERC721.sol\":15137:15152  add(32, reason) */\n      add\n        /* \"contracts/token/ERC721/ERC721.sol\":15130:15168  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/token/ERC721/ERC721.sol\":14641:15225  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_242:\n        /* \"contracts/token/ERC721/ERC721.sol\":14777:14818  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/token/ERC721/ERC721.sol\":14767:14818  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":14767:14773  retval */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":14767:14818  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/token/ERC721/ERC721.sol\":14760:14818  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_232)\n        /* \"contracts/token/ERC721/ERC721.sol\":14605:15280  if (to.isContract()) {... */\n    tag_235:\n        /* \"contracts/token/ERC721/ERC721.sol\":15264:15268  true */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":15257:15268  return true */\n      swap1\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":14434:15287  function _checkOnERC721Received(... */\n    tag_232:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/Math.sol\":10390:11338  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_211:\n        /* \"contracts/utils/math/Math.sol\":10443:10450  uint256 */\n      0x00\n        /* \"contracts/utils/math/Math.sol\":10463:10477  uint256 result */\n      dup1\n        /* \"contracts/utils/math/Math.sol\":10480:10481  0 */\n      0x00\n        /* \"contracts/utils/math/Math.sol\":10463:10481  uint256 result = 0 */\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":10530:10538  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/utils/math/Math.sol\":10521:10526  value */\n      dup4\n        /* \"contracts/utils/math/Math.sol\":10521:10538  value >= 10 ** 64 */\n      lt\n        /* \"contracts/utils/math/Math.sol\":10517:10623  if (value >= 10 ** 64) {... */\n      tag_254\n      jumpi\n        /* \"contracts/utils/math/Math.sol\":10568:10576  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/utils/math/Math.sol\":10559:10576  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_255\n      jumpi\n      tag_256\n      tag_220\n      jump\t// in\n    tag_256:\n    tag_255:\n      div\n      swap3\n      pop\n        /* \"contracts/utils/math/Math.sol\":10605:10607  64 */\n      0x40\n        /* \"contracts/utils/math/Math.sol\":10595:10607  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":10517:10623  if (value >= 10 ** 64) {... */\n    tag_254:\n        /* \"contracts/utils/math/Math.sol\":10650:10658  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/utils/math/Math.sol\":10641:10646  value */\n      dup4\n        /* \"contracts/utils/math/Math.sol\":10641:10658  value >= 10 ** 32 */\n      lt\n        /* \"contracts/utils/math/Math.sol\":10637:10743  if (value >= 10 ** 32) {... */\n      tag_257\n      jumpi\n        /* \"contracts/utils/math/Math.sol\":10688:10696  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/utils/math/Math.sol\":10679:10696  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_258\n      jumpi\n      tag_259\n      tag_220\n      jump\t// in\n    tag_259:\n    tag_258:\n      div\n      swap3\n      pop\n        /* \"contracts/utils/math/Math.sol\":10725:10727  32 */\n      0x20\n        /* \"contracts/utils/math/Math.sol\":10715:10727  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":10637:10743  if (value >= 10 ** 32) {... */\n    tag_257:\n        /* \"contracts/utils/math/Math.sol\":10770:10778  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/utils/math/Math.sol\":10761:10766  value */\n      dup4\n        /* \"contracts/utils/math/Math.sol\":10761:10778  value >= 10 ** 16 */\n      lt\n        /* \"contracts/utils/math/Math.sol\":10757:10863  if (value >= 10 ** 16) {... */\n      tag_260\n      jumpi\n        /* \"contracts/utils/math/Math.sol\":10808:10816  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/utils/math/Math.sol\":10799:10816  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_261\n      jumpi\n      tag_262\n      tag_220\n      jump\t// in\n    tag_262:\n    tag_261:\n      div\n      swap3\n      pop\n        /* \"contracts/utils/math/Math.sol\":10845:10847  16 */\n      0x10\n        /* \"contracts/utils/math/Math.sol\":10835:10847  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":10757:10863  if (value >= 10 ** 16) {... */\n    tag_260:\n        /* \"contracts/utils/math/Math.sol\":10890:10897  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/utils/math/Math.sol\":10881:10886  value */\n      dup4\n        /* \"contracts/utils/math/Math.sol\":10881:10897  value >= 10 ** 8 */\n      lt\n        /* \"contracts/utils/math/Math.sol\":10877:10980  if (value >= 10 ** 8) {... */\n      tag_263\n      jumpi\n        /* \"contracts/utils/math/Math.sol\":10927:10934  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/utils/math/Math.sol\":10918:10934  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_264\n      jumpi\n      tag_265\n      tag_220\n      jump\t// in\n    tag_265:\n    tag_264:\n      div\n      swap3\n      pop\n        /* \"contracts/utils/math/Math.sol\":10963:10964  8 */\n      0x08\n        /* \"contracts/utils/math/Math.sol\":10953:10964  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":10877:10980  if (value >= 10 ** 8) {... */\n    tag_263:\n        /* \"contracts/utils/math/Math.sol\":11007:11014  10 ** 4 */\n      0x2710\n        /* \"contracts/utils/math/Math.sol\":10998:11003  value */\n      dup4\n        /* \"contracts/utils/math/Math.sol\":10998:11014  value >= 10 ** 4 */\n      lt\n        /* \"contracts/utils/math/Math.sol\":10994:11097  if (value >= 10 ** 4) {... */\n      tag_266\n      jumpi\n        /* \"contracts/utils/math/Math.sol\":11044:11051  10 ** 4 */\n      0x2710\n        /* \"contracts/utils/math/Math.sol\":11035:11051  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_267\n      jumpi\n      tag_268\n      tag_220\n      jump\t// in\n    tag_268:\n    tag_267:\n      div\n      swap3\n      pop\n        /* \"contracts/utils/math/Math.sol\":11080:11081  4 */\n      0x04\n        /* \"contracts/utils/math/Math.sol\":11070:11081  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":10994:11097  if (value >= 10 ** 4) {... */\n    tag_266:\n        /* \"contracts/utils/math/Math.sol\":11124:11131  10 ** 2 */\n      0x64\n        /* \"contracts/utils/math/Math.sol\":11115:11120  value */\n      dup4\n        /* \"contracts/utils/math/Math.sol\":11115:11131  value >= 10 ** 2 */\n      lt\n        /* \"contracts/utils/math/Math.sol\":11111:11214  if (value >= 10 ** 2) {... */\n      tag_269\n      jumpi\n        /* \"contracts/utils/math/Math.sol\":11161:11168  10 ** 2 */\n      0x64\n        /* \"contracts/utils/math/Math.sol\":11152:11168  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_270\n      jumpi\n      tag_271\n      tag_220\n      jump\t// in\n    tag_271:\n    tag_270:\n      div\n      swap3\n      pop\n        /* \"contracts/utils/math/Math.sol\":11197:11198  2 */\n      0x02\n        /* \"contracts/utils/math/Math.sol\":11187:11198  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":11111:11214  if (value >= 10 ** 2) {... */\n    tag_269:\n        /* \"contracts/utils/math/Math.sol\":11241:11248  10 ** 1 */\n      0x0a\n        /* \"contracts/utils/math/Math.sol\":11232:11237  value */\n      dup4\n        /* \"contracts/utils/math/Math.sol\":11232:11248  value >= 10 ** 1 */\n      lt\n        /* \"contracts/utils/math/Math.sol\":11228:11296  if (value >= 10 ** 1) {... */\n      tag_272\n      jumpi\n        /* \"contracts/utils/math/Math.sol\":11279:11280  1 */\n      0x01\n        /* \"contracts/utils/math/Math.sol\":11269:11280  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/utils/math/Math.sol\":11228:11296  if (value >= 10 ** 1) {... */\n    tag_272:\n        /* \"contracts/utils/math/Math.sol\":11324:11330  result */\n      dup1\n        /* \"contracts/utils/math/Math.sol\":11317:11330  return result */\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/math/Math.sol\":10390:11338  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC721/ERC721.sol\":9299:10241  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_228:\n        /* \"contracts/token/ERC721/ERC721.sol\":9393:9394  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":9379:9395  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":9379:9381  to */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":9379:9395  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC721/ERC721.sol\":9371:9432  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/token/ERC721/ERC721.sol\":9452:9468  _exists(tokenId) */\n      tag_277\n        /* \"contracts/token/ERC721/ERC721.sol\":9460:9467  tokenId */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":9452:9459  _exists */\n      tag_165\n        /* \"contracts/token/ERC721/ERC721.sol\":9452:9468  _exists(tokenId) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/token/ERC721/ERC721.sol\":9451:9468  !_exists(tokenId) */\n      iszero\n        /* \"contracts/token/ERC721/ERC721.sol\":9443:9501  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/token/ERC721/ERC721.sol\":9514:9562  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      tag_281\n        /* \"contracts/token/ERC721/ERC721.sol\":9543:9544  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":9547:9549  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":9551:9558  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":9560:9561  1 */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":9514:9534  _beforeTokenTransfer */\n      tag_186\n        /* \"contracts/token/ERC721/ERC721.sol\":9514:9562  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/token/ERC721/ERC721.sol\":9661:9677  _exists(tokenId) */\n      tag_282\n        /* \"contracts/token/ERC721/ERC721.sol\":9669:9676  tokenId */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":9661:9668  _exists */\n      tag_165\n        /* \"contracts/token/ERC721/ERC721.sol\":9661:9677  _exists(tokenId) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/token/ERC721/ERC721.sol\":9660:9677  !_exists(tokenId) */\n      iszero\n        /* \"contracts/token/ERC721/ERC721.sol\":9652:9710  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_280\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"contracts/token/ERC721/ERC721.sol\":10076:10077  1 */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":10059:10068  _balances */\n      0x03\n        /* \"contracts/token/ERC721/ERC721.sol\":10059:10072  _balances[to] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":10069:10071  to */\n      dup5\n        /* \"contracts/token/ERC721/ERC721.sol\":10059:10072  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":10059:10077  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":10120:10122  to */\n      dup2\n        /* \"contracts/token/ERC721/ERC721.sol\":10101:10108  _owners */\n      0x02\n        /* \"contracts/token/ERC721/ERC721.sol\":10101:10117  _owners[tokenId] */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":10109:10116  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":10101:10117  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":10101:10122  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC721/ERC721.sol\":10165:10172  tokenId */\n      dup1\n        /* \"contracts/token/ERC721/ERC721.sol\":10161:10163  to */\n      dup3\n        /* \"contracts/token/ERC721/ERC721.sol\":10140:10173  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC721/ERC721.sol\":10157:10158  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":10140:10173  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/token/ERC721/ERC721.sol\":10186:10233  _afterTokenTransfer(address(0), to, tokenId, 1) */\n      tag_285\n        /* \"contracts/token/ERC721/ERC721.sol\":10214:10215  0 */\n      0x00\n        /* \"contracts/token/ERC721/ERC721.sol\":10218:10220  to */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":10222:10229  tokenId */\n      dup4\n        /* \"contracts/token/ERC721/ERC721.sol\":10231:10232  1 */\n      0x01\n        /* \"contracts/token/ERC721/ERC721.sol\":10186:10205  _afterTokenTransfer */\n      tag_191\n        /* \"contracts/token/ERC721/ERC721.sol\":10186:10233  _afterTokenTransfer(address(0), to, tokenId, 1) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/token/ERC721/ERC721.sol\":9299:10241  function _mint(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Address.sol\":1451:1777  function isContract(address account) internal view returns (bool) {... */\n    tag_234:\n        /* \"contracts/utils/Address.sol\":1511:1515  bool */\n      0x00\n        /* \"contracts/utils/Address.sol\":1768:1769  0 */\n      dup1\n        /* \"contracts/utils/Address.sol\":1746:1753  account */\n      dup3\n        /* \"contracts/utils/Address.sol\":1746:1765  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/utils/Address.sol\":1746:1769  account.code.length > 0 */\n      gt\n        /* \"contracts/utils/Address.sol\":1739:1769  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/utils/Address.sol\":1451:1777  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_287:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_288:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_289:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_290:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_291:\n        /* \"#utility.yul\":561:584   */\n      tag_354\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_290\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_355:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_292:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_357\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_291\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_360\n      tag_288\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":833:952   */\n    tag_359:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_361\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_292\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_293:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_294:\n        /* \"#utility.yul\":1268:1289   */\n      tag_364\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_293\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_366\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_294\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_295:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_296:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_297:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_370:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_298:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_299:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_375\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_295\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2329:2400   */\n      tag_376\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_296\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_377\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_297\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2499:2528   */\n      tag_378\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_298\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_29:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_380\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_299\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_300:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_301:\n        /* \"#utility.yul\":3016:3040   */\n      tag_383\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_300\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_384:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_302:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_386\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_301\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_32:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_389\n      tag_288\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3292:3411   */\n    tag_388:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_390\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_302\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_303:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_304:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_393\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_303\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_305:\n        /* \"#utility.yul\":3872:3896   */\n      tag_395\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_304\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_35:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_397\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_305\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_306:\n        /* \"#utility.yul\":4210:4234   */\n      tag_399\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_304\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_400:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_307:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_402\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_306\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_38:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_405\n      tag_288\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4503:4622   */\n    tag_404:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_406\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_307\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_407\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_302\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_42:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_410\n      tag_288\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5000:5119   */\n    tag_409:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_411\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_307\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_412\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_307\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_413\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_302\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_53:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_416\n      tag_288\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5591:5710   */\n    tag_415:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_417\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_307\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_308:\n        /* \"#utility.yul\":5937:5961   */\n      tag_419\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_300\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_56:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_421\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_308\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_309:\n        /* \"#utility.yul\":6272:6293   */\n      tag_423\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_293\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_424:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_310:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_426\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_309\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_65:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_429\n      tag_288\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6553:6672   */\n    tag_428:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_430\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_307\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_431\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_310\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_311:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_312:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_214:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_313:\n        /* \"#utility.yul\":7452:7479   */\n      tag_436\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_298\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_438\n      tag_214\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7525:7613   */\n    tag_437:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_314:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_440\n      tag_287\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_441\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_313\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_315:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_444\n      tag_214\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7928:7984   */\n    tag_443:\n        /* \"#utility.yul\":8002:8031   */\n      tag_445\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_298\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_316:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_317:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_448\n        /* \"#utility.yul\":8374:8422   */\n      tag_449\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_315\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8358:8423   */\n      tag_314\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_451\n      tag_312\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8498:8610   */\n    tag_450:\n        /* \"#utility.yul\":8619:8673   */\n      tag_452\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_316\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_318:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_455\n      tag_311\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8769:8891   */\n    tag_454:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_456\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_317\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_69:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_459\n      tag_288\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9178:9298   */\n    tag_458:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_460\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_307\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_461\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_307\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_462\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_302\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_464\n      tag_289\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9765:9882   */\n    tag_463:\n        /* \"#utility.yul\":9906:9968   */\n      tag_465\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_318\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_77:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_468\n      tag_288\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10084:10203   */\n    tag_467:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_469\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_307\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_470\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_307\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_319:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_87:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_473:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_475\n      tag_319\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10887:10971   */\n    tag_474:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11203   */\n    tag_320:\n        /* \"#utility.yul\":11123:11157   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11195   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11196   */\n      mstore\n        /* \"#utility.yul\":10983:11203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11575   */\n    tag_321:\n        /* \"#utility.yul\":11351:11354   */\n      0x00\n        /* \"#utility.yul\":11372:11439   */\n      tag_478\n        /* \"#utility.yul\":11436:11438   */\n      0x21\n        /* \"#utility.yul\":11431:11434   */\n      dup4\n        /* \"#utility.yul\":11372:11439   */\n      tag_296\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11365:11439   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11541   */\n      tag_479\n        /* \"#utility.yul\":11537:11540   */\n      dup3\n        /* \"#utility.yul\":11448:11541   */\n      tag_320\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11566:11568   */\n      0x40\n        /* \"#utility.yul\":11561:11564   */\n      dup3\n        /* \"#utility.yul\":11557:11569   */\n      add\n        /* \"#utility.yul\":11550:11569   */\n      swap1\n      pop\n        /* \"#utility.yul\":11209:11575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11581:12000   */\n    tag_99:\n        /* \"#utility.yul\":11747:11751   */\n      0x00\n        /* \"#utility.yul\":11785:11787   */\n      0x20\n        /* \"#utility.yul\":11774:11783   */\n      dup3\n        /* \"#utility.yul\":11770:11788   */\n      add\n        /* \"#utility.yul\":11762:11788   */\n      swap1\n      pop\n        /* \"#utility.yul\":11834:11843   */\n      dup2\n        /* \"#utility.yul\":11828:11832   */\n      dup2\n        /* \"#utility.yul\":11824:11844   */\n      sub\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11809:11818   */\n      dup4\n        /* \"#utility.yul\":11805:11822   */\n      add\n        /* \"#utility.yul\":11798:11845   */\n      mstore\n        /* \"#utility.yul\":11862:11993   */\n      tag_481\n        /* \"#utility.yul\":11988:11992   */\n      dup2\n        /* \"#utility.yul\":11862:11993   */\n      tag_321\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11854:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:12000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12254   */\n    tag_322:\n        /* \"#utility.yul\":12146:12180   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12142:12143   */\n      0x00\n        /* \"#utility.yul\":12134:12140   */\n      dup3\n        /* \"#utility.yul\":12130:12144   */\n      add\n        /* \"#utility.yul\":12123:12181   */\n      mstore\n        /* \"#utility.yul\":12215:12246   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12202:12208   */\n      dup3\n        /* \"#utility.yul\":12198:12213   */\n      add\n        /* \"#utility.yul\":12191:12247   */\n      mstore\n        /* \"#utility.yul\":12006:12254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12260:12626   */\n    tag_323:\n        /* \"#utility.yul\":12402:12405   */\n      0x00\n        /* \"#utility.yul\":12423:12490   */\n      tag_484\n        /* \"#utility.yul\":12487:12489   */\n      0x3d\n        /* \"#utility.yul\":12482:12485   */\n      dup4\n        /* \"#utility.yul\":12423:12490   */\n      tag_296\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12416:12490   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12592   */\n      tag_485\n        /* \"#utility.yul\":12588:12591   */\n      dup3\n        /* \"#utility.yul\":12499:12592   */\n      tag_322\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12617:12619   */\n      0x40\n        /* \"#utility.yul\":12612:12615   */\n      dup3\n        /* \"#utility.yul\":12608:12620   */\n      add\n        /* \"#utility.yul\":12601:12620   */\n      swap1\n      pop\n        /* \"#utility.yul\":12260:12626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:13051   */\n    tag_107:\n        /* \"#utility.yul\":12798:12802   */\n      0x00\n        /* \"#utility.yul\":12836:12838   */\n      0x20\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12839   */\n      add\n        /* \"#utility.yul\":12813:12839   */\n      swap1\n      pop\n        /* \"#utility.yul\":12885:12894   */\n      dup2\n        /* \"#utility.yul\":12879:12883   */\n      dup2\n        /* \"#utility.yul\":12875:12895   */\n      sub\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12849:12896   */\n      mstore\n        /* \"#utility.yul\":12913:13044   */\n      tag_487\n        /* \"#utility.yul\":13039:13043   */\n      dup2\n        /* \"#utility.yul\":12913:13044   */\n      tag_323\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12905:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:13051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13057:13289   */\n    tag_324:\n        /* \"#utility.yul\":13197:13231   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13193:13194   */\n      0x00\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13181:13195   */\n      add\n        /* \"#utility.yul\":13174:13232   */\n      mstore\n        /* \"#utility.yul\":13266:13281   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13261:13263   */\n      0x20\n        /* \"#utility.yul\":13253:13259   */\n      dup3\n        /* \"#utility.yul\":13249:13264   */\n      add\n        /* \"#utility.yul\":13242:13282   */\n      mstore\n        /* \"#utility.yul\":13057:13289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13295:13661   */\n    tag_325:\n        /* \"#utility.yul\":13437:13440   */\n      0x00\n        /* \"#utility.yul\":13458:13525   */\n      tag_490\n        /* \"#utility.yul\":13522:13524   */\n      0x2d\n        /* \"#utility.yul\":13517:13520   */\n      dup4\n        /* \"#utility.yul\":13458:13525   */\n      tag_296\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13451:13525   */\n      swap2\n      pop\n        /* \"#utility.yul\":13534:13627   */\n      tag_491\n        /* \"#utility.yul\":13623:13626   */\n      dup3\n        /* \"#utility.yul\":13534:13627   */\n      tag_324\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13652:13654   */\n      0x40\n        /* \"#utility.yul\":13647:13650   */\n      dup3\n        /* \"#utility.yul\":13643:13655   */\n      add\n        /* \"#utility.yul\":13636:13655   */\n      swap1\n      pop\n        /* \"#utility.yul\":13295:13661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13667:14086   */\n    tag_116:\n        /* \"#utility.yul\":13833:13837   */\n      0x00\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13860:13869   */\n      dup3\n        /* \"#utility.yul\":13856:13874   */\n      add\n        /* \"#utility.yul\":13848:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13920:13929   */\n      dup2\n        /* \"#utility.yul\":13914:13918   */\n      dup2\n        /* \"#utility.yul\":13910:13930   */\n      sub\n        /* \"#utility.yul\":13906:13907   */\n      0x00\n        /* \"#utility.yul\":13895:13904   */\n      dup4\n        /* \"#utility.yul\":13891:13908   */\n      add\n        /* \"#utility.yul\":13884:13931   */\n      mstore\n        /* \"#utility.yul\":13948:14079   */\n      tag_493\n        /* \"#utility.yul\":14074:14078   */\n      dup2\n        /* \"#utility.yul\":13948:14079   */\n      tag_325\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13940:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":13667:14086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14092:14266   */\n    tag_326:\n        /* \"#utility.yul\":14232:14258   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14220:14226   */\n      dup3\n        /* \"#utility.yul\":14216:14230   */\n      add\n        /* \"#utility.yul\":14209:14259   */\n      mstore\n        /* \"#utility.yul\":14092:14266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14272:14638   */\n    tag_327:\n        /* \"#utility.yul\":14414:14417   */\n      0x00\n        /* \"#utility.yul\":14435:14502   */\n      tag_496\n        /* \"#utility.yul\":14499:14501   */\n      0x18\n        /* \"#utility.yul\":14494:14497   */\n      dup4\n        /* \"#utility.yul\":14435:14502   */\n      tag_296\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14428:14502   */\n      swap2\n      pop\n        /* \"#utility.yul\":14511:14604   */\n      tag_497\n        /* \"#utility.yul\":14600:14603   */\n      dup3\n        /* \"#utility.yul\":14511:14604   */\n      tag_326\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14624:14627   */\n      dup3\n        /* \"#utility.yul\":14620:14632   */\n      add\n        /* \"#utility.yul\":14613:14632   */\n      swap1\n      pop\n        /* \"#utility.yul\":14272:14638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14644:15063   */\n    tag_126:\n        /* \"#utility.yul\":14810:14814   */\n      0x00\n        /* \"#utility.yul\":14848:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14846   */\n      dup3\n        /* \"#utility.yul\":14833:14851   */\n      add\n        /* \"#utility.yul\":14825:14851   */\n      swap1\n      pop\n        /* \"#utility.yul\":14897:14906   */\n      dup2\n        /* \"#utility.yul\":14891:14895   */\n      dup2\n        /* \"#utility.yul\":14887:14907   */\n      sub\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14872:14881   */\n      dup4\n        /* \"#utility.yul\":14868:14885   */\n      add\n        /* \"#utility.yul\":14861:14908   */\n      mstore\n        /* \"#utility.yul\":14925:15056   */\n      tag_499\n        /* \"#utility.yul\":15051:15055   */\n      dup2\n        /* \"#utility.yul\":14925:15056   */\n      tag_327\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14917:15056   */\n      swap1\n      pop\n        /* \"#utility.yul\":14644:15063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15069:15297   */\n    tag_328:\n        /* \"#utility.yul\":15209:15243   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":15205:15206   */\n      0x00\n        /* \"#utility.yul\":15197:15203   */\n      dup3\n        /* \"#utility.yul\":15193:15207   */\n      add\n        /* \"#utility.yul\":15186:15244   */\n      mstore\n        /* \"#utility.yul\":15278:15289   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15273:15275   */\n      0x20\n        /* \"#utility.yul\":15265:15271   */\n      dup3\n        /* \"#utility.yul\":15261:15276   */\n      add\n        /* \"#utility.yul\":15254:15290   */\n      mstore\n        /* \"#utility.yul\":15069:15297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15669   */\n    tag_329:\n        /* \"#utility.yul\":15445:15448   */\n      0x00\n        /* \"#utility.yul\":15466:15533   */\n      tag_502\n        /* \"#utility.yul\":15530:15532   */\n      0x29\n        /* \"#utility.yul\":15525:15528   */\n      dup4\n        /* \"#utility.yul\":15466:15533   */\n      tag_296\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15459:15533   */\n      swap2\n      pop\n        /* \"#utility.yul\":15542:15635   */\n      tag_503\n        /* \"#utility.yul\":15631:15634   */\n      dup3\n        /* \"#utility.yul\":15542:15635   */\n      tag_328\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":15660:15662   */\n      0x40\n        /* \"#utility.yul\":15655:15658   */\n      dup3\n        /* \"#utility.yul\":15651:15663   */\n      add\n        /* \"#utility.yul\":15644:15663   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:16094   */\n    tag_130:\n        /* \"#utility.yul\":15841:15845   */\n      0x00\n        /* \"#utility.yul\":15879:15881   */\n      0x20\n        /* \"#utility.yul\":15868:15877   */\n      dup3\n        /* \"#utility.yul\":15864:15882   */\n      add\n        /* \"#utility.yul\":15856:15882   */\n      swap1\n      pop\n        /* \"#utility.yul\":15928:15937   */\n      dup2\n        /* \"#utility.yul\":15922:15926   */\n      dup2\n        /* \"#utility.yul\":15918:15938   */\n      sub\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15903:15912   */\n      dup4\n        /* \"#utility.yul\":15899:15916   */\n      add\n        /* \"#utility.yul\":15892:15939   */\n      mstore\n        /* \"#utility.yul\":15956:16087   */\n      tag_505\n        /* \"#utility.yul\":16082:16086   */\n      dup2\n        /* \"#utility.yul\":15956:16087   */\n      tag_329\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15948:16087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:16094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16100:16248   */\n    tag_330:\n        /* \"#utility.yul\":16202:16213   */\n      0x00\n        /* \"#utility.yul\":16239:16242   */\n      dup2\n        /* \"#utility.yul\":16224:16242   */\n      swap1\n      pop\n        /* \"#utility.yul\":16100:16248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16254:16644   */\n    tag_331:\n        /* \"#utility.yul\":16360:16363   */\n      0x00\n        /* \"#utility.yul\":16388:16427   */\n      tag_508\n        /* \"#utility.yul\":16421:16426   */\n      dup3\n        /* \"#utility.yul\":16388:16427   */\n      tag_295\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":16443:16532   */\n      tag_509\n        /* \"#utility.yul\":16525:16531   */\n      dup2\n        /* \"#utility.yul\":16520:16523   */\n      dup6\n        /* \"#utility.yul\":16443:16532   */\n      tag_330\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":16436:16532   */\n      swap4\n      pop\n        /* \"#utility.yul\":16541:16606   */\n      tag_510\n        /* \"#utility.yul\":16599:16605   */\n      dup2\n        /* \"#utility.yul\":16594:16597   */\n      dup6\n        /* \"#utility.yul\":16587:16591   */\n      0x20\n        /* \"#utility.yul\":16580:16585   */\n      dup7\n        /* \"#utility.yul\":16576:16592   */\n      add\n        /* \"#utility.yul\":16541:16606   */\n      tag_297\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16631:16637   */\n      dup1\n        /* \"#utility.yul\":16626:16629   */\n      dup5\n        /* \"#utility.yul\":16622:16638   */\n      add\n        /* \"#utility.yul\":16615:16638   */\n      swap2\n      pop\n        /* \"#utility.yul\":16364:16644   */\n      pop\n        /* \"#utility.yul\":16254:16644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16650:17085   */\n    tag_160:\n        /* \"#utility.yul\":16830:16833   */\n      0x00\n        /* \"#utility.yul\":16852:16947   */\n      tag_512\n        /* \"#utility.yul\":16943:16946   */\n      dup3\n        /* \"#utility.yul\":16934:16940   */\n      dup6\n        /* \"#utility.yul\":16852:16947   */\n      tag_331\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16845:16947   */\n      swap2\n      pop\n        /* \"#utility.yul\":16964:17059   */\n      tag_513\n        /* \"#utility.yul\":17055:17058   */\n      dup3\n        /* \"#utility.yul\":17046:17052   */\n      dup5\n        /* \"#utility.yul\":16964:17059   */\n      tag_331\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16957:17059   */\n      swap2\n      pop\n        /* \"#utility.yul\":17076:17079   */\n      dup2\n        /* \"#utility.yul\":17069:17079   */\n      swap1\n      pop\n        /* \"#utility.yul\":16650:17085   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17091:17315   */\n    tag_332:\n        /* \"#utility.yul\":17231:17265   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":17227:17228   */\n      0x00\n        /* \"#utility.yul\":17219:17225   */\n      dup3\n        /* \"#utility.yul\":17215:17229   */\n      add\n        /* \"#utility.yul\":17208:17266   */\n      mstore\n        /* \"#utility.yul\":17300:17307   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17295:17297   */\n      0x20\n        /* \"#utility.yul\":17287:17293   */\n      dup3\n        /* \"#utility.yul\":17283:17298   */\n      add\n        /* \"#utility.yul\":17276:17308   */\n      mstore\n        /* \"#utility.yul\":17091:17315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17321:17687   */\n    tag_333:\n        /* \"#utility.yul\":17463:17466   */\n      0x00\n        /* \"#utility.yul\":17484:17551   */\n      tag_516\n        /* \"#utility.yul\":17548:17550   */\n      0x25\n        /* \"#utility.yul\":17543:17546   */\n      dup4\n        /* \"#utility.yul\":17484:17551   */\n      tag_296\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17477:17551   */\n      swap2\n      pop\n        /* \"#utility.yul\":17560:17653   */\n      tag_517\n        /* \"#utility.yul\":17649:17652   */\n      dup3\n        /* \"#utility.yul\":17560:17653   */\n      tag_332\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17678:17680   */\n      0x40\n        /* \"#utility.yul\":17673:17676   */\n      dup3\n        /* \"#utility.yul\":17669:17681   */\n      add\n        /* \"#utility.yul\":17662:17681   */\n      swap1\n      pop\n        /* \"#utility.yul\":17321:17687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17693:18112   */\n    tag_181:\n        /* \"#utility.yul\":17859:17863   */\n      0x00\n        /* \"#utility.yul\":17897:17899   */\n      0x20\n        /* \"#utility.yul\":17886:17895   */\n      dup3\n        /* \"#utility.yul\":17882:17900   */\n      add\n        /* \"#utility.yul\":17874:17900   */\n      swap1\n      pop\n        /* \"#utility.yul\":17946:17955   */\n      dup2\n        /* \"#utility.yul\":17940:17944   */\n      dup2\n        /* \"#utility.yul\":17936:17956   */\n      sub\n        /* \"#utility.yul\":17932:17933   */\n      0x00\n        /* \"#utility.yul\":17921:17930   */\n      dup4\n        /* \"#utility.yul\":17917:17934   */\n      add\n        /* \"#utility.yul\":17910:17957   */\n      mstore\n        /* \"#utility.yul\":17974:18105   */\n      tag_519\n        /* \"#utility.yul\":18100:18104   */\n      dup2\n        /* \"#utility.yul\":17974:18105   */\n      tag_333\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":17966:18105   */\n      swap1\n      pop\n        /* \"#utility.yul\":17693:18112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18118:18341   */\n    tag_334:\n        /* \"#utility.yul\":18258:18292   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":18254:18255   */\n      0x00\n        /* \"#utility.yul\":18246:18252   */\n      dup3\n        /* \"#utility.yul\":18242:18256   */\n      add\n        /* \"#utility.yul\":18235:18293   */\n      mstore\n        /* \"#utility.yul\":18327:18333   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18322:18324   */\n      0x20\n        /* \"#utility.yul\":18314:18320   */\n      dup3\n        /* \"#utility.yul\":18310:18325   */\n      add\n        /* \"#utility.yul\":18303:18334   */\n      mstore\n        /* \"#utility.yul\":18118:18341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18347:18713   */\n    tag_335:\n        /* \"#utility.yul\":18489:18492   */\n      0x00\n        /* \"#utility.yul\":18510:18577   */\n      tag_522\n        /* \"#utility.yul\":18574:18576   */\n      0x24\n        /* \"#utility.yul\":18569:18572   */\n      dup4\n        /* \"#utility.yul\":18510:18577   */\n      tag_296\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":18503:18577   */\n      swap2\n      pop\n        /* \"#utility.yul\":18586:18679   */\n      tag_523\n        /* \"#utility.yul\":18675:18678   */\n      dup3\n        /* \"#utility.yul\":18586:18679   */\n      tag_334\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18704:18706   */\n      0x40\n        /* \"#utility.yul\":18699:18702   */\n      dup3\n        /* \"#utility.yul\":18695:18707   */\n      add\n        /* \"#utility.yul\":18688:18707   */\n      swap1\n      pop\n        /* \"#utility.yul\":18347:18713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18719:19138   */\n    tag_184:\n        /* \"#utility.yul\":18885:18889   */\n      0x00\n        /* \"#utility.yul\":18923:18925   */\n      0x20\n        /* \"#utility.yul\":18912:18921   */\n      dup3\n        /* \"#utility.yul\":18908:18926   */\n      add\n        /* \"#utility.yul\":18900:18926   */\n      swap1\n      pop\n        /* \"#utility.yul\":18972:18981   */\n      dup2\n        /* \"#utility.yul\":18966:18970   */\n      dup2\n        /* \"#utility.yul\":18962:18982   */\n      sub\n        /* \"#utility.yul\":18958:18959   */\n      0x00\n        /* \"#utility.yul\":18947:18956   */\n      dup4\n        /* \"#utility.yul\":18943:18960   */\n      add\n        /* \"#utility.yul\":18936:18983   */\n      mstore\n        /* \"#utility.yul\":19000:19131   */\n      tag_525\n        /* \"#utility.yul\":19126:19130   */\n      dup2\n        /* \"#utility.yul\":19000:19131   */\n      tag_335\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":18992:19131   */\n      swap1\n      pop\n        /* \"#utility.yul\":18719:19138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19144:19319   */\n    tag_336:\n        /* \"#utility.yul\":19284:19311   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":19280:19281   */\n      0x00\n        /* \"#utility.yul\":19272:19278   */\n      dup3\n        /* \"#utility.yul\":19268:19282   */\n      add\n        /* \"#utility.yul\":19261:19312   */\n      mstore\n        /* \"#utility.yul\":19144:19319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19325:19691   */\n    tag_337:\n        /* \"#utility.yul\":19467:19470   */\n      0x00\n        /* \"#utility.yul\":19488:19555   */\n      tag_528\n        /* \"#utility.yul\":19552:19554   */\n      0x19\n        /* \"#utility.yul\":19547:19550   */\n      dup4\n        /* \"#utility.yul\":19488:19555   */\n      tag_296\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":19481:19555   */\n      swap2\n      pop\n        /* \"#utility.yul\":19564:19657   */\n      tag_529\n        /* \"#utility.yul\":19653:19656   */\n      dup3\n        /* \"#utility.yul\":19564:19657   */\n      tag_336\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":19682:19684   */\n      0x20\n        /* \"#utility.yul\":19677:19680   */\n      dup3\n        /* \"#utility.yul\":19673:19685   */\n      add\n        /* \"#utility.yul\":19666:19685   */\n      swap1\n      pop\n        /* \"#utility.yul\":19325:19691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19697:20116   */\n    tag_199:\n        /* \"#utility.yul\":19863:19867   */\n      0x00\n        /* \"#utility.yul\":19901:19903   */\n      0x20\n        /* \"#utility.yul\":19890:19899   */\n      dup3\n        /* \"#utility.yul\":19886:19904   */\n      add\n        /* \"#utility.yul\":19878:19904   */\n      swap1\n      pop\n        /* \"#utility.yul\":19950:19959   */\n      dup2\n        /* \"#utility.yul\":19944:19948   */\n      dup2\n        /* \"#utility.yul\":19940:19960   */\n      sub\n        /* \"#utility.yul\":19936:19937   */\n      0x00\n        /* \"#utility.yul\":19925:19934   */\n      dup4\n        /* \"#utility.yul\":19921:19938   */\n      add\n        /* \"#utility.yul\":19914:19961   */\n      mstore\n        /* \"#utility.yul\":19978:20109   */\n      tag_531\n        /* \"#utility.yul\":20104:20108   */\n      dup2\n        /* \"#utility.yul\":19978:20109   */\n      tag_337\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19970:20109   */\n      swap1\n      pop\n        /* \"#utility.yul\":19697:20116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20122:20359   */\n    tag_338:\n        /* \"#utility.yul\":20262:20296   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":20258:20259   */\n      0x00\n        /* \"#utility.yul\":20250:20256   */\n      dup3\n        /* \"#utility.yul\":20246:20260   */\n      add\n        /* \"#utility.yul\":20239:20297   */\n      mstore\n        /* \"#utility.yul\":20331:20351   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":20326:20328   */\n      0x20\n        /* \"#utility.yul\":20318:20324   */\n      dup3\n        /* \"#utility.yul\":20314:20329   */\n      add\n        /* \"#utility.yul\":20307:20352   */\n      mstore\n        /* \"#utility.yul\":20122:20359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20365:20731   */\n    tag_339:\n        /* \"#utility.yul\":20507:20510   */\n      0x00\n        /* \"#utility.yul\":20528:20595   */\n      tag_534\n        /* \"#utility.yul\":20592:20594   */\n      0x32\n        /* \"#utility.yul\":20587:20590   */\n      dup4\n        /* \"#utility.yul\":20528:20595   */\n      tag_296\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":20521:20595   */\n      swap2\n      pop\n        /* \"#utility.yul\":20604:20697   */\n      tag_535\n        /* \"#utility.yul\":20693:20696   */\n      dup3\n        /* \"#utility.yul\":20604:20697   */\n      tag_338\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":20722:20724   */\n      0x40\n        /* \"#utility.yul\":20717:20720   */\n      dup3\n        /* \"#utility.yul\":20713:20725   */\n      add\n        /* \"#utility.yul\":20706:20725   */\n      swap1\n      pop\n        /* \"#utility.yul\":20365:20731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20737:21156   */\n    tag_207:\n        /* \"#utility.yul\":20903:20907   */\n      0x00\n        /* \"#utility.yul\":20941:20943   */\n      0x20\n        /* \"#utility.yul\":20930:20939   */\n      dup3\n        /* \"#utility.yul\":20926:20944   */\n      add\n        /* \"#utility.yul\":20918:20944   */\n      swap1\n      pop\n        /* \"#utility.yul\":20990:20999   */\n      dup2\n        /* \"#utility.yul\":20984:20988   */\n      dup2\n        /* \"#utility.yul\":20980:21000   */\n      sub\n        /* \"#utility.yul\":20976:20977   */\n      0x00\n        /* \"#utility.yul\":20965:20974   */\n      dup4\n        /* \"#utility.yul\":20961:20978   */\n      add\n        /* \"#utility.yul\":20954:21001   */\n      mstore\n        /* \"#utility.yul\":21018:21149   */\n      tag_537\n        /* \"#utility.yul\":21144:21148   */\n      dup2\n        /* \"#utility.yul\":21018:21149   */\n      tag_339\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":21010:21149   */\n      swap1\n      pop\n        /* \"#utility.yul\":20737:21156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21162:21342   */\n    tag_220:\n        /* \"#utility.yul\":21210:21287   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21207:21208   */\n      0x00\n        /* \"#utility.yul\":21200:21288   */\n      mstore\n        /* \"#utility.yul\":21307:21311   */\n      0x12\n        /* \"#utility.yul\":21304:21305   */\n      0x04\n        /* \"#utility.yul\":21297:21312   */\n      mstore\n        /* \"#utility.yul\":21331:21335   */\n      0x24\n        /* \"#utility.yul\":21328:21329   */\n      0x00\n        /* \"#utility.yul\":21321:21336   */\n      revert\n        /* \"#utility.yul\":21348:21446   */\n    tag_340:\n        /* \"#utility.yul\":21399:21405   */\n      0x00\n        /* \"#utility.yul\":21433:21438   */\n      dup2\n        /* \"#utility.yul\":21427:21439   */\n      mload\n        /* \"#utility.yul\":21417:21439   */\n      swap1\n      pop\n        /* \"#utility.yul\":21348:21446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21452:21620   */\n    tag_341:\n        /* \"#utility.yul\":21535:21546   */\n      0x00\n        /* \"#utility.yul\":21569:21575   */\n      dup3\n        /* \"#utility.yul\":21564:21567   */\n      dup3\n        /* \"#utility.yul\":21557:21576   */\n      mstore\n        /* \"#utility.yul\":21609:21613   */\n      0x20\n        /* \"#utility.yul\":21604:21607   */\n      dup3\n        /* \"#utility.yul\":21600:21614   */\n      add\n        /* \"#utility.yul\":21585:21614   */\n      swap1\n      pop\n        /* \"#utility.yul\":21452:21620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21626:21999   */\n    tag_342:\n        /* \"#utility.yul\":21712:21715   */\n      0x00\n        /* \"#utility.yul\":21740:21778   */\n      tag_542\n        /* \"#utility.yul\":21772:21777   */\n      dup3\n        /* \"#utility.yul\":21740:21778   */\n      tag_340\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":21794:21864   */\n      tag_543\n        /* \"#utility.yul\":21857:21863   */\n      dup2\n        /* \"#utility.yul\":21852:21855   */\n      dup6\n        /* \"#utility.yul\":21794:21864   */\n      tag_341\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":21787:21864   */\n      swap4\n      pop\n        /* \"#utility.yul\":21873:21938   */\n      tag_544\n        /* \"#utility.yul\":21931:21937   */\n      dup2\n        /* \"#utility.yul\":21926:21929   */\n      dup6\n        /* \"#utility.yul\":21919:21923   */\n      0x20\n        /* \"#utility.yul\":21912:21917   */\n      dup7\n        /* \"#utility.yul\":21908:21924   */\n      add\n        /* \"#utility.yul\":21873:21938   */\n      tag_297\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":21963:21992   */\n      tag_545\n        /* \"#utility.yul\":21985:21991   */\n      dup2\n        /* \"#utility.yul\":21963:21992   */\n      tag_298\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":21958:21961   */\n      dup5\n        /* \"#utility.yul\":21954:21993   */\n      add\n        /* \"#utility.yul\":21947:21993   */\n      swap2\n      pop\n        /* \"#utility.yul\":21716:21999   */\n      pop\n        /* \"#utility.yul\":21626:21999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22005:22645   */\n    tag_238:\n        /* \"#utility.yul\":22200:22204   */\n      0x00\n        /* \"#utility.yul\":22238:22241   */\n      0x80\n        /* \"#utility.yul\":22227:22236   */\n      dup3\n        /* \"#utility.yul\":22223:22242   */\n      add\n        /* \"#utility.yul\":22215:22242   */\n      swap1\n      pop\n        /* \"#utility.yul\":22252:22323   */\n      tag_547\n        /* \"#utility.yul\":22320:22321   */\n      0x00\n        /* \"#utility.yul\":22309:22318   */\n      dup4\n        /* \"#utility.yul\":22305:22322   */\n      add\n        /* \"#utility.yul\":22296:22302   */\n      dup8\n        /* \"#utility.yul\":22252:22323   */\n      tag_305\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":22333:22405   */\n      tag_548\n        /* \"#utility.yul\":22401:22403   */\n      0x20\n        /* \"#utility.yul\":22390:22399   */\n      dup4\n        /* \"#utility.yul\":22386:22404   */\n      add\n        /* \"#utility.yul\":22377:22383   */\n      dup7\n        /* \"#utility.yul\":22333:22405   */\n      tag_305\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":22415:22487   */\n      tag_549\n        /* \"#utility.yul\":22483:22485   */\n      0x40\n        /* \"#utility.yul\":22472:22481   */\n      dup4\n        /* \"#utility.yul\":22468:22486   */\n      add\n        /* \"#utility.yul\":22459:22465   */\n      dup6\n        /* \"#utility.yul\":22415:22487   */\n      tag_308\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":22534:22543   */\n      dup2\n        /* \"#utility.yul\":22528:22532   */\n      dup2\n        /* \"#utility.yul\":22524:22544   */\n      sub\n        /* \"#utility.yul\":22519:22521   */\n      0x60\n        /* \"#utility.yul\":22508:22517   */\n      dup4\n        /* \"#utility.yul\":22504:22522   */\n      add\n        /* \"#utility.yul\":22497:22545   */\n      mstore\n        /* \"#utility.yul\":22562:22638   */\n      tag_550\n        /* \"#utility.yul\":22633:22637   */\n      dup2\n        /* \"#utility.yul\":22624:22630   */\n      dup5\n        /* \"#utility.yul\":22562:22638   */\n      tag_342\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":22554:22638   */\n      swap1\n      pop\n        /* \"#utility.yul\":22005:22645   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22651:22792   */\n    tag_343:\n        /* \"#utility.yul\":22707:22712   */\n      0x00\n        /* \"#utility.yul\":22738:22744   */\n      dup2\n        /* \"#utility.yul\":22732:22745   */\n      mload\n        /* \"#utility.yul\":22723:22745   */\n      swap1\n      pop\n        /* \"#utility.yul\":22754:22786   */\n      tag_552\n        /* \"#utility.yul\":22780:22785   */\n      dup2\n        /* \"#utility.yul\":22754:22786   */\n      tag_291\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":22651:22792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22798:23147   */\n    tag_241:\n        /* \"#utility.yul\":22867:22873   */\n      0x00\n        /* \"#utility.yul\":22916:22918   */\n      0x20\n        /* \"#utility.yul\":22904:22913   */\n      dup3\n        /* \"#utility.yul\":22895:22902   */\n      dup5\n        /* \"#utility.yul\":22891:22914   */\n      sub\n        /* \"#utility.yul\":22887:22919   */\n      slt\n        /* \"#utility.yul\":22884:23003   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":22922:23001   */\n      tag_555\n      tag_288\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":22884:23003   */\n    tag_554:\n        /* \"#utility.yul\":23042:23043   */\n      0x00\n        /* \"#utility.yul\":23067:23130   */\n      tag_556\n        /* \"#utility.yul\":23122:23129   */\n      dup5\n        /* \"#utility.yul\":23113:23119   */\n      dup3\n        /* \"#utility.yul\":23102:23111   */\n      dup6\n        /* \"#utility.yul\":23098:23120   */\n      add\n        /* \"#utility.yul\":23067:23130   */\n      tag_343\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":23057:23130   */\n      swap2\n      pop\n        /* \"#utility.yul\":23013:23140   */\n      pop\n        /* \"#utility.yul\":22798:23147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23153:23335   */\n    tag_344:\n        /* \"#utility.yul\":23293:23327   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":23289:23290   */\n      0x00\n        /* \"#utility.yul\":23281:23287   */\n      dup3\n        /* \"#utility.yul\":23277:23291   */\n      add\n        /* \"#utility.yul\":23270:23328   */\n      mstore\n        /* \"#utility.yul\":23153:23335   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23341:23707   */\n    tag_345:\n        /* \"#utility.yul\":23483:23486   */\n      0x00\n        /* \"#utility.yul\":23504:23571   */\n      tag_559\n        /* \"#utility.yul\":23568:23570   */\n      0x20\n        /* \"#utility.yul\":23563:23566   */\n      dup4\n        /* \"#utility.yul\":23504:23571   */\n      tag_296\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":23497:23571   */\n      swap2\n      pop\n        /* \"#utility.yul\":23580:23673   */\n      tag_560\n        /* \"#utility.yul\":23669:23672   */\n      dup3\n        /* \"#utility.yul\":23580:23673   */\n      tag_344\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":23698:23700   */\n      0x20\n        /* \"#utility.yul\":23693:23696   */\n      dup3\n        /* \"#utility.yul\":23689:23701   */\n      add\n        /* \"#utility.yul\":23682:23701   */\n      swap1\n      pop\n        /* \"#utility.yul\":23341:23707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23713:24132   */\n    tag_276:\n        /* \"#utility.yul\":23879:23883   */\n      0x00\n        /* \"#utility.yul\":23917:23919   */\n      0x20\n        /* \"#utility.yul\":23906:23915   */\n      dup3\n        /* \"#utility.yul\":23902:23920   */\n      add\n        /* \"#utility.yul\":23894:23920   */\n      swap1\n      pop\n        /* \"#utility.yul\":23966:23975   */\n      dup2\n        /* \"#utility.yul\":23960:23964   */\n      dup2\n        /* \"#utility.yul\":23956:23976   */\n      sub\n        /* \"#utility.yul\":23952:23953   */\n      0x00\n        /* \"#utility.yul\":23941:23950   */\n      dup4\n        /* \"#utility.yul\":23937:23954   */\n      add\n        /* \"#utility.yul\":23930:23977   */\n      mstore\n        /* \"#utility.yul\":23994:24125   */\n      tag_562\n        /* \"#utility.yul\":24120:24124   */\n      dup2\n        /* \"#utility.yul\":23994:24125   */\n      tag_345\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":23986:24125   */\n      swap1\n      pop\n        /* \"#utility.yul\":23713:24132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24138:24316   */\n    tag_346:\n        /* \"#utility.yul\":24278:24308   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":24274:24275   */\n      0x00\n        /* \"#utility.yul\":24266:24272   */\n      dup3\n        /* \"#utility.yul\":24262:24276   */\n      add\n        /* \"#utility.yul\":24255:24309   */\n      mstore\n        /* \"#utility.yul\":24138:24316   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24322:24688   */\n    tag_347:\n        /* \"#utility.yul\":24464:24467   */\n      0x00\n        /* \"#utility.yul\":24485:24552   */\n      tag_565\n        /* \"#utility.yul\":24549:24551   */\n      0x1c\n        /* \"#utility.yul\":24544:24547   */\n      dup4\n        /* \"#utility.yul\":24485:24552   */\n      tag_296\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":24478:24552   */\n      swap2\n      pop\n        /* \"#utility.yul\":24561:24654   */\n      tag_566\n        /* \"#utility.yul\":24650:24653   */\n      dup3\n        /* \"#utility.yul\":24561:24654   */\n      tag_346\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":24679:24681   */\n      0x20\n        /* \"#utility.yul\":24674:24677   */\n      dup3\n        /* \"#utility.yul\":24670:24682   */\n      add\n        /* \"#utility.yul\":24663:24682   */\n      swap1\n      pop\n        /* \"#utility.yul\":24322:24688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24694:25113   */\n    tag_280:\n        /* \"#utility.yul\":24860:24864   */\n      0x00\n        /* \"#utility.yul\":24898:24900   */\n      0x20\n        /* \"#utility.yul\":24887:24896   */\n      dup3\n        /* \"#utility.yul\":24883:24901   */\n      add\n        /* \"#utility.yul\":24875:24901   */\n      swap1\n      pop\n        /* \"#utility.yul\":24947:24956   */\n      dup2\n        /* \"#utility.yul\":24941:24945   */\n      dup2\n        /* \"#utility.yul\":24937:24957   */\n      sub\n        /* \"#utility.yul\":24933:24934   */\n      0x00\n        /* \"#utility.yul\":24922:24931   */\n      dup4\n        /* \"#utility.yul\":24918:24935   */\n      add\n        /* \"#utility.yul\":24911:24958   */\n      mstore\n        /* \"#utility.yul\":24975:25106   */\n      tag_568\n        /* \"#utility.yul\":25101:25105   */\n      dup2\n        /* \"#utility.yul\":24975:25106   */\n      tag_347\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":24967:25106   */\n      swap1\n      pop\n        /* \"#utility.yul\":24694:25113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202e5102cb28b8b082e5ef7ca6ff1f18eed490122416856184696a0277b48ed26d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:11",
																"statements": []
															},
															"src": "1701:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:11"
															},
															"nodeType": "YulIf",
															"src": "2117:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:11",
														"type": ""
													}
												],
												"src": "1862:434:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:11"
															},
															"nodeType": "YulIf",
															"src": "2399:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:11",
														"type": ""
													}
												],
												"src": "2316:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:11"
															},
															"nodeType": "YulIf",
															"src": "2801:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:11",
														"type": ""
													}
												],
												"src": "2677:853:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:11",
														"type": ""
													}
												],
												"src": "3536:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:11"
															},
															"nodeType": "YulIf",
															"src": "3966:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:11"
															},
															"nodeType": "YulIf",
															"src": "4057:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:11",
														"type": ""
													}
												],
												"src": "3827:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:11",
														"type": ""
													}
												],
												"src": "4153:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:11",
														"type": ""
													}
												],
												"src": "4300:93:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:11",
														"type": ""
													}
												],
												"src": "4399:107:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:11"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:11",
														"type": ""
													}
												],
												"src": "4512:393:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:11",
														"type": ""
													}
												],
												"src": "4911:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:11",
														"type": ""
													}
												],
												"src": "4994:60:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:11",
														"type": ""
													}
												],
												"src": "5060:142:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:11",
														"type": ""
													}
												],
												"src": "5208:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:11",
														"type": ""
													}
												],
												"src": "5289:269:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:11",
														"type": ""
													}
												],
												"src": "5564:73:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:11",
														"type": ""
													}
												],
												"src": "5643:189:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:11",
																"statements": []
															},
															"src": "5898:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:11",
														"type": ""
													}
												],
												"src": "5838:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:11",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:11",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:11"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:11"
															},
															"nodeType": "YulIf",
															"src": "6120:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:11",
														"type": ""
													}
												],
												"src": "6030:543:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:11",
														"type": ""
													}
												],
												"src": "6579:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:11"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:11",
														"type": ""
													}
												],
												"src": "6702:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:11"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:11",
														"type": ""
													}
												],
												"src": "6876:295:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:11"
															},
															"nodeType": "YulIf",
															"src": "7381:56:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:11"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:11"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:11"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:11"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:11",
																					"statements": []
																				},
																				"src": "7867:208:11"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:11",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:11"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:11"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:11"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:11"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:11"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:11"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:11",
														"type": ""
													}
												],
												"src": "7176:1395:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002a8f38038062002a8f8339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b6124d280620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb4651461025b578063b88d4fde14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b806370a08231146101f157806395d89b4114610221578063a0712d681461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906117ce565b6102f3565b6040516101169190611816565b60405180910390f35b6101276103d5565b60405161013491906118c1565b60405180910390f35b61015760048036038101906101529190611919565b610467565b6040516101649190611987565b60405180910390f35b610187600480360381019061018291906119ce565b6104ad565b005b6101a3600480360381019061019e9190611a0e565b6105c4565b005b6101bf60048036038101906101ba9190611a0e565b610624565b005b6101db60048036038101906101d69190611919565b610644565b6040516101e89190611987565b60405180910390f35b61020b60048036038101906102069190611a61565b6106ca565b6040516102189190611a9d565b60405180910390f35b610229610781565b60405161023691906118c1565b60405180910390f35b61025960048036038101906102549190611919565b610813565b005b61027560048036038101906102709190611ae4565b610820565b005b610291600480360381019061028c9190611c59565b610836565b005b6102ad60048036038101906102a89190611919565b610898565b6040516102ba91906118c1565b60405180910390f35b6102dd60048036038101906102d89190611cdc565b610900565b6040516102ea9190611816565b60405180910390f35b60007f20dd75a5000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103be57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ce57506103cd82610994565b5b9050919050565b6060600080546103e490611d4b565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611d4b565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b6000610472826109fe565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104b882610644565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90611dee565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610547610a49565b73ffffffffffffffffffffffffffffffffffffffff161480610576575061057581610570610a49565b610900565b5b6105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90611e80565b60405180910390fd5b6105bf8383610a51565b505050565b6105d56105cf610a49565b82610b0a565b610614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060b90611f12565b60405180910390fd5b61061f838383610b9f565b505050565b61063f83838360405180602001604052806000815250610836565b505050565b60008061065083610e98565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b890611f7e565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190612010565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461079090611d4b565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc90611d4b565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b5050505050905090565b61081d3382610ed5565b50565b61083261082b610a49565b8383610ef3565b5050565b610847610841610a49565b83610b0a565b610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d90611f12565b60405180910390fd5b6108928484848461105f565b50505050565b60606108a3826109fe565b60006108ad6110bb565b905060008151116108cd57604051806020016040528060008152506108f8565b806108d7846110d2565b6040516020016108e892919061206c565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a07816111a0565b610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d90611f7e565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ac483610644565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b1683610644565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b585750610b578185610900565b5b80610b9657508373ffffffffffffffffffffffffffffffffffffffff16610b7e84610467565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610bbf82610644565b73ffffffffffffffffffffffffffffffffffffffff1614610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90612102565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90612194565b60405180910390fd5b610c9183838360016111e1565b8273ffffffffffffffffffffffffffffffffffffffff16610cb182610644565b73ffffffffffffffffffffffffffffffffffffffff1614610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90612102565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e9383838360016111e7565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610eef8282604051806020016040528060008152506111ed565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5890612200565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110529190611816565b60405180910390a3505050565b61106a848484610b9f565b61107684848484611248565b6110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac90612292565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016110e1846113cf565b01905060008167ffffffffffffffff811115611100576110ff611b2e565b5b6040519080825280601f01601f1916602001820160405280156111325781602001600182028036833780820191505090505b509050600082602001820190505b600115611195578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611189576111886122b2565b5b04945060008503611140575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166111c283610e98565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b6111f78383611522565b6112046000848484611248565b611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a90612292565b60405180910390fd5b505050565b60006112698473ffffffffffffffffffffffffffffffffffffffff1661173f565b156113c2578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611292610a49565b8786866040518563ffffffff1660e01b81526004016112b49493929190612336565b6020604051808303816000875af19250505080156112f057506040513d601f19601f820116820180604052508101906112ed9190612397565b60015b611372573d8060008114611320576040519150601f19603f3d011682016040523d82523d6000602084013e611325565b606091505b50600081510361136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136190612292565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506113c7565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061142d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611423576114226122b2565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061146a576d04ee2d6d415b85acef810000000083816114605761145f6122b2565b5b0492506020810190505b662386f26fc10000831061149957662386f26fc10000838161148f5761148e6122b2565b5b0492506010810190505b6305f5e10083106114c2576305f5e10083816114b8576114b76122b2565b5b0492506008810190505b61271083106114e75761271083816114dd576114dc6122b2565b5b0492506004810190505b6064831061150a5760648381611500576114ff6122b2565b5b0492506002810190505b600a8310611519576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158890612410565b60405180910390fd5b61159a816111a0565b156115da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d19061247c565b60405180910390fd5b6115e86000838360016111e1565b6115f1816111a0565b15611631576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116289061247c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461173b6000838360016111e7565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117ab81611776565b81146117b657600080fd5b50565b6000813590506117c8816117a2565b92915050565b6000602082840312156117e4576117e361176c565b5b60006117f2848285016117b9565b91505092915050565b60008115159050919050565b611810816117fb565b82525050565b600060208201905061182b6000830184611807565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561186b578082015181840152602081019050611850565b60008484015250505050565b6000601f19601f8301169050919050565b600061189382611831565b61189d818561183c565b93506118ad81856020860161184d565b6118b681611877565b840191505092915050565b600060208201905081810360008301526118db8184611888565b905092915050565b6000819050919050565b6118f6816118e3565b811461190157600080fd5b50565b600081359050611913816118ed565b92915050565b60006020828403121561192f5761192e61176c565b5b600061193d84828501611904565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061197182611946565b9050919050565b61198181611966565b82525050565b600060208201905061199c6000830184611978565b92915050565b6119ab81611966565b81146119b657600080fd5b50565b6000813590506119c8816119a2565b92915050565b600080604083850312156119e5576119e461176c565b5b60006119f3858286016119b9565b9250506020611a0485828601611904565b9150509250929050565b600080600060608486031215611a2757611a2661176c565b5b6000611a35868287016119b9565b9350506020611a46868287016119b9565b9250506040611a5786828701611904565b9150509250925092565b600060208284031215611a7757611a7661176c565b5b6000611a85848285016119b9565b91505092915050565b611a97816118e3565b82525050565b6000602082019050611ab26000830184611a8e565b92915050565b611ac1816117fb565b8114611acc57600080fd5b50565b600081359050611ade81611ab8565b92915050565b60008060408385031215611afb57611afa61176c565b5b6000611b09858286016119b9565b9250506020611b1a85828601611acf565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b6682611877565b810181811067ffffffffffffffff82111715611b8557611b84611b2e565b5b80604052505050565b6000611b98611762565b9050611ba48282611b5d565b919050565b600067ffffffffffffffff821115611bc457611bc3611b2e565b5b611bcd82611877565b9050602081019050919050565b82818337600083830152505050565b6000611bfc611bf784611ba9565b611b8e565b905082815260208101848484011115611c1857611c17611b29565b5b611c23848285611bda565b509392505050565b600082601f830112611c4057611c3f611b24565b5b8135611c50848260208601611be9565b91505092915050565b60008060008060808587031215611c7357611c7261176c565b5b6000611c81878288016119b9565b9450506020611c92878288016119b9565b9350506040611ca387828801611904565b925050606085013567ffffffffffffffff811115611cc457611cc3611771565b5b611cd087828801611c2b565b91505092959194509250565b60008060408385031215611cf357611cf261176c565b5b6000611d01858286016119b9565b9250506020611d12858286016119b9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d6357607f821691505b602082108103611d7657611d75611d1c565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611dd860218361183c565b9150611de382611d7c565b604082019050919050565b60006020820190508181036000830152611e0781611dcb565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611e6a603d8361183c565b9150611e7582611e0e565b604082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611efc602d8361183c565b9150611f0782611ea0565b604082019050919050565b60006020820190508181036000830152611f2b81611eef565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611f6860188361183c565b9150611f7382611f32565b602082019050919050565b60006020820190508181036000830152611f9781611f5b565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611ffa60298361183c565b915061200582611f9e565b604082019050919050565b6000602082019050818103600083015261202981611fed565b9050919050565b600081905092915050565b600061204682611831565b6120508185612030565b935061206081856020860161184d565b80840191505092915050565b6000612078828561203b565b9150612084828461203b565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006120ec60258361183c565b91506120f782612090565b604082019050919050565b6000602082019050818103600083015261211b816120df565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061217e60248361183c565b915061218982612122565b604082019050919050565b600060208201905081810360008301526121ad81612171565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006121ea60198361183c565b91506121f5826121b4565b602082019050919050565b60006020820190508181036000830152612219816121dd565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061227c60328361183c565b915061228782612220565b604082019050919050565b600060208201905081810360008301526122ab8161226f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000612308826122e1565b61231281856122ec565b935061232281856020860161184d565b61232b81611877565b840191505092915050565b600060808201905061234b6000830187611978565b6123586020830186611978565b6123656040830185611a8e565b818103606083015261237781846122fd565b905095945050505050565b600081519050612391816117a2565b92915050565b6000602082840312156123ad576123ac61176c565b5b60006123bb84828501612382565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006123fa60208361183c565b9150612405826123c4565b602082019050919050565b60006020820190508181036000830152612429816123ed565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612466601c8361183c565b915061247182612430565b602082019050919050565b6000602082019050818103600083015261249581612459565b905091905056fea26469706673582212202e5102cb28b8b082e5ef7ca6ff1f18eed490122416856184696a0277b48ed26d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A8F CODESIZE SUB DUP1 PUSH3 0x2A8F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24D2 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x20DD75A500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3BE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3CE JUMPI POP PUSH2 0x3CD DUP3 PUSH2 0x994 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x432 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B8 DUP3 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x547 PUSH2 0xA49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x576 JUMPI POP PUSH2 0x575 DUP2 PUSH2 0x570 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BF DUP4 DUP4 PUSH2 0xA51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D5 PUSH2 0x5CF PUSH2 0xA49 JUMP JUMPDEST DUP3 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60B SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61F DUP4 DUP4 DUP4 PUSH2 0xB9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x63F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x836 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x650 DUP4 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x790 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7BC SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x809 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x809 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81D CALLER DUP3 PUSH2 0xED5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x832 PUSH2 0x82B PUSH2 0xA49 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x841 PUSH2 0xA49 JUMP JUMPDEST DUP4 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x892 DUP5 DUP5 DUP5 DUP5 PUSH2 0x105F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8A3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH2 0x10BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8F8 JUMP JUMPDEST DUP1 PUSH2 0x8D7 DUP5 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E8 SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 DUP2 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC4 DUP4 PUSH2 0x644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB16 DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB58 JUMPI POP PUSH2 0xB57 DUP2 DUP6 PUSH2 0x900 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB96 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP5 PUSH2 0x467 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBF DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC91 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB1 DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE93 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEF DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11ED JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF58 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1052 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x106A DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x1076 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x10B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AC SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x10E1 DUP5 PUSH2 0x13CF JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1100 JUMPI PUSH2 0x10FF PUSH2 0x1B2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1132 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1195 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1140 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11C2 DUP4 PUSH2 0xE98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11F7 DUP4 DUP4 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1204 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1269 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173F JUMP JUMPDEST ISZERO PUSH2 0x13C2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1292 PUSH2 0xA49 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12F0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12ED SWAP2 SWAP1 PUSH2 0x2397 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1372 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x136A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1361 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x142D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1423 JUMPI PUSH2 0x1422 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x146A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1460 JUMPI PUSH2 0x145F PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1499 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x148F JUMPI PUSH2 0x148E PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x14C2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14B8 JUMPI PUSH2 0x14B7 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x14E7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x14DD JUMPI PUSH2 0x14DC PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x150A JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1519 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1588 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x159A DUP2 PUSH2 0x11A0 JUMP JUMPDEST ISZERO PUSH2 0x15DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D1 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x15F1 DUP2 PUSH2 0x11A0 JUMP JUMPDEST ISZERO PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x173B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AB DUP2 PUSH2 0x1776 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C8 DUP2 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F2 DUP5 DUP3 DUP6 ADD PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH2 0x17FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1807 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x186B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x189D DUP2 DUP6 PUSH2 0x183C JUMP JUMPDEST SWAP4 POP PUSH2 0x18AD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST PUSH2 0x18B6 DUP2 PUSH2 0x1877 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18DB DUP2 DUP5 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F6 DUP2 PUSH2 0x18E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1913 DUP2 PUSH2 0x18ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192F JUMPI PUSH2 0x192E PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193D DUP5 DUP3 DUP6 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1971 DUP3 PUSH2 0x1946 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1981 DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x199C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C8 DUP2 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F3 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A04 DUP6 DUP3 DUP7 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP7 DUP3 DUP8 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A46 DUP7 DUP3 DUP8 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A57 DUP7 DUP3 DUP8 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A85 DUP5 DUP3 DUP6 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A97 DUP2 PUSH2 0x18E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AC1 DUP2 PUSH2 0x17FB JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADE DUP2 PUSH2 0x1AB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AFB JUMPI PUSH2 0x1AFA PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B09 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1A DUP6 DUP3 DUP7 ADD PUSH2 0x1ACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B66 DUP3 PUSH2 0x1877 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B85 JUMPI PUSH2 0x1B84 PUSH2 0x1B2E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1762 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA4 DUP3 DUP3 PUSH2 0x1B5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x1B2E JUMP JUMPDEST JUMPDEST PUSH2 0x1BCD DUP3 PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFC PUSH2 0x1BF7 DUP5 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1B8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C18 JUMPI PUSH2 0x1C17 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH2 0x1C23 DUP5 DUP3 DUP6 PUSH2 0x1BDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C40 JUMPI PUSH2 0x1C3F PUSH2 0x1B24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C50 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C73 JUMPI PUSH2 0x1C72 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP8 DUP3 DUP9 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C92 DUP8 DUP3 DUP9 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CA3 DUP8 DUP3 DUP9 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC4 JUMPI PUSH2 0x1CC3 PUSH2 0x1771 JUMP JUMPDEST JUMPDEST PUSH2 0x1CD0 DUP8 DUP3 DUP9 ADD PUSH2 0x1C2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CF2 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D01 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D12 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D63 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D76 JUMPI PUSH2 0x1D75 PUSH2 0x1D1C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD8 PUSH1 0x21 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE3 DUP3 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1DCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x3D DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFC PUSH1 0x2D DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2B DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x18 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F73 DUP3 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFA PUSH1 0x29 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2005 DUP3 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2029 DUP2 PUSH2 0x1FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2046 DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x2050 DUP2 DUP6 PUSH2 0x2030 JUMP JUMPDEST SWAP4 POP PUSH2 0x2060 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2078 DUP3 DUP6 PUSH2 0x203B JUMP JUMPDEST SWAP2 POP PUSH2 0x2084 DUP3 DUP5 PUSH2 0x203B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EC PUSH1 0x25 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x20F7 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211B DUP2 PUSH2 0x20DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217E PUSH1 0x24 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP3 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21AD DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EA PUSH1 0x19 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x21F5 DUP3 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2219 DUP2 PUSH2 0x21DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227C PUSH1 0x32 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2287 DUP3 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AB DUP2 PUSH2 0x226F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2308 DUP3 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x2312 DUP2 DUP6 PUSH2 0x22EC JUMP JUMPDEST SWAP4 POP PUSH2 0x2322 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST PUSH2 0x232B DUP2 PUSH2 0x1877 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x234B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x2358 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x2365 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2377 DUP2 DUP5 PUSH2 0x22FD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2391 DUP2 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23AD JUMPI PUSH2 0x23AC PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23BB DUP5 DUP3 DUP6 ADD PUSH2 0x2382 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FA PUSH1 0x20 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2405 DUP3 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2429 DUP2 PUSH2 0x23ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2466 PUSH1 0x1C DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2471 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2495 DUP2 PUSH2 0x2459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MLOAD MUL 0xCB 0x28 0xB8 0xB0 DUP3 0xE5 0xEF PUSH29 0xA6FF1F18EED490122416856184696A0277B48ED26D64736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "646:16935:0:-:0;;;1433:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1508:5;1500;:13;;;;;;:::i;:::-;;1534:7;1524;:17;;;;;;:::i;:::-;;1433:116;;646:16935;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;646:16935:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_923": {
									"entryPoint": 4583,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_789": {
									"entryPoint": 2641,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_213": {
									"entryPoint": 4283,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_910": {
									"entryPoint": 4577,
									"id": 910,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_897": {
									"entryPoint": 4680,
									"id": 897,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_458": {
									"entryPoint": 4512,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_492": {
									"entryPoint": 2826,
									"id": 492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_613": {
									"entryPoint": 5410,
									"id": 613,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1447": {
									"entryPoint": 2633,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_440": {
									"entryPoint": 3736,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_835": {
									"entryPoint": 2558,
									"id": 835,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_507": {
									"entryPoint": 3797,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_536": {
									"entryPoint": 4589,
									"id": 536,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_427": {
									"entryPoint": 4191,
									"id": 427,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_821": {
									"entryPoint": 3827,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_765": {
									"entryPoint": 2975,
									"id": 765,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_256": {
									"entryPoint": 1197,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_117": {
									"entryPoint": 1738,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_287": {
									"entryPoint": 1127,
									"id": 287,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_322": {
									"entryPoint": 2304,
									"id": 322,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1123": {
									"entryPoint": 5951,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2425": {
									"entryPoint": 5071,
									"id": 2425,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_269": {
									"entryPoint": 2067,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_155": {
									"entryPoint": 981,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_145": {
									"entryPoint": 1604,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_368": {
									"entryPoint": 1572,
									"id": 368,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_398": {
									"entryPoint": 2102,
									"id": 398,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_304": {
									"entryPoint": 2080,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1709": {
									"entryPoint": 2452,
									"id": 1709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 755,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_165": {
									"entryPoint": 1921,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1516": {
									"entryPoint": 4306,
									"id": 1516,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_204": {
									"entryPoint": 2200,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_349": {
									"entryPoint": 1476,
									"id": 349,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8300,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9014,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 8736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 8336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25116:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:11",
																"statements": []
															},
															"src": "1889:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:11",
														"type": ""
													}
												],
												"src": "2050:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:11",
														"type": ""
													}
												],
												"src": "2158:377:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:11",
														"type": ""
													}
												],
												"src": "2541:313:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:11",
														"type": ""
													}
												],
												"src": "2860:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:11"
															},
															"nodeType": "YulIf",
															"src": "2996:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:11",
														"type": ""
													}
												],
												"src": "2943:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:11",
														"type": ""
													}
												],
												"src": "3071:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:11"
															},
															"nodeType": "YulIf",
															"src": "3292:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:11",
														"type": ""
													}
												],
												"src": "3216:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:11",
														"type": ""
													}
												],
												"src": "3551:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:11",
														"type": ""
													}
												],
												"src": "3683:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:11",
														"type": ""
													}
												],
												"src": "3785:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:11",
														"type": ""
													}
												],
												"src": "3909:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:11"
															},
															"nodeType": "YulIf",
															"src": "4190:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:11",
														"type": ""
													}
												],
												"src": "4137:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:11",
														"type": ""
													}
												],
												"src": "4265:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:11"
															},
															"nodeType": "YulIf",
															"src": "4503:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:11",
														"type": ""
													}
												],
												"src": "4410:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:11"
															},
															"nodeType": "YulIf",
															"src": "5000:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:11",
														"type": ""
													}
												],
												"src": "4890:619:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:11"
															},
															"nodeType": "YulIf",
															"src": "5591:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:11",
														"type": ""
													}
												],
												"src": "5515:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5903:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:11",
														"type": ""
													}
												],
												"src": "5850:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6082:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6056:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6067:4:11",
														"type": ""
													}
												],
												"src": "5974:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:11"
															},
															"nodeType": "YulIf",
															"src": "6252:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:11",
														"type": ""
													}
												],
												"src": "6202:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:11",
														"type": ""
													}
												],
												"src": "6324:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:11"
															},
															"nodeType": "YulIf",
															"src": "6553:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:11",
														"type": ""
													}
												],
												"src": "6463:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:11"
															},
															"nodeType": "YulIf",
															"src": "7525:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:11",
														"type": ""
													}
												],
												"src": "7369:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:11",
														"type": ""
													}
												],
												"src": "7656:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:11"
															},
															"nodeType": "YulIf",
															"src": "7928:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:11",
														"type": ""
													}
												],
												"src": "7791:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:11"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:11",
														"type": ""
													}
												],
												"src": "8104:146:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:11"
															},
															"nodeType": "YulIf",
															"src": "8498:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:11",
														"type": ""
													}
												],
												"src": "8256:423:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:11"
															},
															"nodeType": "YulIf",
															"src": "8769:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:11",
														"type": ""
													}
												],
												"src": "8698:338:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:11"
															},
															"nodeType": "YulIf",
															"src": "9178:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:11",
														"type": ""
													}
												],
												"src": "9042:943:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:11"
															},
															"nodeType": "YulIf",
															"src": "10084:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:11",
														"type": ""
													}
												],
												"src": "9991:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:11"
															},
															"nodeType": "YulIf",
															"src": "10796:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:11"
															},
															"nodeType": "YulIf",
															"src": "10887:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:11",
														"type": ""
													}
												],
												"src": "10657:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:11",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:11"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:11",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11081:6:11",
														"type": ""
													}
												],
												"src": "10983:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11355:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11365:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11431:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11372:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11372:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11537:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nodeType": "YulIdentifier",
																	"src": "11448:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11448:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11550:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11561:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11566:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11343:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11351:3:11",
														"type": ""
													}
												],
												"src": "11209:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11752:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11762:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11774:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11785:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11762:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11809:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11820:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11805:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11828:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11834:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11824:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11798:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11798:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11854:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11988:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11862:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11854:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11732:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11747:4:11",
														"type": ""
													}
												],
												"src": "11581:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12112:142:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12134:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12142:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12130:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12130:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12146:34:11",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12123:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12202:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12198:15:11"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12215:31:11",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:56:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12191:56:11"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12104:6:11",
														"type": ""
													}
												],
												"src": "12006:248:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12406:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12416:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12482:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:2:11",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12423:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12416:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12588:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nodeType": "YulIdentifier",
																	"src": "12499:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12601:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12612:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12394:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12402:3:11",
														"type": ""
													}
												],
												"src": "12260:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12803:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12813:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12879:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12885:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12849:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12905:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13039:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12913:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12905:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12783:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12798:4:11",
														"type": ""
													}
												],
												"src": "12632:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13163:126:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13193:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13181:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13197:34:11",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13174:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13253:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13261:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13249:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13249:15:11"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13266:15:11",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13242:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13242:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13155:6:11",
														"type": ""
													}
												],
												"src": "13057:232:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13441:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13451:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13458:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13458:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13451:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13623:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nodeType": "YulIdentifier",
																	"src": "13534:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13534:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13534:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13636:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13647:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13643:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13429:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13437:3:11",
														"type": ""
													}
												],
												"src": "13295:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13848:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13860:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13856:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13848:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13895:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13906:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13914:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13910:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13910:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13884:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13940:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14074:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13948:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13940:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13818:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13833:4:11",
														"type": ""
													}
												],
												"src": "13667:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14198:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14220:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14228:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14216:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14216:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14232:26:11",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14209:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14209:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14190:6:11",
														"type": ""
													}
												],
												"src": "14092:174:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14418:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14428:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14494:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14499:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14435:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14435:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14428:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14600:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nodeType": "YulIdentifier",
																	"src": "14511:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14511:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14511:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14613:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14624:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14629:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14620:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14406:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14414:3:11",
														"type": ""
													}
												],
												"src": "14272:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14815:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14825:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14837:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14848:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14872:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14883:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14891:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14897:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14887:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14887:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14917:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15051:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14925:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14925:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14917:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14795:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14810:4:11",
														"type": ""
													}
												],
												"src": "14644:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15175:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15197:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15205:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15193:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15209:34:11",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15186:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15186:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15265:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15273:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15261:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15261:15:11"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15278:11:11",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15254:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15254:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15254:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15167:6:11",
														"type": ""
													}
												],
												"src": "15069:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15449:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15459:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15525:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15530:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15466:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15466:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15459:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15631:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nodeType": "YulIdentifier",
																	"src": "15542:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15542:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15542:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15644:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15655:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15660:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15651:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15437:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15445:3:11",
														"type": ""
													}
												],
												"src": "15303:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15846:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15856:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15868:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15879:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15864:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15856:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15903:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15914:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15899:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15922:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15928:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15918:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15918:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15892:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15892:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15892:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15948:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16082:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15956:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15956:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15948:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15826:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15841:4:11",
														"type": ""
													}
												],
												"src": "15675:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16214:34:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16224:18:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16239:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16224:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16186:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16191:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16202:11:11",
														"type": ""
													}
												],
												"src": "16100:148:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16364:280:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16374:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16421:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16388:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16388:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16378:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16436:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16520:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16525:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16443:76:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16443:89:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16580:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16587:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16576:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16576:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16594:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16599:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16541:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16541:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16541:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16615:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16626:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16631:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16622:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16622:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16615:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16345:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16352:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16360:3:11",
														"type": ""
													}
												],
												"src": "16254:390:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16834:251:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16845:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16934:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16943:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16852:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16852:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16845:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16957:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17046:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17055:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16964:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16964:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16957:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17069:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17076:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17069:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16805:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16811:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16819:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16830:3:11",
														"type": ""
													}
												],
												"src": "16650:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17197:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17219:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17227:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17215:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17215:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17231:34:11",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17208:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17208:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17208:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17287:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17295:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17283:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17283:15:11"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17300:7:11",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17276:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17276:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17276:32:11"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17189:6:11",
														"type": ""
													}
												],
												"src": "17091:224:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17467:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17477:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17543:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17548:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17484:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17484:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17477:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17649:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nodeType": "YulIdentifier",
																	"src": "17560:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17560:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17560:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17662:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17673:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17678:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17669:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17669:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17662:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17455:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17463:3:11",
														"type": ""
													}
												],
												"src": "17321:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17864:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17874:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17886:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17897:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17882:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17882:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17874:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17921:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17932:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17917:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17917:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17940:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17946:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17936:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17936:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17910:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17910:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17910:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17966:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18100:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17974:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17974:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17966:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17844:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17859:4:11",
														"type": ""
													}
												],
												"src": "17693:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18224:117:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18246:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18254:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18242:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18242:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18258:34:11",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18235:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18235:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18235:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18314:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18322:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18310:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18310:15:11"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18327:6:11",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18303:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18303:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18303:31:11"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18216:6:11",
														"type": ""
													}
												],
												"src": "18118:223:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18493:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18503:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18569:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18574:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18510:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18510:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18503:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18675:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nodeType": "YulIdentifier",
																	"src": "18586:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18586:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18586:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18688:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18699:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18704:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18695:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18695:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18688:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18481:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18489:3:11",
														"type": ""
													}
												],
												"src": "18347:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18890:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18900:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18912:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18923:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18908:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18908:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18900:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18947:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18958:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18943:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18943:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18966:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18972:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18962:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18962:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18936:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18936:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18936:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18992:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19126:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19000:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19000:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18992:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18870:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18885:4:11",
														"type": ""
													}
												],
												"src": "18719:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19250:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19272:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19280:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19268:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19268:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19284:27:11",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19261:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19261:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19261:51:11"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19242:6:11",
														"type": ""
													}
												],
												"src": "19144:175:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19471:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19481:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19547:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19552:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19488:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19488:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19481:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19653:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nodeType": "YulIdentifier",
																	"src": "19564:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19564:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19564:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19666:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19677:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19682:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19673:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19673:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19666:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19459:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19467:3:11",
														"type": ""
													}
												],
												"src": "19325:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19868:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19878:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19890:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19901:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19886:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19886:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19878:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19925:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19936:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19921:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19921:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19944:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19950:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19940:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19940:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19914:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19914:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19914:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19970:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20104:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19978:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19978:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19970:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19848:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19863:4:11",
														"type": ""
													}
												],
												"src": "19697:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20228:131:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20250:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20258:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20246:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20246:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20262:34:11",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20239:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20239:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20239:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20318:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20326:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20314:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20314:15:11"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20331:20:11",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20307:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20307:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20307:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20220:6:11",
														"type": ""
													}
												],
												"src": "20122:237:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20511:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20521:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20587:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20592:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20528:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20528:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20521:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20693:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nodeType": "YulIdentifier",
																	"src": "20604:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20604:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20604:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20706:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20717:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20722:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20713:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20713:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20706:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20499:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20507:3:11",
														"type": ""
													}
												],
												"src": "20365:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20908:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20918:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20930:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20941:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20926:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20926:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20918:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20965:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20976:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20961:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20961:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20984:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20990:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20980:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20980:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20954:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20954:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20954:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21010:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21144:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21018:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21018:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21010:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20888:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20903:4:11",
														"type": ""
													}
												],
												"src": "20737:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21190:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21207:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21210:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21200:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21200:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21200:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21304:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21307:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21297:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21297:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21297:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21328:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21331:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21321:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21321:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21321:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21162:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21406:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21417:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21433:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21427:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21427:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21417:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21389:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21399:6:11",
														"type": ""
													}
												],
												"src": "21348:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21547:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21564:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21569:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21557:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21557:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21557:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21585:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21604:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21609:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21600:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21600:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21585:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21519:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21524:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21535:11:11",
														"type": ""
													}
												],
												"src": "21452:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21716:283:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21726:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21772:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21740:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21740:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21730:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21787:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21852:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21857:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21794:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21794:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21787:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21912:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21919:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21908:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21908:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21926:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21931:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21873:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21873:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21873:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21947:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21958:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21985:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "21963:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21963:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21954:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21954:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21947:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21697:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21704:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21712:3:11",
														"type": ""
													}
												],
												"src": "21626:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22205:440:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22215:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22227:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22238:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22223:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22223:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22215:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22296:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22309:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22320:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22305:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22305:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22252:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22252:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22252:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22377:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22390:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22401:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22386:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22386:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22333:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22333:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22333:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22459:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22472:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22483:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22468:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22468:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22415:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22415:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22415:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22508:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22519:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22504:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22504:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22528:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22534:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22524:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22524:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22497:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22497:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22497:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22554:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "22624:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22633:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22562:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22562:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22554:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22153:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22165:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22173:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22181:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22189:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22200:4:11",
														"type": ""
													}
												],
												"src": "22005:640:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22713:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22723:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "22738:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22732:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22732:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22723:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22780:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "22754:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22754:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22754:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "22691:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22699:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22707:5:11",
														"type": ""
													}
												],
												"src": "22651:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22874:273:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22920:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "22922:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22922:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22922:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22895:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22904:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22916:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "22887:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22887:32:11"
															},
															"nodeType": "YulIf",
															"src": "22884:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "23013:127:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23028:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23042:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "23032:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "23057:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "23102:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "23113:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23098:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23098:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23122:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "23067:30:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23067:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "23057:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22844:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "22855:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22867:6:11",
														"type": ""
													}
												],
												"src": "22798:349:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23259:76:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23281:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23289:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23277:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23277:14:11"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23293:34:11",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23270:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23270:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23270:58:11"
														}
													]
												},
												"name": "store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23251:6:11",
														"type": ""
													}
												],
												"src": "23153:182:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23487:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23497:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23563:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23568:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23504:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23504:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23497:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23669:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																	"nodeType": "YulIdentifier",
																	"src": "23580:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23580:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23580:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23682:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23693:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23698:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23689:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23689:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23682:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23475:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23483:3:11",
														"type": ""
													}
												],
												"src": "23341:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23884:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23894:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23906:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23917:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23902:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23902:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23894:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23941:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23952:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23937:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23937:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23960:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23966:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23956:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23956:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23930:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23930:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23930:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23986:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24120:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23994:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23994:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23986:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23864:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23879:4:11",
														"type": ""
													}
												],
												"src": "23713:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24244:72:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24266:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24274:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24262:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24262:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24278:30:11",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24255:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24255:54:11"
														}
													]
												},
												"name": "store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24236:6:11",
														"type": ""
													}
												],
												"src": "24138:178:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24468:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24478:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24544:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24549:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24485:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24485:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24478:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24650:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																	"nodeType": "YulIdentifier",
																	"src": "24561:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24561:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24561:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24663:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24674:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24679:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24670:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24670:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24663:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24456:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24464:3:11",
														"type": ""
													}
												],
												"src": "24322:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24865:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24875:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24887:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24898:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24883:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24883:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24875:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24922:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24933:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24918:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24918:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24941:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24947:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24937:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24937:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24911:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24911:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24911:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24967:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25101:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24975:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24975:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24967:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24845:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24860:4:11",
														"type": ""
													}
												],
												"src": "24694:419:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb4651461025b578063b88d4fde14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b806370a08231146101f157806395d89b4114610221578063a0712d681461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906117ce565b6102f3565b6040516101169190611816565b60405180910390f35b6101276103d5565b60405161013491906118c1565b60405180910390f35b61015760048036038101906101529190611919565b610467565b6040516101649190611987565b60405180910390f35b610187600480360381019061018291906119ce565b6104ad565b005b6101a3600480360381019061019e9190611a0e565b6105c4565b005b6101bf60048036038101906101ba9190611a0e565b610624565b005b6101db60048036038101906101d69190611919565b610644565b6040516101e89190611987565b60405180910390f35b61020b60048036038101906102069190611a61565b6106ca565b6040516102189190611a9d565b60405180910390f35b610229610781565b60405161023691906118c1565b60405180910390f35b61025960048036038101906102549190611919565b610813565b005b61027560048036038101906102709190611ae4565b610820565b005b610291600480360381019061028c9190611c59565b610836565b005b6102ad60048036038101906102a89190611919565b610898565b6040516102ba91906118c1565b60405180910390f35b6102dd60048036038101906102d89190611cdc565b610900565b6040516102ea9190611816565b60405180910390f35b60007f20dd75a5000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103be57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ce57506103cd82610994565b5b9050919050565b6060600080546103e490611d4b565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611d4b565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b6000610472826109fe565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104b882610644565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90611dee565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610547610a49565b73ffffffffffffffffffffffffffffffffffffffff161480610576575061057581610570610a49565b610900565b5b6105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90611e80565b60405180910390fd5b6105bf8383610a51565b505050565b6105d56105cf610a49565b82610b0a565b610614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060b90611f12565b60405180910390fd5b61061f838383610b9f565b505050565b61063f83838360405180602001604052806000815250610836565b505050565b60008061065083610e98565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b890611f7e565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190612010565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461079090611d4b565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc90611d4b565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b5050505050905090565b61081d3382610ed5565b50565b61083261082b610a49565b8383610ef3565b5050565b610847610841610a49565b83610b0a565b610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d90611f12565b60405180910390fd5b6108928484848461105f565b50505050565b60606108a3826109fe565b60006108ad6110bb565b905060008151116108cd57604051806020016040528060008152506108f8565b806108d7846110d2565b6040516020016108e892919061206c565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a07816111a0565b610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d90611f7e565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ac483610644565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b1683610644565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b585750610b578185610900565b5b80610b9657508373ffffffffffffffffffffffffffffffffffffffff16610b7e84610467565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610bbf82610644565b73ffffffffffffffffffffffffffffffffffffffff1614610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90612102565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90612194565b60405180910390fd5b610c9183838360016111e1565b8273ffffffffffffffffffffffffffffffffffffffff16610cb182610644565b73ffffffffffffffffffffffffffffffffffffffff1614610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90612102565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e9383838360016111e7565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610eef8282604051806020016040528060008152506111ed565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5890612200565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110529190611816565b60405180910390a3505050565b61106a848484610b9f565b61107684848484611248565b6110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac90612292565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016110e1846113cf565b01905060008167ffffffffffffffff811115611100576110ff611b2e565b5b6040519080825280601f01601f1916602001820160405280156111325781602001600182028036833780820191505090505b509050600082602001820190505b600115611195578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611189576111886122b2565b5b04945060008503611140575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166111c283610e98565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b6111f78383611522565b6112046000848484611248565b611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a90612292565b60405180910390fd5b505050565b60006112698473ffffffffffffffffffffffffffffffffffffffff1661173f565b156113c2578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611292610a49565b8786866040518563ffffffff1660e01b81526004016112b49493929190612336565b6020604051808303816000875af19250505080156112f057506040513d601f19601f820116820180604052508101906112ed9190612397565b60015b611372573d8060008114611320576040519150601f19603f3d011682016040523d82523d6000602084013e611325565b606091505b50600081510361136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136190612292565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506113c7565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061142d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611423576114226122b2565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061146a576d04ee2d6d415b85acef810000000083816114605761145f6122b2565b5b0492506020810190505b662386f26fc10000831061149957662386f26fc10000838161148f5761148e6122b2565b5b0492506010810190505b6305f5e10083106114c2576305f5e10083816114b8576114b76122b2565b5b0492506008810190505b61271083106114e75761271083816114dd576114dc6122b2565b5b0492506004810190505b6064831061150a5760648381611500576114ff6122b2565b5b0492506002810190505b600a8310611519576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158890612410565b60405180910390fd5b61159a816111a0565b156115da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d19061247c565b60405180910390fd5b6115e86000838360016111e1565b6115f1816111a0565b15611631576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116289061247c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461173b6000838360016111e7565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117ab81611776565b81146117b657600080fd5b50565b6000813590506117c8816117a2565b92915050565b6000602082840312156117e4576117e361176c565b5b60006117f2848285016117b9565b91505092915050565b60008115159050919050565b611810816117fb565b82525050565b600060208201905061182b6000830184611807565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561186b578082015181840152602081019050611850565b60008484015250505050565b6000601f19601f8301169050919050565b600061189382611831565b61189d818561183c565b93506118ad81856020860161184d565b6118b681611877565b840191505092915050565b600060208201905081810360008301526118db8184611888565b905092915050565b6000819050919050565b6118f6816118e3565b811461190157600080fd5b50565b600081359050611913816118ed565b92915050565b60006020828403121561192f5761192e61176c565b5b600061193d84828501611904565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061197182611946565b9050919050565b61198181611966565b82525050565b600060208201905061199c6000830184611978565b92915050565b6119ab81611966565b81146119b657600080fd5b50565b6000813590506119c8816119a2565b92915050565b600080604083850312156119e5576119e461176c565b5b60006119f3858286016119b9565b9250506020611a0485828601611904565b9150509250929050565b600080600060608486031215611a2757611a2661176c565b5b6000611a35868287016119b9565b9350506020611a46868287016119b9565b9250506040611a5786828701611904565b9150509250925092565b600060208284031215611a7757611a7661176c565b5b6000611a85848285016119b9565b91505092915050565b611a97816118e3565b82525050565b6000602082019050611ab26000830184611a8e565b92915050565b611ac1816117fb565b8114611acc57600080fd5b50565b600081359050611ade81611ab8565b92915050565b60008060408385031215611afb57611afa61176c565b5b6000611b09858286016119b9565b9250506020611b1a85828601611acf565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b6682611877565b810181811067ffffffffffffffff82111715611b8557611b84611b2e565b5b80604052505050565b6000611b98611762565b9050611ba48282611b5d565b919050565b600067ffffffffffffffff821115611bc457611bc3611b2e565b5b611bcd82611877565b9050602081019050919050565b82818337600083830152505050565b6000611bfc611bf784611ba9565b611b8e565b905082815260208101848484011115611c1857611c17611b29565b5b611c23848285611bda565b509392505050565b600082601f830112611c4057611c3f611b24565b5b8135611c50848260208601611be9565b91505092915050565b60008060008060808587031215611c7357611c7261176c565b5b6000611c81878288016119b9565b9450506020611c92878288016119b9565b9350506040611ca387828801611904565b925050606085013567ffffffffffffffff811115611cc457611cc3611771565b5b611cd087828801611c2b565b91505092959194509250565b60008060408385031215611cf357611cf261176c565b5b6000611d01858286016119b9565b9250506020611d12858286016119b9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d6357607f821691505b602082108103611d7657611d75611d1c565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611dd860218361183c565b9150611de382611d7c565b604082019050919050565b60006020820190508181036000830152611e0781611dcb565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611e6a603d8361183c565b9150611e7582611e0e565b604082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611efc602d8361183c565b9150611f0782611ea0565b604082019050919050565b60006020820190508181036000830152611f2b81611eef565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611f6860188361183c565b9150611f7382611f32565b602082019050919050565b60006020820190508181036000830152611f9781611f5b565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611ffa60298361183c565b915061200582611f9e565b604082019050919050565b6000602082019050818103600083015261202981611fed565b9050919050565b600081905092915050565b600061204682611831565b6120508185612030565b935061206081856020860161184d565b80840191505092915050565b6000612078828561203b565b9150612084828461203b565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006120ec60258361183c565b91506120f782612090565b604082019050919050565b6000602082019050818103600083015261211b816120df565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061217e60248361183c565b915061218982612122565b604082019050919050565b600060208201905081810360008301526121ad81612171565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006121ea60198361183c565b91506121f5826121b4565b602082019050919050565b60006020820190508181036000830152612219816121dd565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061227c60328361183c565b915061228782612220565b604082019050919050565b600060208201905081810360008301526122ab8161226f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000612308826122e1565b61231281856122ec565b935061232281856020860161184d565b61232b81611877565b840191505092915050565b600060808201905061234b6000830187611978565b6123586020830186611978565b6123656040830185611a8e565b818103606083015261237781846122fd565b905095945050505050565b600081519050612391816117a2565b92915050565b6000602082840312156123ad576123ac61176c565b5b60006123bb84828501612382565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006123fa60208361183c565b9150612405826123c4565b602082019050919050565b60006020820190508181036000830152612429816123ed565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612466601c8361183c565b915061247182612430565b602082019050919050565b6000602082019050818103600083015261249581612459565b905091905056fea26469706673582212202e5102cb28b8b082e5ef7ca6ff1f18eed490122416856184696a0277b48ed26d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x20DD75A500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3BE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3CE JUMPI POP PUSH2 0x3CD DUP3 PUSH2 0x994 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x432 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B8 DUP3 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x547 PUSH2 0xA49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x576 JUMPI POP PUSH2 0x575 DUP2 PUSH2 0x570 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BF DUP4 DUP4 PUSH2 0xA51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5D5 PUSH2 0x5CF PUSH2 0xA49 JUMP JUMPDEST DUP3 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60B SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61F DUP4 DUP4 DUP4 PUSH2 0xB9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x63F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x836 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x650 DUP4 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x790 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7BC SWAP1 PUSH2 0x1D4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x809 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x809 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81D CALLER DUP3 PUSH2 0xED5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x832 PUSH2 0x82B PUSH2 0xA49 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x841 PUSH2 0xA49 JUMP JUMPDEST DUP4 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x892 DUP5 DUP5 DUP5 DUP5 PUSH2 0x105F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8A3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH2 0x10BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8F8 JUMP JUMPDEST DUP1 PUSH2 0x8D7 DUP5 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E8 SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 DUP2 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC4 DUP4 PUSH2 0x644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB16 DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB58 JUMPI POP PUSH2 0xB57 DUP2 DUP6 PUSH2 0x900 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB96 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP5 PUSH2 0x467 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBF DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC91 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB1 DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE93 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEF DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11ED JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF58 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1052 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x106A DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x1076 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x10B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AC SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x10E1 DUP5 PUSH2 0x13CF JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1100 JUMPI PUSH2 0x10FF PUSH2 0x1B2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1132 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1195 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1140 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11C2 DUP4 PUSH2 0xE98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11F7 DUP4 DUP4 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1204 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1269 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173F JUMP JUMPDEST ISZERO PUSH2 0x13C2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1292 PUSH2 0xA49 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12F0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12ED SWAP2 SWAP1 PUSH2 0x2397 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1372 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x136A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1361 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x142D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1423 JUMPI PUSH2 0x1422 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x146A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1460 JUMPI PUSH2 0x145F PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1499 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x148F JUMPI PUSH2 0x148E PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x14C2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14B8 JUMPI PUSH2 0x14B7 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x14E7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x14DD JUMPI PUSH2 0x14DC PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x150A JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1519 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1588 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x159A DUP2 PUSH2 0x11A0 JUMP JUMPDEST ISZERO PUSH2 0x15DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D1 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x15F1 DUP2 PUSH2 0x11A0 JUMP JUMPDEST ISZERO PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x173B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AB DUP2 PUSH2 0x1776 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C8 DUP2 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F2 DUP5 DUP3 DUP6 ADD PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH2 0x17FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1807 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x186B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x189D DUP2 DUP6 PUSH2 0x183C JUMP JUMPDEST SWAP4 POP PUSH2 0x18AD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST PUSH2 0x18B6 DUP2 PUSH2 0x1877 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18DB DUP2 DUP5 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F6 DUP2 PUSH2 0x18E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1913 DUP2 PUSH2 0x18ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192F JUMPI PUSH2 0x192E PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x193D DUP5 DUP3 DUP6 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1971 DUP3 PUSH2 0x1946 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1981 DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x199C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C8 DUP2 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F3 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A04 DUP6 DUP3 DUP7 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP7 DUP3 DUP8 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A46 DUP7 DUP3 DUP8 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A57 DUP7 DUP3 DUP8 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A85 DUP5 DUP3 DUP6 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A97 DUP2 PUSH2 0x18E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AC1 DUP2 PUSH2 0x17FB JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADE DUP2 PUSH2 0x1AB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AFB JUMPI PUSH2 0x1AFA PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B09 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1A DUP6 DUP3 DUP7 ADD PUSH2 0x1ACF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B66 DUP3 PUSH2 0x1877 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B85 JUMPI PUSH2 0x1B84 PUSH2 0x1B2E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1762 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA4 DUP3 DUP3 PUSH2 0x1B5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x1B2E JUMP JUMPDEST JUMPDEST PUSH2 0x1BCD DUP3 PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFC PUSH2 0x1BF7 DUP5 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1B8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C18 JUMPI PUSH2 0x1C17 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH2 0x1C23 DUP5 DUP3 DUP6 PUSH2 0x1BDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C40 JUMPI PUSH2 0x1C3F PUSH2 0x1B24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C50 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C73 JUMPI PUSH2 0x1C72 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP8 DUP3 DUP9 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C92 DUP8 DUP3 DUP9 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CA3 DUP8 DUP3 DUP9 ADD PUSH2 0x1904 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC4 JUMPI PUSH2 0x1CC3 PUSH2 0x1771 JUMP JUMPDEST JUMPDEST PUSH2 0x1CD0 DUP8 DUP3 DUP9 ADD PUSH2 0x1C2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CF2 PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D01 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D12 DUP6 DUP3 DUP7 ADD PUSH2 0x19B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D63 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D76 JUMPI PUSH2 0x1D75 PUSH2 0x1D1C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD8 PUSH1 0x21 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE3 DUP3 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1DCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x3D DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFC PUSH1 0x2D DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2B DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x18 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F73 DUP3 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFA PUSH1 0x29 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2005 DUP3 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2029 DUP2 PUSH2 0x1FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2046 DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x2050 DUP2 DUP6 PUSH2 0x2030 JUMP JUMPDEST SWAP4 POP PUSH2 0x2060 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2078 DUP3 DUP6 PUSH2 0x203B JUMP JUMPDEST SWAP2 POP PUSH2 0x2084 DUP3 DUP5 PUSH2 0x203B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EC PUSH1 0x25 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x20F7 DUP3 PUSH2 0x2090 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211B DUP2 PUSH2 0x20DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217E PUSH1 0x24 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP3 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21AD DUP2 PUSH2 0x2171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EA PUSH1 0x19 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x21F5 DUP3 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2219 DUP2 PUSH2 0x21DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227C PUSH1 0x32 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2287 DUP3 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AB DUP2 PUSH2 0x226F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2308 DUP3 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x2312 DUP2 DUP6 PUSH2 0x22EC JUMP JUMPDEST SWAP4 POP PUSH2 0x2322 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST PUSH2 0x232B DUP2 PUSH2 0x1877 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x234B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x2358 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x2365 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2377 DUP2 DUP5 PUSH2 0x22FD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2391 DUP2 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23AD JUMPI PUSH2 0x23AC PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23BB DUP5 DUP3 DUP6 ADD PUSH2 0x2382 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FA PUSH1 0x20 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2405 DUP3 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2429 DUP2 PUSH2 0x23ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2466 PUSH1 0x1C DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0x2471 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2495 DUP2 PUSH2 0x2459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MLOAD MUL 0xCB 0x28 0xB8 0xB0 DUP3 0xE5 0xEF PUSH29 0xA6FF1F18EED490122416856184696A0277B48ED26D64736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "646:16935:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2549:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3579:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4872:301;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5244:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2259:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1990:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2718:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4003:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4415:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5466:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2893:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4641:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1621:305;1723:4;1775:25;1760:40;;;:11;:40;;;;:105;;;;1832:33;1817:48;;;:11;:48;;;;1760:105;:158;;;;1882:36;1906:11;1882:23;:36::i;:::-;1760:158;1740:178;;1621:305;;;:::o;2549:100::-;2603:13;2636:5;2629:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2549:100;:::o;4172:171::-;4248:7;4268:23;4283:7;4268:14;:23::i;:::-;4311:15;:24;4327:7;4311:24;;;;;;;;;;;;;;;;;;;;;4304:31;;4172:171;;;:::o;3579:416::-;3660:13;3676:23;3691:7;3676:14;:23::i;:::-;3660:39;;3724:5;3718:11;;:2;:11;;;3710:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3818:5;3802:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3827:37;3844:5;3851:12;:10;:12::i;:::-;3827:16;:37::i;:::-;3802:62;3780:173;;;;;;;;;;;;:::i;:::-;;;;;;;;;3966:21;3975:2;3979:7;3966:8;:21::i;:::-;3649:346;3579:416;;:::o;4872:301::-;5033:41;5052:12;:10;:12::i;:::-;5066:7;5033:18;:41::i;:::-;5025:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5137:28;5147:4;5153:2;5157:7;5137:9;:28::i;:::-;4872:301;;;:::o;5244:151::-;5348:39;5365:4;5371:2;5375:7;5348:39;;;;;;;;;;;;:16;:39::i;:::-;5244:151;;;:::o;2259:223::-;2331:7;2351:13;2367:17;2376:7;2367:8;:17::i;:::-;2351:33;;2420:1;2403:19;;:5;:19;;;2395:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2469:5;2462:12;;;2259:223;;;:::o;1990:207::-;2062:7;2107:1;2090:19;;:5;:19;;;2082:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2173:9;:16;2183:5;2173:16;;;;;;;;;;;;;;;;2166:23;;1990:207;;;:::o;2718:104::-;2774:13;2807:7;2800:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2718:104;:::o;4003:103::-;4069:29;4079:10;4090:7;4069:9;:29::i;:::-;4003:103;:::o;4415:155::-;4510:52;4529:12;:10;:12::i;:::-;4543:8;4553;4510:18;:52::i;:::-;4415:155;;:::o;5466:279::-;5597:41;5616:12;:10;:12::i;:::-;5630:7;5597:18;:41::i;:::-;5589:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5699:38;5713:4;5719:2;5723:7;5732:4;5699:13;:38::i;:::-;5466:279;;;;:::o;2893:281::-;2966:13;2992:23;3007:7;2992:14;:23::i;:::-;3028:21;3052:10;:8;:10::i;:::-;3028:34;;3104:1;3086:7;3080:21;:25;:86;;;;;;;;;;;;;;;;;3132:7;3141:18;:7;:16;:18::i;:::-;3115:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3080:86;3073:93;;;2893:281;;;:::o;4641:164::-;4738:4;4762:18;:25;4781:5;4762:25;;;;;;;;;;;;;;;:35;4788:8;4762:35;;;;;;;;;;;;;;;;;;;;;;;;;4755:42;;4641:164;;;;:::o;854:157:7:-;939:4;978:25;963:40;;;:11;:40;;;;956:47;;854:157;;;:::o;13735:135:0:-;13817:16;13825:7;13817;:16::i;:::-;13809:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13735:135;:::o;656:98:5:-;709:7;736:10;729:17;;656:98;:::o;13048:174:0:-;13150:2;13123:15;:24;13139:7;13123:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;13206:7;13202:2;13168:46;;13177:23;13192:7;13177:14;:23::i;:::-;13168:46;;;;;;;;;;;;13048:174;;:::o;7735:264::-;7828:4;7845:13;7861:23;7876:7;7861:14;:23::i;:::-;7845:39;;7914:5;7903:16;;:7;:16;;;:52;;;;7923:32;7940:5;7947:7;7923:16;:32::i;:::-;7903:52;:87;;;;7983:7;7959:31;;:20;7971:7;7959:11;:20::i;:::-;:31;;;7903:87;7895:96;;;7735:264;;;;:::o;11700:1229::-;11825:4;11798:31;;:23;11813:7;11798:14;:23::i;:::-;:31;;;11790:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11904:1;11890:16;;:2;:16;;;11882:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11960:42;11981:4;11987:2;11991:7;12000:1;11960:20;:42::i;:::-;12132:4;12105:31;;:23;12120:7;12105:14;:23::i;:::-;:31;;;12097:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12250:15;:24;12266:7;12250:24;;;;;;;;;;;;12243:31;;;;;;;;;;;12745:1;12726:9;:15;12736:4;12726:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12778:1;12761:9;:13;12771:2;12761:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12820:2;12801:7;:16;12809:7;12801:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12859:7;12855:2;12840:27;;12849:4;12840:27;;;;;;;;;;;;12880:41;12900:4;12906:2;12910:7;12919:1;12880:19;:41::i;:::-;11700:1229;;;:::o;7010:117::-;7076:7;7103;:16;7111:7;7103:16;;;;;;;;;;;;;;;;;;;;;7096:23;;7010:117;;;:::o;8341:110::-;8417:26;8427:2;8431:7;8417:26;;;;;;;;;;;;:9;:26::i;:::-;8341:110;;:::o;13365:281::-;13486:8;13477:17;;:5;:17;;;13469:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13573:8;13535:18;:25;13554:5;13535:25;;;;;;;;;;;;;;;:35;13561:8;13535:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13619:8;13597:41;;13612:5;13597:41;;;13629:8;13597:41;;;;;;:::i;:::-;;;;;;;;13365:281;;;:::o;6626:270::-;6739:28;6749:4;6755:2;6759:7;6739:9;:28::i;:::-;6786:47;6809:4;6815:2;6819:7;6828:4;6786:22;:47::i;:::-;6778:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6626:270;;;;:::o;3423:94::-;3474:13;3500:9;;;;;;;;;;;;;;3423:94;:::o;465:716:6:-;521:13;572:14;609:1;589:17;600:5;589:10;:17::i;:::-;:21;572:38;;625:20;659:6;648:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:41;;681:11;810:6;806:2;802:15;794:6;790:28;783:35;;847:288;854:4;847:288;;;879:5;;;;;;;;1021:8;1016:2;1009:5;1005:14;1000:30;995:3;987:44;1077:2;1068:11;;;;;;:::i;:::-;;;;;1111:1;1102:5;:10;847:288;1098:21;847:288;1156:6;1149:13;;;;;465:716;;;:::o;7440:128:0:-;7505:4;7558:1;7529:31;;:17;7538:7;7529:8;:17::i;:::-;:31;;;;7522:38;;7440:128;;;:::o;16019:116::-;;;;;:::o;16857:115::-;;;;;:::o;8678:285::-;8773:18;8779:2;8783:7;8773:5;:18::i;:::-;8824:53;8855:1;8859:2;8863:7;8872:4;8824:22;:53::i;:::-;8802:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;8678:285;;;:::o;14434:853::-;14588:4;14609:15;:2;:13;;;:15::i;:::-;14605:675;;;14661:2;14645:36;;;14682:12;:10;:12::i;:::-;14696:4;14702:7;14711:4;14645:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14641:584;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14903:1;14886:6;:13;:18;14882:328;;14929:60;;;;;;;;;;:::i;:::-;;;;;;;;14882:328;15160:6;15154:13;15145:6;15141:2;15137:15;15130:38;14641:584;14777:41;;;14767:51;;;:6;:51;;;;14760:58;;;;;14605:675;15264:4;15257:11;;14434:853;;;;;;;:::o;10390:948:9:-;10443:7;10463:14;10480:1;10463:18;;10530:8;10521:5;:17;10517:106;;10568:8;10559:17;;;;;;:::i;:::-;;;;;10605:2;10595:12;;;;10517:106;10650:8;10641:5;:17;10637:106;;10688:8;10679:17;;;;;;:::i;:::-;;;;;10725:2;10715:12;;;;10637:106;10770:8;10761:5;:17;10757:106;;10808:8;10799:17;;;;;;:::i;:::-;;;;;10845:2;10835:12;;;;10757:106;10890:7;10881:5;:16;10877:103;;10927:7;10918:16;;;;;;:::i;:::-;;;;;10963:1;10953:11;;;;10877:103;11007:7;10998:5;:16;10994:103;;11044:7;11035:16;;;;;;:::i;:::-;;;;;11080:1;11070:11;;;;10994:103;11124:7;11115:5;:16;11111:103;;11161:7;11152:16;;;;;;:::i;:::-;;;;;11197:1;11187:11;;;;11111:103;11241:7;11232:5;:16;11228:68;;11279:1;11269:11;;;;11228:68;11324:6;11317:13;;;10390:948;;;:::o;9299:942:0:-;9393:1;9379:16;;:2;:16;;;9371:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9452:16;9460:7;9452;:16::i;:::-;9451:17;9443:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9514:48;9543:1;9547:2;9551:7;9560:1;9514:20;:48::i;:::-;9661:16;9669:7;9661;:16::i;:::-;9660:17;9652:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;10076:1;10059:9;:13;10069:2;10059:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;10120:2;10101:7;:16;10109:7;10101:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10165:7;10161:2;10140:33;;10157:1;10140:33;;;;;;;;;;;;10186:47;10214:1;10218:2;10222:7;10231:1;10186:19;:47::i;:::-;9299:942;;:::o;1451:326:4:-;1511:4;1768:1;1746:7;:19;;;:23;1739:30;;1451:326;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:174::-;14232:26;14228:1;14220:6;14216:14;14209:50;14092:174;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:228::-;15209:34;15205:1;15197:6;15193:14;15186:58;15278:11;15273:2;15265:6;15261:15;15254:36;15069:228;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:148::-;16202:11;16239:3;16224:18;;16100:148;;;;:::o;16254:390::-;16360:3;16388:39;16421:5;16388:39;:::i;:::-;16443:89;16525:6;16520:3;16443:89;:::i;:::-;16436:96;;16541:65;16599:6;16594:3;16587:4;16580:5;16576:16;16541:65;:::i;:::-;16631:6;16626:3;16622:16;16615:23;;16364:280;16254:390;;;;:::o;16650:435::-;16830:3;16852:95;16943:3;16934:6;16852:95;:::i;:::-;16845:102;;16964:95;17055:3;17046:6;16964:95;:::i;:::-;16957:102;;17076:3;17069:10;;16650:435;;;;;:::o;17091:224::-;17231:34;17227:1;17219:6;17215:14;17208:58;17300:7;17295:2;17287:6;17283:15;17276:32;17091:224;:::o;17321:366::-;17463:3;17484:67;17548:2;17543:3;17484:67;:::i;:::-;17477:74;;17560:93;17649:3;17560:93;:::i;:::-;17678:2;17673:3;17669:12;17662:19;;17321:366;;;:::o;17693:419::-;17859:4;17897:2;17886:9;17882:18;17874:26;;17946:9;17940:4;17936:20;17932:1;17921:9;17917:17;17910:47;17974:131;18100:4;17974:131;:::i;:::-;17966:139;;17693:419;;;:::o;18118:223::-;18258:34;18254:1;18246:6;18242:14;18235:58;18327:6;18322:2;18314:6;18310:15;18303:31;18118:223;:::o;18347:366::-;18489:3;18510:67;18574:2;18569:3;18510:67;:::i;:::-;18503:74;;18586:93;18675:3;18586:93;:::i;:::-;18704:2;18699:3;18695:12;18688:19;;18347:366;;;:::o;18719:419::-;18885:4;18923:2;18912:9;18908:18;18900:26;;18972:9;18966:4;18962:20;18958:1;18947:9;18943:17;18936:47;19000:131;19126:4;19000:131;:::i;:::-;18992:139;;18719:419;;;:::o;19144:175::-;19284:27;19280:1;19272:6;19268:14;19261:51;19144:175;:::o;19325:366::-;19467:3;19488:67;19552:2;19547:3;19488:67;:::i;:::-;19481:74;;19564:93;19653:3;19564:93;:::i;:::-;19682:2;19677:3;19673:12;19666:19;;19325:366;;;:::o;19697:419::-;19863:4;19901:2;19890:9;19886:18;19878:26;;19950:9;19944:4;19940:20;19936:1;19925:9;19921:17;19914:47;19978:131;20104:4;19978:131;:::i;:::-;19970:139;;19697:419;;;:::o;20122:237::-;20262:34;20258:1;20250:6;20246:14;20239:58;20331:20;20326:2;20318:6;20314:15;20307:45;20122:237;:::o;20365:366::-;20507:3;20528:67;20592:2;20587:3;20528:67;:::i;:::-;20521:74;;20604:93;20693:3;20604:93;:::i;:::-;20722:2;20717:3;20713:12;20706:19;;20365:366;;;:::o;20737:419::-;20903:4;20941:2;20930:9;20926:18;20918:26;;20990:9;20984:4;20980:20;20976:1;20965:9;20961:17;20954:47;21018:131;21144:4;21018:131;:::i;:::-;21010:139;;20737:419;;;:::o;21162:180::-;21210:77;21207:1;21200:88;21307:4;21304:1;21297:15;21331:4;21328:1;21321:15;21348:98;21399:6;21433:5;21427:12;21417:22;;21348:98;;;:::o;21452:168::-;21535:11;21569:6;21564:3;21557:19;21609:4;21604:3;21600:14;21585:29;;21452:168;;;;:::o;21626:373::-;21712:3;21740:38;21772:5;21740:38;:::i;:::-;21794:70;21857:6;21852:3;21794:70;:::i;:::-;21787:77;;21873:65;21931:6;21926:3;21919:4;21912:5;21908:16;21873:65;:::i;:::-;21963:29;21985:6;21963:29;:::i;:::-;21958:3;21954:39;21947:46;;21716:283;21626:373;;;;:::o;22005:640::-;22200:4;22238:3;22227:9;22223:19;22215:27;;22252:71;22320:1;22309:9;22305:17;22296:6;22252:71;:::i;:::-;22333:72;22401:2;22390:9;22386:18;22377:6;22333:72;:::i;:::-;22415;22483:2;22472:9;22468:18;22459:6;22415:72;:::i;:::-;22534:9;22528:4;22524:20;22519:2;22508:9;22504:18;22497:48;22562:76;22633:4;22624:6;22562:76;:::i;:::-;22554:84;;22005:640;;;;;;;:::o;22651:141::-;22707:5;22738:6;22732:13;22723:22;;22754:32;22780:5;22754:32;:::i;:::-;22651:141;;;;:::o;22798:349::-;22867:6;22916:2;22904:9;22895:7;22891:23;22887:32;22884:119;;;22922:79;;:::i;:::-;22884:119;23042:1;23067:63;23122:7;23113:6;23102:9;23098:22;23067:63;:::i;:::-;23057:73;;23013:127;22798:349;;;;:::o;23153:182::-;23293:34;23289:1;23281:6;23277:14;23270:58;23153:182;:::o;23341:366::-;23483:3;23504:67;23568:2;23563:3;23504:67;:::i;:::-;23497:74;;23580:93;23669:3;23580:93;:::i;:::-;23698:2;23693:3;23689:12;23682:19;;23341:366;;;:::o;23713:419::-;23879:4;23917:2;23906:9;23902:18;23894:26;;23966:9;23960:4;23956:20;23952:1;23941:9;23937:17;23930:47;23994:131;24120:4;23994:131;:::i;:::-;23986:139;;23713:419;;;:::o;24138:178::-;24278:30;24274:1;24266:6;24262:14;24255:54;24138:178;:::o;24322:366::-;24464:3;24485:67;24549:2;24544:3;24485:67;:::i;:::-;24478:74;;24561:93;24650:3;24561:93;:::i;:::-;24679:2;24674:3;24670:12;24663:19;;24322:366;;;:::o;24694:419::-;24860:4;24898:2;24887:9;24883:18;24875:26;;24947:9;24941:4;24937:20;24933:1;24922:9;24918:17;24911:47;24975:131;25101:4;24975:131;:::i;:::-;24967:139;;24694:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1885200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2899",
								"getApproved(uint256)": "5300",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "3088",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3459",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2312",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2248",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 646,
									"end": 17581,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1433,
									"end": 1549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1500,
									"end": 1513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1500,
									"end": 1513,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1534,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1524,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 646,
									"end": 17581,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e5102cb28b8b082e5ef7ca6ff1f18eed490122416856184696a0277b48ed26d64736f6c63430008120033",
									".code": [
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 17581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1621,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1621,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1621,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2549,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2549,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4172,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4172,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4172,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3579,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3579,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4872,
											"end": 5173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4872,
											"end": 5173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5244,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5244,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2259,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2259,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2259,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1990,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1990,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1990,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2718,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2718,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4003,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4003,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4415,
											"end": 4570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4415,
											"end": 4570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5466,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5466,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2893,
											"end": 3174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2893,
											"end": 3174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2893,
											"end": 3174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4641,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4641,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4641,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "20DD75A500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1760,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1800,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1800,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1800,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1760,
											"end": 1865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1817,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1865,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1865,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1865,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1760,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1760,
											"end": 1918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1906,
											"end": 1917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1882,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1882,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1760,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2636,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2629,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2629,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4268,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4283,
											"end": 4290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4268,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4291,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4268,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3691,
											"end": 3698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3676,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3676,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3724,
											"end": 3729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3710,
											"end": 3767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3710,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3802,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3802,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3814,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3802,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3844,
											"end": 3849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3851,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3827,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3864,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3827,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3802,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3780,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3780,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3966,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3987,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3966,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5033,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5052,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5052,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5052,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5064,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5052,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5033,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5033,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5033,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5025,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5025,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5147,
											"end": 5151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5153,
											"end": 5155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5137,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 5173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5365,
											"end": 5369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5348,
											"end": 5387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5348,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 5395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2331,
											"end": 2338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2367,
											"end": 2384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2384,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2367,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2395,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2395,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2082,
											"end": 2155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2082,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2807,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2800,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2800,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4079,
											"end": 4089,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4069,
											"end": 4098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4098,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4069,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4529,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4529,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4553,
											"end": 4561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4510,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4415,
											"end": 4570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5616,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5616,
											"end": 5628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5616,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5597,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5638,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5597,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5589,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5589,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5713,
											"end": 5717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5730,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5732,
											"end": 5736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5699,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2992,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3007,
											"end": 3014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2992,
											"end": 3015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3015,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2992,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3052,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3052,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3141,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3141,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3115,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3080,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 3174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 854,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13735,
											"end": 13870,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13735,
											"end": 13870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13817,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13825,
											"end": 13832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13817,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13817,
											"end": 13833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13817,
											"end": 13833,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13817,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 13809,
											"end": 13862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13809,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13735,
											"end": 13870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13735,
											"end": 13870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13222,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13048,
											"end": 13222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13150,
											"end": 13152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13139,
											"end": 13146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13123,
											"end": 13152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13206,
											"end": 13213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 13192,
											"end": 13199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13177,
											"end": 13200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13200,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 13177,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13214,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7999,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7735,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7828,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7876,
											"end": 7883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7861,
											"end": 7884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7861,
											"end": 7884,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7861,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7914,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7903,
											"end": 7919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7903,
											"end": 7919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7903,
											"end": 7955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7923,
											"end": 7955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7955,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 7923,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7955,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7903,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 7903,
											"end": 7990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 7990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7959,
											"end": 7990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7971,
											"end": 7978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7959,
											"end": 7979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7979,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7959,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7959,
											"end": 7990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7990,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 7903,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7895,
											"end": 7991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7895,
											"end": 7991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7895,
											"end": 7991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11700,
											"end": 12929,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11700,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11825,
											"end": 11829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11798,
											"end": 11829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 11798,
											"end": 11821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11821,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11798,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11798,
											"end": 11829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11829,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11790,
											"end": 11871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11790,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11904,
											"end": 11905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11890,
											"end": 11906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11890,
											"end": 11906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11882,
											"end": 11947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11882,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11960,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 11981,
											"end": 11985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11987,
											"end": 11989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11991,
											"end": 11998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12000,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11960,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 11960,
											"end": 12002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11960,
											"end": 12002,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 11960,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12105,
											"end": 12136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12120,
											"end": 12127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12105,
											"end": 12128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12128,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12105,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12105,
											"end": 12136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12136,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 12097,
											"end": 12178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12097,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12250,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12726,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12736,
											"end": 12740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12778,
											"end": 12779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12761,
											"end": 12770,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12771,
											"end": 12773,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12820,
											"end": 12822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12808,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12801,
											"end": 12822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12859,
											"end": 12866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12849,
											"end": 12853,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12867,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 12900,
											"end": 12904,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 12917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12919,
											"end": 12920,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12880,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12880,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12880,
											"end": 12921,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 12880,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11700,
											"end": 12929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11700,
											"end": 12929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11700,
											"end": 12929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11700,
											"end": 12929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7110,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7103,
											"end": 7119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7096,
											"end": 7119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7096,
											"end": 7119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7010,
											"end": 7127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7010,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8451,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8341,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 8427,
											"end": 8429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8431,
											"end": 8438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 8417,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13646,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13365,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13486,
											"end": 13494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13477,
											"end": 13494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13477,
											"end": 13494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13477,
											"end": 13482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13477,
											"end": 13494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13477,
											"end": 13494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13477,
											"end": 13494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 13469,
											"end": 13524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13469,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13553,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13561,
											"end": 13569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13619,
											"end": 13627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13629,
											"end": 13637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13597,
											"end": 13638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13597,
											"end": 13638,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6626,
											"end": 6896,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6626,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6749,
											"end": 6753,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 6766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6739,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6767,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6739,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6809,
											"end": 6813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6817,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6786,
											"end": 6833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6833,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6786,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6778,
											"end": 6888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6778,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6626,
											"end": 6896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6626,
											"end": 6896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6626,
											"end": 6896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6626,
											"end": 6896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6626,
											"end": 6896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3423,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3487,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 465,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 534,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 572,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 610,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 600,
											"end": 605,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 589,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 589,
											"end": 606,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 589,
											"end": 606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 589,
											"end": 610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 648,
											"end": 666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 794,
											"end": 800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 790,
											"end": 818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 783,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 783,
											"end": 818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 854,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 879,
											"end": 884,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 884,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 884,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 879,
											"end": 884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 884,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 879,
											"end": 884,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1005,
											"end": 1019,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 995,
											"end": 998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1031,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1079,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1068,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 847,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1162,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 465,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 465,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 465,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 465,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7568,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7440,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7529,
											"end": 7560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7529,
											"end": 7546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7529,
											"end": 7560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7560,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16135,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16019,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16019,
											"end": 16135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16857,
											"end": 16972,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16857,
											"end": 16972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16857,
											"end": 16972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16857,
											"end": 16972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16857,
											"end": 16972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16857,
											"end": 16972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16857,
											"end": 16972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8963,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 8678,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8783,
											"end": 8790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8773,
											"end": 8791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8824,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 8855,
											"end": 8856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8861,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8863,
											"end": 8870,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8824,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8824,
											"end": 8877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8824,
											"end": 8877,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 8824,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8802,
											"end": 8955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 8802,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 14609,
											"end": 14611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14609,
											"end": 14622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 14609,
											"end": 14624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14624,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 14609,
											"end": 14624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 15280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 14605,
											"end": 15280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14661,
											"end": 14663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14645,
											"end": 14681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14682,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14682,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14682,
											"end": 14694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14682,
											"end": 14694,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14682,
											"end": 14694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14700,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14702,
											"end": 14709,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14715,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 14645,
											"end": 14716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 14645,
											"end": 14716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 14645,
											"end": 14716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14903,
											"end": 14904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14886,
											"end": 14892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14904,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14882,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 14882,
											"end": 15210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 14929,
											"end": 14989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14989,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14882,
											"end": 15210,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 14882,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15160,
											"end": 15166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15145,
											"end": 15151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15141,
											"end": 15143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15137,
											"end": 15152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15130,
											"end": 15168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 14641,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14818,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14777,
											"end": 14818,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14777,
											"end": 14818,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14767,
											"end": 14818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14767,
											"end": 14818,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14767,
											"end": 14818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14767,
											"end": 14773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14767,
											"end": 14818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14767,
											"end": 14818,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14767,
											"end": 14818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14767,
											"end": 14818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14760,
											"end": 14818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14760,
											"end": 14818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14760,
											"end": 14818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14760,
											"end": 14818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14760,
											"end": 14818,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 15280,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 14605,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15268,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15257,
											"end": 15268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15257,
											"end": 15268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14434,
											"end": 15287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10443,
											"end": 10450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10477,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10480,
											"end": 10481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10538,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10521,
											"end": 10526,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10538,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10576,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10559,
											"end": 10576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10605,
											"end": 10607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10650,
											"end": 10658,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 10658,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10688,
											"end": 10696,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10679,
											"end": 10696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10727,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10770,
											"end": 10778,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10761,
											"end": 10766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10761,
											"end": 10778,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10816,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10799,
											"end": 10816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10845,
											"end": 10847,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10890,
											"end": 10897,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10881,
											"end": 10886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 10897,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10927,
											"end": 10934,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10918,
											"end": 10934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10964,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11007,
											"end": 11014,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10998,
											"end": 11003,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11014,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11051,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 11035,
											"end": 11051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11124,
											"end": 11131,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11115,
											"end": 11120,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11131,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11168,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 11152,
											"end": 11168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11198,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11232,
											"end": 11237,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11248,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11280,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11324,
											"end": 11330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11330,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 10241,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9299,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9379,
											"end": 9395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9379,
											"end": 9395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9379,
											"end": 9381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9379,
											"end": 9395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9379,
											"end": 9395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9379,
											"end": 9395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9371,
											"end": 9432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 9371,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9460,
											"end": 9467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9452,
											"end": 9468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9468,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9452,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9451,
											"end": 9468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 9443,
											"end": 9501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 9443,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9514,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9543,
											"end": 9544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9560,
											"end": 9561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9514,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 9514,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9514,
											"end": 9562,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9514,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 9669,
											"end": 9676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9661,
											"end": 9677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 9677,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 9661,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 9652,
											"end": 9710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10076,
											"end": 10077,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10059,
											"end": 10068,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10069,
											"end": 10071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10161,
											"end": 10163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10173,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 10214,
											"end": 10215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10218,
											"end": 10220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10186,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10233,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 10186,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 10241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1765,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1765,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "PUSH",
											"source": 11,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11168,
											"end": 11196,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 11372,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 11537,
											"end": 11540,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 11448,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11568,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11557,
											"end": 11569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11787,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11805,
											"end": 11822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11798,
											"end": 11845,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 11862,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12146,
											"end": 12180,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12130,
											"end": 12144,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12123,
											"end": 12181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12246,
											"name": "PUSH",
											"source": 11,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12213,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12191,
											"end": 12247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12402,
											"end": 12405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 12423,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 12588,
											"end": 12591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12499,
											"end": 12592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12612,
											"end": 12615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12875,
											"end": 12895,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 12913,
											"end": 13044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13197,
											"end": 13231,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13193,
											"end": 13194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13181,
											"end": 13195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13281,
											"name": "PUSH",
											"source": 11,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13261,
											"end": 13263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13249,
											"end": 13264,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13242,
											"end": 13282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 13458,
											"end": 13525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 13623,
											"end": 13626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 13534,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 13654,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13643,
											"end": 13655,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13856,
											"end": 13874,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 13907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13891,
											"end": 13908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13884,
											"end": 13931,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 13948,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14232,
											"end": 14258,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14216,
											"end": 14230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14209,
											"end": 14259,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14414,
											"end": 14417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 14499,
											"end": 14501,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 14435,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 14600,
											"end": 14603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 14511,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14624,
											"end": 14627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14620,
											"end": 14632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14833,
											"end": 14851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14891,
											"end": 14895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14887,
											"end": 14907,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14872,
											"end": 14881,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14868,
											"end": 14885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14861,
											"end": 14908,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 15051,
											"end": 15055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 14925,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15209,
											"end": 15243,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15193,
											"end": 15207,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15186,
											"end": 15244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15278,
											"end": 15289,
											"name": "PUSH",
											"source": 11,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15265,
											"end": 15271,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15261,
											"end": 15276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15254,
											"end": 15290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 15530,
											"end": 15532,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 15466,
											"end": 15533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 15542,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15660,
											"end": 15662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15655,
											"end": 15658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15651,
											"end": 15663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15879,
											"end": 15881,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15864,
											"end": 15882,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15922,
											"end": 15926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15918,
											"end": 15938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15912,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15899,
											"end": 15916,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15892,
											"end": 15939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 15956,
											"end": 16087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16202,
											"end": 16213,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16239,
											"end": 16242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16360,
											"end": 16363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 16421,
											"end": 16426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 16388,
											"end": 16427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 16525,
											"end": 16531,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16520,
											"end": 16523,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 16443,
											"end": 16532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16594,
											"end": 16597,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16587,
											"end": 16591,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16580,
											"end": 16585,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16576,
											"end": 16592,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 16541,
											"end": 16606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16631,
											"end": 16637,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16626,
											"end": 16629,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16622,
											"end": 16638,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16364,
											"end": 16644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16254,
											"end": 16644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16830,
											"end": 16833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16943,
											"end": 16946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16934,
											"end": 16940,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 16852,
											"end": 16947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 17055,
											"end": 17058,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17046,
											"end": 17052,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 16964,
											"end": 17059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17076,
											"end": 17079,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17231,
											"end": 17265,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 17227,
											"end": 17228,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17219,
											"end": 17225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17215,
											"end": 17229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17208,
											"end": 17266,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17300,
											"end": 17307,
											"name": "PUSH",
											"source": 11,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17295,
											"end": 17297,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17283,
											"end": 17298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17276,
											"end": 17308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17091,
											"end": 17315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17463,
											"end": 17466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 17548,
											"end": 17550,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 17543,
											"end": 17546,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 17484,
											"end": 17551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 17649,
											"end": 17652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 17560,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17678,
											"end": 17680,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17673,
											"end": 17676,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17669,
											"end": 17681,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17321,
											"end": 17687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17859,
											"end": 17863,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17886,
											"end": 17895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17882,
											"end": 17900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17946,
											"end": 17955,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17940,
											"end": 17944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17936,
											"end": 17956,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17932,
											"end": 17933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17930,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17917,
											"end": 17934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17910,
											"end": 17957,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 18100,
											"end": 18104,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 17974,
											"end": 18105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17693,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18258,
											"end": 18292,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 18254,
											"end": 18255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18235,
											"end": 18293,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18327,
											"end": 18333,
											"name": "PUSH",
											"source": 11,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18322,
											"end": 18324,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18314,
											"end": 18320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18310,
											"end": 18325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18303,
											"end": 18334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18118,
											"end": 18341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18489,
											"end": 18492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 18574,
											"end": 18576,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 18569,
											"end": 18572,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 18510,
											"end": 18577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 18675,
											"end": 18678,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 18586,
											"end": 18679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18704,
											"end": 18706,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18699,
											"end": 18702,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18695,
											"end": 18707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18347,
											"end": 18713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18885,
											"end": 18889,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 18925,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18912,
											"end": 18921,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18908,
											"end": 18926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18972,
											"end": 18981,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18966,
											"end": 18970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18958,
											"end": 18959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18947,
											"end": 18956,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18943,
											"end": 18960,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18936,
											"end": 18983,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 19126,
											"end": 19130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 19000,
											"end": 19131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18719,
											"end": 19138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19284,
											"end": 19311,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 19280,
											"end": 19281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19272,
											"end": 19278,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19268,
											"end": 19282,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19261,
											"end": 19312,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19144,
											"end": 19319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19467,
											"end": 19470,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 19552,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 19547,
											"end": 19550,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 19488,
											"end": 19555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19481,
											"end": 19555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19481,
											"end": 19555,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 19653,
											"end": 19656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 19564,
											"end": 19657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19682,
											"end": 19684,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19677,
											"end": 19680,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19673,
											"end": 19685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19666,
											"end": 19685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19666,
											"end": 19685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19325,
											"end": 19691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19863,
											"end": 19867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19903,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19890,
											"end": 19899,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19886,
											"end": 19904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19878,
											"end": 19904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19878,
											"end": 19904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19950,
											"end": 19959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19944,
											"end": 19948,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19940,
											"end": 19960,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19936,
											"end": 19937,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19925,
											"end": 19934,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19921,
											"end": 19938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19914,
											"end": 19961,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 20104,
											"end": 20108,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 19978,
											"end": 20109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19970,
											"end": 20109,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19970,
											"end": 20109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19697,
											"end": 20116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20262,
											"end": 20296,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 20258,
											"end": 20259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20250,
											"end": 20256,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20246,
											"end": 20260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20239,
											"end": 20297,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20331,
											"end": 20351,
											"name": "PUSH",
											"source": 11,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 20326,
											"end": 20328,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20318,
											"end": 20324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20314,
											"end": 20329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20307,
											"end": 20352,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20122,
											"end": 20359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20507,
											"end": 20510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 20592,
											"end": 20594,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 20587,
											"end": 20590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 20528,
											"end": 20595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20521,
											"end": 20595,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20521,
											"end": 20595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 20693,
											"end": 20696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 20604,
											"end": 20697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20722,
											"end": 20724,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20717,
											"end": 20720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20713,
											"end": 20725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20706,
											"end": 20725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20706,
											"end": 20725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20365,
											"end": 20731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20903,
											"end": 20907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20941,
											"end": 20943,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20926,
											"end": 20944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20918,
											"end": 20944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20918,
											"end": 20944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20990,
											"end": 20999,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20984,
											"end": 20988,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20965,
											"end": 20974,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20961,
											"end": 20978,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20954,
											"end": 21001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 21144,
											"end": 21148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 21018,
											"end": 21149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21010,
											"end": 21149,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21010,
											"end": 21149,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20737,
											"end": 21156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21162,
											"end": 21342,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 21162,
											"end": 21342,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21210,
											"end": 21287,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21207,
											"end": 21208,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21200,
											"end": 21288,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21307,
											"end": 21311,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 21304,
											"end": 21305,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 21297,
											"end": 21312,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21331,
											"end": 21335,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 21328,
											"end": 21329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21321,
											"end": 21336,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21399,
											"end": 21405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21433,
											"end": 21438,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21427,
											"end": 21439,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 21417,
											"end": 21439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21417,
											"end": 21439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21348,
											"end": 21446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21535,
											"end": 21546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21569,
											"end": 21575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21564,
											"end": 21567,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21557,
											"end": 21576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21609,
											"end": 21613,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21604,
											"end": 21607,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21600,
											"end": 21614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21585,
											"end": 21614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21585,
											"end": 21614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21712,
											"end": 21715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 21772,
											"end": 21777,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 21740,
											"end": 21778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 21857,
											"end": 21863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21852,
											"end": 21855,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 21794,
											"end": 21864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21787,
											"end": 21864,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21787,
											"end": 21864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 21931,
											"end": 21937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21926,
											"end": 21929,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21919,
											"end": 21923,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21912,
											"end": 21917,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 21908,
											"end": 21924,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 21873,
											"end": 21938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 21985,
											"end": 21991,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 21963,
											"end": 21992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21958,
											"end": 21961,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21954,
											"end": 21993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21947,
											"end": 21993,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21947,
											"end": 21993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21716,
											"end": 21999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21626,
											"end": 21999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22200,
											"end": 22204,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22238,
											"end": 22241,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 22227,
											"end": 22236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22223,
											"end": 22242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22215,
											"end": 22242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22215,
											"end": 22242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 22320,
											"end": 22321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22309,
											"end": 22318,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22305,
											"end": 22322,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 22252,
											"end": 22323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 22401,
											"end": 22403,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22390,
											"end": 22399,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22386,
											"end": 22404,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22377,
											"end": 22383,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 22333,
											"end": 22405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 22483,
											"end": 22485,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22472,
											"end": 22481,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22468,
											"end": 22486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22459,
											"end": 22465,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 22415,
											"end": 22487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22534,
											"end": 22543,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22528,
											"end": 22532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22519,
											"end": 22521,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 22508,
											"end": 22517,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22504,
											"end": 22522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22497,
											"end": 22545,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 22633,
											"end": 22637,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22624,
											"end": 22630,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 22562,
											"end": 22638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22554,
											"end": 22638,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22554,
											"end": 22638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22005,
											"end": 22645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22707,
											"end": 22712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22738,
											"end": 22744,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22732,
											"end": 22745,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22723,
											"end": 22745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22723,
											"end": 22745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 22780,
											"end": 22785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 22754,
											"end": 22786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22651,
											"end": 22792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22867,
											"end": 22873,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22916,
											"end": 22918,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22904,
											"end": 22913,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22895,
											"end": 22902,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22891,
											"end": 22914,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22887,
											"end": 22919,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 22922,
											"end": 23001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23042,
											"end": 23043,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 23122,
											"end": 23129,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23113,
											"end": 23119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23102,
											"end": 23111,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23098,
											"end": 23120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 23067,
											"end": 23130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23057,
											"end": 23130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23057,
											"end": 23130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23013,
											"end": 23140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22798,
											"end": 23147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23153,
											"end": 23335,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 23153,
											"end": 23335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23293,
											"end": 23327,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 23289,
											"end": 23290,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23281,
											"end": 23287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23277,
											"end": 23291,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23270,
											"end": 23328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23153,
											"end": 23335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23153,
											"end": 23335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23341,
											"end": 23707,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 23341,
											"end": 23707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23483,
											"end": 23486,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23504,
											"end": 23571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 23568,
											"end": 23570,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23563,
											"end": 23566,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23504,
											"end": 23571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 23504,
											"end": 23571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23504,
											"end": 23571,
											"name": "tag",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 23504,
											"end": 23571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23497,
											"end": 23571,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23497,
											"end": 23571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23580,
											"end": 23673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 23669,
											"end": 23672,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23580,
											"end": 23673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 23580,
											"end": 23673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23580,
											"end": 23673,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 23580,
											"end": 23673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23698,
											"end": 23700,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23693,
											"end": 23696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23689,
											"end": 23701,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23682,
											"end": 23701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23682,
											"end": 23701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23341,
											"end": 23707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23341,
											"end": 23707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23341,
											"end": 23707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23341,
											"end": 23707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23713,
											"end": 24132,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 23713,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23879,
											"end": 23883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23917,
											"end": 23919,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23906,
											"end": 23915,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23902,
											"end": 23920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23894,
											"end": 23920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23894,
											"end": 23920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23966,
											"end": 23975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23960,
											"end": 23964,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23956,
											"end": 23976,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23952,
											"end": 23953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23941,
											"end": 23950,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23937,
											"end": 23954,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23930,
											"end": 23977,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23994,
											"end": 24125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 24120,
											"end": 24124,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23994,
											"end": 24125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 23994,
											"end": 24125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23994,
											"end": 24125,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 23994,
											"end": 24125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23986,
											"end": 24125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23986,
											"end": 24125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23713,
											"end": 24132,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23713,
											"end": 24132,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23713,
											"end": 24132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23713,
											"end": 24132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24138,
											"end": 24316,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 24138,
											"end": 24316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24278,
											"end": 24308,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 24274,
											"end": 24275,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24266,
											"end": 24272,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24262,
											"end": 24276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24255,
											"end": 24309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24138,
											"end": 24316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24138,
											"end": 24316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24322,
											"end": 24688,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 24322,
											"end": 24688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24464,
											"end": 24467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24485,
											"end": 24552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 24549,
											"end": 24551,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 24544,
											"end": 24547,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24485,
											"end": 24552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 24485,
											"end": 24552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24485,
											"end": 24552,
											"name": "tag",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 24485,
											"end": 24552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24478,
											"end": 24552,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24478,
											"end": 24552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24561,
											"end": 24654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 24650,
											"end": 24653,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24561,
											"end": 24654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 24561,
											"end": 24654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24561,
											"end": 24654,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 24561,
											"end": 24654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24679,
											"end": 24681,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24674,
											"end": 24677,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24670,
											"end": 24682,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24663,
											"end": 24682,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24663,
											"end": 24682,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24322,
											"end": 24688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24322,
											"end": 24688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24322,
											"end": 24688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24322,
											"end": 24688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24694,
											"end": 25113,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 24694,
											"end": 25113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24860,
											"end": 24864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24898,
											"end": 24900,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24887,
											"end": 24896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24883,
											"end": 24901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24875,
											"end": 24901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24875,
											"end": 24901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24947,
											"end": 24956,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24941,
											"end": 24945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24937,
											"end": 24957,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 24933,
											"end": 24934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24922,
											"end": 24931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24918,
											"end": 24935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24911,
											"end": 24958,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24975,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 25101,
											"end": 25105,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24975,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 24975,
											"end": 25106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24975,
											"end": 25106,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 24975,
											"end": 25106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24967,
											"end": 25106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24967,
											"end": 25106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24694,
											"end": 25113,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24694,
											"end": 25113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24694,
											"end": 25113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24694,
											"end": 25113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/token/ERC721/ERC721.sol",
								"contracts/token/ERC721/IERC721.sol",
								"contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/Strings.sol",
								"contracts/utils/introspection/ERC165.sol",
								"contracts/utils/introspection/IERC165.sol",
								"contracts/utils/math/Math.sol",
								"contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xec5102f45ebcc6f5a7dd33639876a2f53d88e1fd9a5402b1c31ac0180256376c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af00a58329f70287a45279177ca4f547eedb88f4f15b11ed60183241e238e394\",\"dweb:/ipfs/Qmdbru2SgykCwpoZoXz9Wq6wLNFrTAXJevCzZ3SwD6YLYs\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xa1ab6c74305fd24c70cf5d753288ce4efaa6b74387c54a9e2ec7597c27133cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afd9a8da4a8b136e267c4cf2c654ed6254c567eddd80ee8e00f47e8ee6b2aa89\",\"dweb:/ipfs/QmNTy3i5Vai9UQxPxt6UZxbVRoxc8YEBDsWuQbxw29gY84\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf519c884616195e754dcc17993b01095b97ee7c63f695a8b99d351a143195201\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31d5c889c1bc19d04642d2d6cd3b58bc557f594b9fa67ec05d896366da5f51a4\",\"dweb:/ipfs/QmVVn4QxiSBBw1hgM7wuA5np2kGiVnn3P59zowzEuhqbyR\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x06e9d388db2935fe9f8640453d5dbaf19d7f57b927b48b85026634e4d026542b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03691384333d6967f62b0e5631c8aa38dc073db650c222e2b4302c4c08d3d146\",\"dweb:/ipfs/Qme8spUcmvg2s84GFFwpHtd2uHn9DwgVrtUhg5ew3LauBd\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x914d5706ddfb58b3e31b1daa3407fba0bf036372d174ed061ce22ad53638e2b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09064559eb1e064f78a974a1d6c6361cdec939691f46fbb080c6a5afd4360b5e\",\"dweb:/ipfs/QmUt8JGiyJsvP2qX7K3db6io9LMgkjqb4aB7sQ4Y2JzaYE\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0xb0112adf903226f1ac22a142fdc0ff730cb0fae1102be069d97e11cbac1056c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37cc886f5cfde4afaa68c9b0ef924dad9af4461a973aac9f562b0000edce63b\",\"dweb:/ipfs/QmdvQZ7PmTkbSnjxkoSeADmPT2pbXUeQULQLVgXkDfx69x\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x847fd3fb0bb6946e86e0da7060f08df5961ec874b4f93de2438b835b92edfd08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b85ed4a7ffd8067845fc390c896e4f49f78d4de1be291b76eda465f941e4e0c\",\"dweb:/ipfs/QmbvCXfbTtEq4C1hpVjHGWCUVC5KdZHTCADWDwLYrYJZ88\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xf2a0d6d88bcd4c25ae5973d386d925836e7224ad7bd21315204fbb7dc4099fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9137dd06a4138b21622ec9ea229d6135575517af2867b3d47326fe815a4c9b8d\",\"dweb:/ipfs/QmdtAEnkgUwaX3uKuTwStU624RDpS6gdshrXtgA2RnBjRu\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": "contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": "contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xa1ab6c74305fd24c70cf5d753288ce4efaa6b74387c54a9e2ec7597c27133cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afd9a8da4a8b136e267c4cf2c654ed6254c567eddd80ee8e00f47e8ee6b2aa89\",\"dweb:/ipfs/QmNTy3i5Vai9UQxPxt6UZxbVRoxc8YEBDsWuQbxw29gY84\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf519c884616195e754dcc17993b01095b97ee7c63f695a8b99d351a143195201\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31d5c889c1bc19d04642d2d6cd3b58bc557f594b9fa67ec05d896366da5f51a4\",\"dweb:/ipfs/QmVVn4QxiSBBw1hgM7wuA5np2kGiVnn3P59zowzEuhqbyR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xa1ab6c74305fd24c70cf5d753288ce4efaa6b74387c54a9e2ec7597c27133cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afd9a8da4a8b136e267c4cf2c654ed6254c567eddd80ee8e00f47e8ee6b2aa89\",\"dweb:/ipfs/QmNTy3i5Vai9UQxPxt6UZxbVRoxc8YEBDsWuQbxw29gY84\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x06e9d388db2935fe9f8640453d5dbaf19d7f57b927b48b85026634e4d026542b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03691384333d6967f62b0e5631c8aa38dc073db650c222e2b4302c4c08d3d146\",\"dweb:/ipfs/Qme8spUcmvg2s84GFFwpHtd2uHn9DwgVrtUhg5ew3LauBd\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":202:9607  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":202:9607  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205fd394c782c969a0706551b0387942e4c589bdee4362c5f4022b3ba3df834c5264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fd394c782c969a0706551b0387942e4c589bdee4362c5f4022b3ba3df834c5264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xD3 SWAP5 0xC7 DUP3 0xC9 PUSH10 0xA0706551B0387942E4C5 DUP10 0xBD 0xEE NUMBER PUSH3 0xC5F402 0x2B EXTCODESIZE LOG3 0xDF DUP4 0x4C MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:9405:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fd394c782c969a0706551b0387942e4c589bdee4362c5f4022b3ba3df834c5264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xD3 SWAP5 0xC7 DUP3 0xC9 PUSH10 0xA0706551B0387942E4C5 DUP10 0xBD 0xEE NUMBER PUSH3 0xC5F402 0x2B EXTCODESIZE LOG3 0xDF DUP4 0x4C MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:9405:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fd394c782c969a0706551b0387942e4c589bdee4362c5f4022b3ba3df834c5264736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/token/ERC721/ERC721.sol",
								"contracts/token/ERC721/IERC721.sol",
								"contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/Strings.sol",
								"contracts/utils/introspection/ERC165.sol",
								"contracts/utils/introspection/IERC165.sol",
								"contracts/utils/math/Math.sol",
								"contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x914d5706ddfb58b3e31b1daa3407fba0bf036372d174ed061ce22ad53638e2b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09064559eb1e064f78a974a1d6c6361cdec939691f46fbb080c6a5afd4360b5e\",\"dweb:/ipfs/QmUt8JGiyJsvP2qX7K3db6io9LMgkjqb4aB7sQ4Y2JzaYE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Strings.sol\":231:2863  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Strings.sol\":231:2863  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e7861faf226416d362956f2d5606fbf5f6ccea999009e97c6817c7eda066723964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7861faf226416d362956f2d5606fbf5f6ccea999009e97c6817c7eda066723964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP7 0x1F 0xAF 0x22 PUSH5 0x16D362956F 0x2D JUMP MOD 0xFB CREATE2 0xF6 0xCC 0xEA SWAP10 SWAP1 MULMOD 0xE9 PUSH29 0x6817C7EDA066723964736F6C6343000812003300000000000000000000 ",
							"sourceMap": "231:2632:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7861faf226416d362956f2d5606fbf5f6ccea999009e97c6817c7eda066723964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP7 0x1F 0xAF 0x22 PUSH5 0x16D362956F 0x2D JUMP MOD 0xFB CREATE2 0xF6 0xCC 0xEA SWAP10 SWAP1 MULMOD 0xE9 PUSH29 0x6817C7EDA066723964736F6C6343000812003300000000000000000000 ",
							"sourceMap": "231:2632:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 231,
									"end": 2863,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7861faf226416d362956f2d5606fbf5f6ccea999009e97c6817c7eda066723964736f6c63430008120033",
									".code": [
										{
											"begin": 231,
											"end": 2863,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 231,
											"end": 2863,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/token/ERC721/ERC721.sol",
								"contracts/token/ERC721/IERC721.sol",
								"contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/Strings.sol",
								"contracts/utils/introspection/ERC165.sol",
								"contracts/utils/introspection/IERC165.sol",
								"contracts/utils/math/Math.sol",
								"contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Strings.sol\":{\"keccak256\":\"0xb0112adf903226f1ac22a142fdc0ff730cb0fae1102be069d97e11cbac1056c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37cc886f5cfde4afaa68c9b0ef924dad9af4461a973aac9f562b0000edce63b\",\"dweb:/ipfs/QmdvQZ7PmTkbSnjxkoSeADmPT2pbXUeQULQLVgXkDfx69x\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xf2a0d6d88bcd4c25ae5973d386d925836e7224ad7bd21315204fbb7dc4099fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9137dd06a4138b21622ec9ea229d6135575517af2867b3d47326fe815a4c9b8d\",\"dweb:/ipfs/QmdtAEnkgUwaX3uKuTwStU624RDpS6gdshrXtgA2RnBjRu\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x847fd3fb0bb6946e86e0da7060f08df5961ec874b4f93de2438b835b92edfd08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b85ed4a7ffd8067845fc390c896e4f49f78d4de1be291b76eda465f941e4e0c\",\"dweb:/ipfs/QmbvCXfbTtEq4C1hpVjHGWCUVC5KdZHTCADWDwLYrYJZ88\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/Math.sol\":210:13122  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/Math.sol\":210:13122  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e8df93bab129dd3b8c7ec996b0246133dd6731dddf876477b58c03c1046b6f664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e8df93bab129dd3b8c7ec996b0246133dd6731dddf876477b58c03c1046b6f664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP14 0xF9 EXTCODESIZE 0xAB SLT SWAP14 0xD3 0xB8 0xC7 0xEC SWAP10 PUSH12 0x246133DD6731DDDF876477B PC 0xC0 EXTCODECOPY LT CHAINID 0xB6 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "210:12912:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e8df93bab129dd3b8c7ec996b0246133dd6731dddf876477b58c03c1046b6f664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP14 0xF9 EXTCODESIZE 0xAB SLT SWAP14 0xD3 0xB8 0xC7 0xEC SWAP10 PUSH12 0x246133DD6731DDDF876477B PC 0xC0 EXTCODECOPY LT CHAINID 0xB6 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "210:12912:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e8df93bab129dd3b8c7ec996b0246133dd6731dddf876477b58c03c1046b6f664736f6c63430008120033",
									".code": [
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/token/ERC721/ERC721.sol",
								"contracts/token/ERC721/IERC721.sol",
								"contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/Strings.sol",
								"contracts/utils/introspection/ERC165.sol",
								"contracts/utils/introspection/IERC165.sol",
								"contracts/utils/math/Math.sol",
								"contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xf2a0d6d88bcd4c25ae5973d386d925836e7224ad7bd21315204fbb7dc4099fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9137dd06a4138b21622ec9ea229d6135575517af2867b3d47326fe815a4c9b8d\",\"dweb:/ipfs/QmdtAEnkgUwaX3uKuTwStU624RDpS6gdshrXtgA2RnBjRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SignedMath.sol\":223:1304  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SignedMath.sol\":223:1304  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf07613232cf7651ad7e1d54e7ef589bd529172882ba78e7adb955bac2cc792364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf07613232cf7651ad7e1d54e7ef589bd529172882ba78e7adb955bac2cc792364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SMOD PUSH2 0x3232 0xCF PUSH23 0x51AD7E1D54E7EF589BD529172882BA78E7ADB955BAC2CC PUSH26 0x2364736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "223:1081:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf07613232cf7651ad7e1d54e7ef589bd529172882ba78e7adb955bac2cc792364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SMOD PUSH2 0x3232 0xCF PUSH23 0x51AD7E1D54E7EF589BD529172882BA78E7ADB955BAC2CC PUSH26 0x2364736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "223:1081:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf07613232cf7651ad7e1d54e7ef589bd529172882ba78e7adb955bac2cc792364736f6c63430008120033",
									".code": [
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/token/ERC721/ERC721.sol",
								"contracts/token/ERC721/IERC721.sol",
								"contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/Strings.sol",
								"contracts/utils/introspection/ERC165.sol",
								"contracts/utils/introspection/IERC165.sol",
								"contracts/utils/math/Math.sol",
								"contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1435
						],
						"Context": [
							1457
						],
						"ERC165": [
							1710
						],
						"ERC721": [
							939
						],
						"IERC165": [
							1722
						],
						"IERC721": [
							1060
						],
						"IERC721Metadata": [
							1105
						],
						"IERC721Receiver": [
							1078
						],
						"Math": [
							2588
						],
						"SignedMath": [
							2693
						],
						"Strings": [
							1686
						]
					},
					"id": 940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"absolutePath": "contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 1061,
							"src": "137:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 1079,
							"src": "162:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 1106,
							"src": "195:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 1436,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 1458,
							"src": "274:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 1687,
							"src": "309:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 940,
							"sourceUnit": 1711,
							"src": "344:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"665:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1457,
										"src": "665:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "665:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nameLocations": [
											"674:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1710,
										"src": "674:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "674:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC721",
										"nameLocations": [
											"682:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "682:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "682:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC721Metadata",
										"nameLocations": [
											"691:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1105,
										"src": "691:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "691:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "394:250:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 939,
							"linearizedBaseContracts": [
								939,
								1105,
								1060,
								1710,
								1722,
								1457
							],
							"name": "ERC721",
							"nameLocation": "655:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nameLocations": [
											"720:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1435,
										"src": "720:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "714:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "732:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nameLocations": [
											"752:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1686,
										"src": "752:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "746:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "764:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "814:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 939,
									"src": "799:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "799:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 939,
									"src": "849:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "849:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "963:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 939,
									"src": "927:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "927:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "946:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1060:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 939,
									"src": "1024:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1032:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1024:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1043:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1164:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 939,
									"src": "1128:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1128:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1147:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1290:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 939,
									"src": "1237:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1245:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1237:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 41,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1264:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1256:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 42,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1275:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1489:60:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1500:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1508:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1500:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1500:13:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1524:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1524:17:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1317:110:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1459:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1445:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1445:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1480:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1466:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1466:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:44:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1489:0:0"
									},
									"scope": 939,
									"src": "1433:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1709,
										1721
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1729:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 73,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1760:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 75,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "1780:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1060_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1060_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 74,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1775:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1060",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1789:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1775:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1760:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1817:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 81,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "1837:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1105_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1105_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 80,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1832:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1832:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1105",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1854:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1832:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1817:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1760:105:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 88,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1906:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 86,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1882:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$939_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1888:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1709,
															"src": "1882:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1882:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1760:158:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 91,
												"nodeType": "Return",
												"src": "1740:178:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1557:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1630:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 67,
												"name": "ERC165",
												"nameLocations": [
													"1697:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1710,
												"src": "1697:6:0"
											},
											{
												"id": 68,
												"name": "IERC165",
												"nameLocations": [
													"1705:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1722,
												"src": "1705:7:0"
											}
										],
										"src": "1688:25:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1655:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1648:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1723:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1723:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:6:0"
									},
									"scope": 939,
									"src": "1621:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										980
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2071:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2090:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2107:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2099:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2099:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2099:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2090:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2082:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2082:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2082:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 112,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2173:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"id": 113,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2183:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2173:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 115,
												"nodeType": "Return",
												"src": "2166:23:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1934:50:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1999:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2044:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2017:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2009:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2062:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2061:9:0"
									},
									"scope": 939,
									"src": "1990:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										988
									],
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2340:142:0",
										"statements": [
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2359:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2351:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 126,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2351:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"arguments": [
														{
															"id": 129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2376:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 128,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2351:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2403:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2420:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2412:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2412:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2412:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2403:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2424:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2395:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2395:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2395:56:0"
											},
											{
												"expression": {
													"id": 142,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "2469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 125,
												"id": 143,
												"nodeType": "Return",
												"src": "2462:12:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2205:48:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2268:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2313:8:0"
									},
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:17:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2331:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:9:0"
									},
									"scope": 939,
									"src": "2259:223:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1090
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2618:31:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "2629:12:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2490:53:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2558:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2585:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2562:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2603:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:15:0"
									},
									"scope": 939,
									"src": "2549:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1096
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2789:33:0",
										"statements": [
											{
												"expression": {
													"id": 162,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 161,
												"id": 163,
												"nodeType": "Return",
												"src": "2800:14:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2657:55:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2727:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2756:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2733:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2774:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:15:0"
									},
									"scope": 939,
									"src": "2718:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1104
									],
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2981:193:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 174,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2992:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2992:23:0"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3042:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "3028:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 178,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 180,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3052:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3028:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 185,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "3086:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3080:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 183,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3080:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3080:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3095:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3080:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3104:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3080:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3164:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3080:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 194,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "3132:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 195,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "3141:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3149:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1516,
																			"src": "3141:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3141:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 192,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3115:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3119:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3115:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3115:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3108:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 190,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3108:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3108:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 202,
												"nodeType": "Return",
												"src": "3073:93:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2830:57:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2902:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2948:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2919:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:17:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2966:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2966:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2965:15:0"
									},
									"scope": 939,
									"src": "2893:281:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3489:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3507:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "3500:9:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "3182:235:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3432:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3440:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3474:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3474:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:15:0"
									},
									"scope": 939,
									"src": "3423:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1028
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3649:346:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3668:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "3660:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3660:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 224,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "3676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$939_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3683:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3676:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3676:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3660:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 230,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "3718:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 231,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "3724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3718:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3731:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3710:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3710:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3710:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 237,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "3802:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3802:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 239,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "3818:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3802:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "3844:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 243,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "3851:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3851:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "3827:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3827:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3802:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3879:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3780:173:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3780:173:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3975:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3966:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3966:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "3966:21:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3525:48:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3588:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 220,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3640:8:0"
									},
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3596:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:29:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3649:0:0"
									},
									"scope": 939,
									"src": "3579:416:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1059
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4058:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4079:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4083:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4079:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															507,
															536
														],
														"referencedDeclaration": 507,
														"src": "4069:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4069:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4069:29:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "4012:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4049:8:0"
									},
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4017:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:17:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:0"
									},
									"scope": 939,
									"src": "4003:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1044
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "4257:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4283:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 278,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "4268:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4268:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "4268:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 282,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4311:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 284,
													"indexExpression": {
														"id": 283,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "4327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4311:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 277,
												"id": 285,
												"nodeType": "Return",
												"src": "4304:31:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4114:52:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4181:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 274,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4230:8:0"
									},
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4201:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "4193:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:17:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "4248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4247:9:0"
									},
									"scope": 939,
									"src": "4172:171:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1036
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "4499:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 297,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "4529:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4529:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4543:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "4553:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 296,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "4510:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4510:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "4510:52:0"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "4351:58:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4424:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 294,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4490:8:0"
									},
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4450:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4442:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4465:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4441:33:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4499:0:0"
									},
									"scope": 939,
									"src": "4415:155:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1054
									],
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "4744:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 315,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4762:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 317,
														"indexExpression": {
															"id": 316,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4781:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4762:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 319,
													"indexExpression": {
														"id": 318,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "4788:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4762:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 314,
												"id": 320,
												"nodeType": "Return",
												"src": "4755:42:0"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "4578:57:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4650:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 311,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4720:8:0"
									},
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4675:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4667:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4690:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4682:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:33:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4738:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4737:6:0"
									},
									"scope": 939,
									"src": "4641:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1020
									],
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "4961:212:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 335,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5052:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5052:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 337,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "5066:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 334,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "5033:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5033:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5076:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5025:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "5025:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5147:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5153:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "5157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "5137:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5137:28:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "4813:53:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4881:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 331,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4952:8:0"
									},
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4894:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4916:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4928:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4920:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:43:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4961:0:0"
									},
									"scope": 939,
									"src": "4872:301:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "5337:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "5371:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "5375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5384:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 360,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															368,
															398
														],
														"referencedDeclaration": 398,
														"src": "5348:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "5348:39:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5181:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5253:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 358,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5328:8:0"
									},
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5278:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5270:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5292:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5284:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5304:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5269:43:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5337:0:0"
									},
									"scope": 939,
									"src": "5244:151:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1000
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "5578:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 383,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5616:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5616:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 385,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5630:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 382,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "5597:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5597:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5640:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5589:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5589:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "5713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "5719:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 394,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "5732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "5699:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5699:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "5699:38:0"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "5403:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5475:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 379,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5569:8:0"
									},
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5500:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "5492:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5514:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "5506:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5526:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "5518:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5548:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "5535:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5491:62:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5578:0:0"
									},
									"scope": 939,
									"src": "5466:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "6728:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "6749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "6755:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "6759:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 410,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6739:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "6739:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 418,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "6809:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 419,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6815:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 420,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6819:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 421,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "6828:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 417,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "6786:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6786:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6835:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6778:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "6778:110:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "5753:867:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6635:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6657:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6649:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6671:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6663:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6692:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6648:62:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6728:0:0"
									},
									"scope": 939,
									"src": "6626:270:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "7085:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 435,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 437,
													"indexExpression": {
														"id": 436,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "7111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7103:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 434,
												"id": 438,
												"nodeType": "Return",
												"src": "7096:23:0"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "6904:100:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "7019:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7036:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "7028:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7027:17:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "7076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7075:9:0"
									},
									"scope": 939,
									"src": "7010:117:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "7511:57:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 449,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "7538:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 448,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "7529:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7529:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7558:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 451,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7550:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7550:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7529:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 447,
												"id": 456,
												"nodeType": "Return",
												"src": "7522:38:0"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "7135:299:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7449:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7465:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "7457:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7456:17:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "7505:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7504:6:0"
									},
									"scope": 939,
									"src": "7440:128:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "7834:165:0",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7853:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "7845:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 468,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7845:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"arguments": [
														{
															"id": 472,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 470,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "7861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$939_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7868:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "7861:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7861:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7845:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 475,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "7903:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 476,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "7914:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7903:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 479,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "7940:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 480,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 461,
																			"src": "7947:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 478,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "7923:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7923:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7903:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 484,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "7971:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 483,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "7959:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7959:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 486,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "7983:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7959:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7903:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 489,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7902:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 467,
												"id": 490,
												"nodeType": "Return",
												"src": "7895:96:0"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7576:153:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7744:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7788:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7780:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7762:34:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7828:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7828:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7827:6:0"
									},
									"scope": 939,
									"src": "7735:264:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "8406:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8427:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8440:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 500,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															507,
															536
														],
														"referencedDeclaration": 536,
														"src": "8417:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8417:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "8417:26:0"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "8007:328:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8350:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8368:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8360:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8380:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8372:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8359:29:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8406:0:0"
									},
									"scope": 939,
									"src": "8341:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "8762:201:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "8779:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "8783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "8773:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8773:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8773:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8855:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8847:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 524,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8847:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8847:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 528,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "8859:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 529,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "8863:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 530,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "8872:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 523,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "8824:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8824:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8892:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8802:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "8802:153:0"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "8459:213:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8687:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8705:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "8697:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8717:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "8709:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8739:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "8726:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8696:48:0"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8762:0:0"
									},
									"scope": 939,
									"src": "8678:285:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "9360:881:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 545,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "9379:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9393:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9385:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 546,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9385:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9385:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9379:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9397:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9371:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "9371:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9451:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "9460:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 555,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "9452:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9452:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9470:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9443:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "9443:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9543:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9535:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9535:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9535:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "9547:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "9551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9560:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 562,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "9514:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9514:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "9514:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9660:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 574,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "9669:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 573,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "9661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9661:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9679:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9652:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9652:58:0"
											},
											{
												"id": 586,
												"nodeType": "UncheckedBlock",
												"src": "9723:366:0",
												"statements": [
													{
														"expression": {
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 580,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10059:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"id": 581,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "10069:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10059:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10059:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 585,
														"nodeType": "ExpressionStatement",
														"src": "10059:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 587,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "10101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 589,
														"indexExpression": {
															"id": 588,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "10109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10101:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 590,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "10120:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10101:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "10101:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10157:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10149:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10149:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10149:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "10161:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "10165:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "10140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10140:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "10135:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10214:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 603,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10206:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10206:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "10218:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "10222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10231:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 602,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "10186:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10186:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "10186:47:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "8971:322:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9308:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9322:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "9314:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "9326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9313:29:0"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9360:0:0"
									},
									"scope": 939,
									"src": "9299:942:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "10629:734:0",
										"statements": [
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10648:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "10640:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 619,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10640:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "10671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 621,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "10656:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$939_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10663:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "10656:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10656:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10640:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "10713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10728:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10720:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10720:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10720:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "10732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 626,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "10692:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10692:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "10692:51:0"
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 636,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "10848:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 639,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "10871:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 637,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "10856:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$939_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10863:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 145,
															"src": "10856:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10856:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10848:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "10848:31:0"
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10920:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 643,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "10927:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 645,
														"indexExpression": {
															"id": 644,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "10943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10927:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "10920:31:0"
											},
											{
												"id": 654,
												"nodeType": "UncheckedBlock",
												"src": "10964:241:0",
												"statements": [
													{
														"expression": {
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 648,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "11172:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 650,
																"indexExpression": {
																	"id": 649,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "11182:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11172:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11172:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 653,
														"nodeType": "ExpressionStatement",
														"src": "11172:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11215:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 655,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "11222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 657,
														"indexExpression": {
															"id": 656,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "11230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11222:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "11215:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 661,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11265:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11280:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 662,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11272:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11272:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "11284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "11256:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11256:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "EmitStatement",
												"src": "11251:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11325:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11332:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11332:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11332:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "11344:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11353:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 669,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "11305:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11305:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "11305:50:0"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "10249:325:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10589:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "10595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10594:17:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10629:0:0"
									},
									"scope": 939,
									"src": "10580:783:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "11779:1150:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "11813:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 691,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "11798:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$939_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11805:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11798:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11798:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 695,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "11825:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11798:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11831:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11790:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "11790:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "11890:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11904:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11896:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11896:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11890:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11908:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11882:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "11882:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "11981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "11987:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "11991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12000:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 710,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "11960:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11960:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "11960:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 720,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "12120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "12105:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$939_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12112:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "12105:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12105:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 722,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "12132:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12105:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12138:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12097:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12097:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "12097:81:0"
											},
											{
												"expression": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12243:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 727,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "12250:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 729,
														"indexExpression": {
															"id": 728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "12266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12250:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "12243:31:0"
											},
											{
												"id": 744,
												"nodeType": "UncheckedBlock",
												"src": "12287:504:0",
												"statements": [
													{
														"expression": {
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 732,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12726:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 734,
																"indexExpression": {
																	"id": 733,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "12736:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12726:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12745:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12726:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "12726:20:0"
													},
													{
														"expression": {
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 738,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12761:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 740,
																"indexExpression": {
																	"id": 739,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "12771:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12761:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12778:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12761:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 743,
														"nodeType": "ExpressionStatement",
														"src": "12761:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 745,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "12801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 747,
														"indexExpression": {
															"id": 746,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "12809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12801:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 748,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "12820:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12801:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "12801:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 752,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "12849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 753,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "12855:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "12859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 751,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "12840:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12840:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "EmitStatement",
												"src": "12835:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "12900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "12906:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "12910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12919:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 757,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "12880:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12880:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "12880:41:0"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "11371:323:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11709:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "11719:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11741:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "11733:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11753:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "11745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11718:43:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11779:0:0"
									},
									"scope": 939,
									"src": "11700:1229:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "13112:110:0",
										"statements": [
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 773,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "13123:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 775,
														"indexExpression": {
															"id": 774,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "13139:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13123:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 776,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "13150:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13123:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "13123:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 782,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "13192:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 780,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "13177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$939_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13184:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "13177:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13177:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "13202:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "13206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "13168:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13168:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "EmitStatement",
												"src": "13163:51:0"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "12937:105:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "13057:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13074:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "13066:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "13078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13065:29:0"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13112:0:0"
									},
									"scope": 939,
									"src": "13048:174:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "13458:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 800,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "13477:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 801,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "13486:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13477:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13496:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13469:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "13469:55:0"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 806,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "13535:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 809,
															"indexExpression": {
																"id": 807,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "13554:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13535:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 810,
														"indexExpression": {
															"id": 808,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "13561:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13535:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 811,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "13573:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13535:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "13535:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 815,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "13612:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "13619:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "13629:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 814,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "13597:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13597:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "EmitStatement",
												"src": "13592:46:0"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "13230:129:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13374:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13401:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "13393:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13416:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "13408:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13431:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "13426:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13426:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13392:48:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13458:0:0"
									},
									"scope": 939,
									"src": "13365:281:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "13798:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 829,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "13825:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 828,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "13817:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13817:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13835:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13809:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "13809:53:0"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "13654:75:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13744:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "13759:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13758:17:0"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13798:0:0"
									},
									"scope": 939,
									"src": "13735:135:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "14594:693:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 849,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "14609:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14612:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "14609:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14609:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "15242:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15264:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 848,
															"id": 893,
															"nodeType": "Return",
															"src": "15257:11:0"
														}
													]
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "14605:675:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "14626:610:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 871,
																		"nodeType": "Block",
																		"src": "14741:93:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 869,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 865,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 863,
																						"src": "14767:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 866,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1078,
																								"src": "14777:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1078_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 867,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14793:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1077,
																							"src": "14777:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 868,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14810:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14777:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14767:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 848,
																				"id": 870,
																				"nodeType": "Return",
																				"src": "14760:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 872,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 864,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 863,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14733:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 872,
																				"src": "14726:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 862,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14726:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14725:15:0"
																	},
																	"src": "14717:117:0"
																},
																{
																	"block": {
																		"id": 888,
																		"nodeType": "Block",
																		"src": "14863:362:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 879,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 876,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 874,
																							"src": "14886:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 877,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14893:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14886:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 878,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14903:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14886:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 886,
																					"nodeType": "Block",
																					"src": "15015:195:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15103:88:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15141:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15145:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15137:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15137:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15160:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15154:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15154:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15130:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15130:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15130:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 874,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15145:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 874,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15160:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 885,
																							"nodeType": "InlineAssembly",
																							"src": "15094:97:0"
																						}
																					]
																				},
																				"id": 887,
																				"nodeType": "IfStatement",
																				"src": "14882:328:0",
																				"trueBody": {
																					"id": 884,
																					"nodeType": "Block",
																					"src": "14906:103:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 881,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14936:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 880,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14929:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 882,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14929:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 883,
																							"nodeType": "ExpressionStatement",
																							"src": "14929:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 889,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 875,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 874,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14855:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 889,
																				"src": "14842:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 873,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14842:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14841:21:0"
																	},
																	"src": "14835:390:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 856,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "14682:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14682:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 858,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "14696:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 859,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "14702:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 860,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "14711:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 853,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "14661:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 852,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "14645:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1078_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14645:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1078",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14665:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1077,
																	"src": "14645:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14645:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 890,
															"nodeType": "TryStatement",
															"src": "14641:584:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "13878:550:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14443:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14484:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "14476:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14507:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "14499:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14528:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "14520:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14559:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "14546:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14546:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:105:0"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "14588:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14588:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14587:6:0"
									},
									"scope": 939,
									"src": "14434:853:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "16133:2:0",
										"statements": []
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "15295:718:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16028:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16057:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16049:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16071:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16063:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16083:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16075:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16105:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "16097:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16048:67:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16133:0:0"
									},
									"scope": 939,
									"src": "16019:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "16970:2:0",
										"statements": []
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "16143:708:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16866:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16894:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "16886:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16908:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "16900:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16920:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "16912:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16942:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "16934:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16885:67:0"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16970:0:0"
									},
									"scope": 939,
									"src": "16857:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "17531:47:0",
										"statements": [
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 931,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "17542:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 933,
														"indexExpression": {
															"id": 932,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "17552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17542:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 934,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "17564:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17542:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "17542:28:0"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "16980:415:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "17464:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17497:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "17489:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17514:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "17506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17488:33:0"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17531:0:0"
									},
									"scope": 939,
									"src": "17455:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 940,
							"src": "646:16935:0",
							"usedErrors": []
						}
					],
					"src": "110:17473:0"
				},
				"id": 0
			},
			"contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1722
						],
						"IERC721": [
							1060
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:1"
						},
						{
							"absolutePath": "contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 1723,
							"src": "138:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 944,
										"name": "IERC165",
										"nameLocations": [
											"281:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "281:7:1"
									},
									"id": 945,
									"nodeType": "InheritanceSpecifier",
									"src": "281:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 943,
								"nodeType": "StructuredDocumentation",
								"src": "189:69:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1060,
							"linearizedBaseContracts": [
								1060,
								1722
							],
							"name": "IERC721",
							"nameLocation": "270:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "296:90:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 954,
									"name": "Transfer",
									"nameLocation": "398:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "423:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "407:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "445:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "429:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "465:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "449:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:67:1"
									},
									"src": "392:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "482:96:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 963,
									"name": "Approval",
									"nameLocation": "590:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "615:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "599:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "638:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "622:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "648:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:74:1"
									},
									"src": "584:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "681:119:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 972,
									"name": "ApprovalForAll",
									"nameLocation": "812:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "843:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "827:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "866:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "850:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "881:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "876:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "876:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:64:1"
									},
									"src": "806:85:1"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "899:78:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "992:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1010:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1002:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:15:1"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1048:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1040:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:17:1"
									},
									"scope": 1060,
									"src": "983:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "1065:137:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1217:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1233:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1225:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:17:1"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1273:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1265:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:15:1"
									},
									"scope": 1060,
									"src": "1208:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "1288:568:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1871:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1910:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1902:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1922:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1914:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1946:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1931:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1931:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:64:1"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:0:1"
									},
									"scope": 1060,
									"src": "1862:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "1969:700:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2684:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "2701:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2723:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "2715:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2735:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "2727:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:43:1"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:1"
									},
									"scope": 1060,
									"src": "2675:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "2761:747:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3523:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3544:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "3536:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3558:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "3550:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3570:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "3562:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:43:1"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3587:0:1"
									},
									"scope": 1060,
									"src": "3514:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "3596:464:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4075:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4091:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "4083:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4103:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "4095:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:29:1"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4120:0:1"
									},
									"scope": 1060,
									"src": "4066:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "4129:318:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4462:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4488:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4480:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4503:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4498:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4498:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4479:33:1"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4521:0:1"
									},
									"scope": 1060,
									"src": "4453:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "4530:145:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4690:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4710:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "4702:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:17:1"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4750:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "4742:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:18:1"
									},
									"scope": 1060,
									"src": "4681:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "4768:142:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4925:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4950:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4942:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4942:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4965:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4957:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4941:33:1"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4998:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4998:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4997:6:1"
									},
									"scope": 1060,
									"src": "4916:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0712d68",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5021:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5034:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "5026:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5025:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5051:0:1"
									},
									"scope": 1060,
									"src": "5012:40:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1061,
							"src": "260:4795:1",
							"usedErrors": []
						}
					],
					"src": "111:4944:1"
				},
				"id": 1
			},
			"contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1063,
								"nodeType": "StructuredDocumentation",
								"src": "146:156:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "IERC721Receiver",
							"nameLocation": "314:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "337:501:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "853:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "888:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "880:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "915:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "907:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "971:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "956:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "956:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:113:2"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1001:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1074,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1001:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:8:2"
									},
									"scope": 1078,
									"src": "844:165:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1079,
							"src": "304:708:2",
							"usedErrors": []
						}
					],
					"src": "119:893:2"
				},
				"id": 2
			},
			"contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1722
						],
						"IERC721": [
							1060
						],
						"IERC721Metadata": [
							1105
						]
					},
					"id": 1106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1106,
							"sourceUnit": 1061,
							"src": "142:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1083,
										"name": "IERC721",
										"nameLocations": [
											"337:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "337:7:3"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "337:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "170:136:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1105,
							"linearizedBaseContracts": [
								1105,
								1060,
								1722
							],
							"name": "IERC721Metadata",
							"nameLocation": "318:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "352:60:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "427:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:2:3"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "457:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "457:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:15:3"
									},
									"scope": 1105,
									"src": "418:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "480:62:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "557:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:2:3"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "589:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1093,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "589:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:15:3"
									},
									"scope": 1105,
									"src": "548:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "612:92:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "719:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "736:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "728:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:17:3"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "768:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "768:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:15:3"
									},
									"scope": 1105,
									"src": "710:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1106,
							"src": "308:478:3",
							"usedErrors": []
						}
					],
					"src": "115:671:3"
				},
				"id": 3
			},
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1435
						]
					},
					"id": 1436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1108,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1435,
							"linearizedBaseContracts": [
								1435
							],
							"name": "Address",
							"nameLocation": "210:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "1517:260:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1116,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "1746:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1754:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1746:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1759:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1746:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1746:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1121,
												"nodeType": "Return",
												"src": "1739:30:4"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "225:1220:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1460:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1479:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1471:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:17:4"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1511:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1511:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:6:4"
									},
									"scope": 1435,
									"src": "1451:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "2782:246:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1134,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2809:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2801:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1132,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2801:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2801:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2815:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2801:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1137,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "2826:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2801:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2834:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2793:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2793:73:4"
											},
											{
												"assignments": [
													1143,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2885:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "2880:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2880:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1150,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2928:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1144,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "2898:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2908:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2898:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1146,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "2920:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2898:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2879:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2950:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2959:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2942:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2942:78:4"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "1785:920:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2720:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2746:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2730:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2765:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2757:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:43:4"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:4"
									},
									"scope": 1435,
									"src": "2711:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "3879:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "3919:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "3927:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3933:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3936:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1167,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1215,
															1259
														],
														"referencedDeclaration": 1259,
														"src": "3897:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1173,
												"nodeType": "Return",
												"src": "3890:79:4"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "3036:748:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3799:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3820:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3812:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3841:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3828:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3828:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:35:4"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3865:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3865:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:14:4"
									},
									"scope": 1435,
									"src": "3790:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "4358:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1188,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4398:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "4406:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4412:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1191,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "4415:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1187,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1215,
															1259
														],
														"referencedDeclaration": 1259,
														"src": "4376:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1193,
												"nodeType": "Return",
												"src": "4369:59:4"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "3985:216:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4216:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4247:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "4239:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4277:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "4264:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4264:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4306:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "4292:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4292:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4228:97:4"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "4344:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4344:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:14:4"
									},
									"scope": 1435,
									"src": "4207:229:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "4924:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1208,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "4964:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1209,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "4972:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1210,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "4978:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4985:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1207,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1215,
															1259
														],
														"referencedDeclaration": 1259,
														"src": "4942:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4942:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1213,
												"nodeType": "Return",
												"src": "4935:94:4"
											}
										]
									},
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "4444:361:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4820:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4850:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4842:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4871:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4858:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4858:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4885:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4877:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:50:4"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4910:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4910:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:14:4"
									},
									"scope": 1435,
									"src": "4811:226:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5477:271:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1232,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5504:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5496:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1230,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5496:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5496:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5510:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "5521:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5496:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5528:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5488:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "5488:81:4"
											},
											{
												"assignments": [
													1241,
													1243
												],
												"declarations": [
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5586:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "5581:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1240,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5581:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5608:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "5595:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1242,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5595:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"id": 1248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "5648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1244,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "5622:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5629:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5622:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "5641:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5622:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5622:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5580:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "5698:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "5706:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1254,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "5715:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1255,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "5727:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1251,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "5671:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1257,
												"nodeType": "Return",
												"src": "5664:76:4"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "5045:242:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5302:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5342:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5334:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5372:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5359:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5359:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5395:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5387:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5425:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5411:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5411:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5323:121:4"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5463:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5463:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:14:4"
									},
									"scope": 1435,
									"src": "5293:455:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "6033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "6070:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1271,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "6078:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6084:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1269,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1276,
															1305
														],
														"referencedDeclaration": 1305,
														"src": "6051:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6051:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1268,
												"id": 1274,
												"nodeType": "Return",
												"src": "6044:80:4"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5756:171:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5942:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5969:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5961:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5990:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5977:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5977:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:35:4"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "6019:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6019:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6018:14:4"
									},
									"scope": 1435,
									"src": "5933:199:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "6486:171:4",
										"statements": [
											{
												"assignments": [
													1289,
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6503:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "6498:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1288,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6498:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6525:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "6512:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1290,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6512:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "6557:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1292,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6539:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6546:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6539:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6497:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6607:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "6615:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1300,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "6624:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1301,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "6636:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1297,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "6580:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1303,
												"nodeType": "Return",
												"src": "6573:76:4"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "6140:178:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6333:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6370:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6362:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6400:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6387:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6387:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6429:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6415:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6415:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:97:4"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6472:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6472:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:14:4"
									},
									"scope": 1435,
									"src": "6324:333:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "6941:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1316,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "6980:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6988:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6994:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1315,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1322,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "6959:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1320,
												"nodeType": "Return",
												"src": "6952:84:4"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "6665:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6853:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6882:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "6874:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6903:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "6890:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6890:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:35:4"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "6927:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6927:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6926:14:4"
									},
									"scope": 1435,
									"src": "6844:200:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "7397:173:4",
										"statements": [
											{
												"assignments": [
													1335,
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7414:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "7409:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1334,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7409:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7436:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "7423:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1336,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7423:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1340,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "7470:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1338,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7450:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7457:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7450:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7450:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7408:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7520:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "7528:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1346,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "7537:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1347,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "7549:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1343,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "7493:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7493:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1349,
												"nodeType": "Return",
												"src": "7486:76:4"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "7052:180:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7247:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7286:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "7278:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7316:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "7303:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7303:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7345:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "7331:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1328,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7331:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7267:97:4"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "7383:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7383:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7382:14:4"
									},
									"scope": 1435,
									"src": "7238:332:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "8065:445:4",
										"statements": [
											{
												"condition": {
													"id": 1365,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1356,
													"src": "8080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1387,
													"nodeType": "Block",
													"src": "8443:60:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1383,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "8466:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1384,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "8478:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1382,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "8458:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8458:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1386,
															"nodeType": "ExpressionStatement",
															"src": "8458:33:4"
														}
													]
												},
												"id": 1388,
												"nodeType": "IfStatement",
												"src": "8076:427:4",
												"trueBody": {
													"id": 1381,
													"nodeType": "Block",
													"src": "8089:348:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1366,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "8108:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8119:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8108:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8129:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8108:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1378,
															"nodeType": "IfStatement",
															"src": "8104:290:4",
															"trueBody": {
																"id": 1377,
																"nodeType": "Block",
																"src": "8132:262:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1372,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1354,
																							"src": "8337:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1371,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1123,
																						"src": "8326:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8326:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8346:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1370,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8318:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8318:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1376,
																		"nodeType": "ExpressionStatement",
																		"src": "8318:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1379,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "8415:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1364,
															"id": 1380,
															"nodeType": "Return",
															"src": "8408:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "7578:282:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7875:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7920:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7912:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7942:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7937:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7937:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7973:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7960:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7960:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8008:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7994:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7994:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:126:4"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "8051:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8050:14:4"
									},
									"scope": 1435,
									"src": "7866:644:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "8903:141:4",
										"statements": [
											{
												"condition": {
													"id": 1402,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "8918:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1411,
													"nodeType": "Block",
													"src": "8977:60:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1407,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "9000:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1408,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "9012:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1406,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "8992:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8992:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1410,
															"nodeType": "ExpressionStatement",
															"src": "8992:33:4"
														}
													]
												},
												"id": 1412,
												"nodeType": "IfStatement",
												"src": "8914:123:4",
												"trueBody": {
													"id": 1405,
													"nodeType": "Block",
													"src": "8927:44:4",
													"statements": [
														{
															"expression": {
																"id": 1403,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "8949:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1401,
															"id": 1404,
															"nodeType": "Return",
															"src": "8942:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "8518:215:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8748:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8780:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8775:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8775:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8811:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8798:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8798:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8846:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8832:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8832:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8764:101:4"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8889:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8889:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:14:4"
									},
									"scope": 1435,
									"src": "8739:305:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "9135:469:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1421,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "9213:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9224:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9213:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9233:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9213:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1431,
													"nodeType": "Block",
													"src": "9550:47:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1428,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "9572:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1427,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9565:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9565:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1430,
															"nodeType": "ExpressionStatement",
															"src": "9565:20:4"
														}
													]
												},
												"id": 1432,
												"nodeType": "IfStatement",
												"src": "9209:388:4",
												"trueBody": {
													"id": 1426,
													"nodeType": "Block",
													"src": "9236:308:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9397:136:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9416:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9445:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9439:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9439:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9420:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9485:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9489:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9481:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9481:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9502:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9474:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9474:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9474:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1416,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9445:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1416,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9489:10:4",
																	"valueSize": 1
																}
															],
															"id": 1425,
															"nodeType": "InlineAssembly",
															"src": "9388:145:4"
														}
													]
												}
											}
										]
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "9061:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9082:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "9069:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9069:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9108:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "9094:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9094:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9068:53:4"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9135:0:4"
									},
									"scope": 1435,
									"src": "9052:552:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1436,
							"src": "202:9405:4",
							"usedErrors": []
						}
					],
					"src": "104:9503:4"
				},
				"id": 4
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1457
						]
					},
					"id": 1458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1437,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1438,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1457,
							"linearizedBaseContracts": [
								1457
							],
							"name": "Context",
							"nameLocation": "641:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "718:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1443,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1445,
												"nodeType": "Return",
												"src": "729:17:5"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1457,
									"src": "656:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "829:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1452,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1454,
												"nodeType": "Return",
												"src": "840:15:5"
											}
										]
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:5"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "813:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:5"
									},
									"scope": 1457,
									"src": "762:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1458,
							"src": "623:243:5",
							"usedErrors": []
						}
					],
					"src": "89:777:5"
				},
				"id": 5
			},
			"contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2588
						],
						"SignedMath": [
							2693
						],
						"Strings": [
							1686
						]
					},
					"id": 1687,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:6"
						},
						{
							"absolutePath": "contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 2589,
							"src": "131:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 2694,
							"src": "158:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1462,
								"nodeType": "StructuredDocumentation",
								"src": "193:36:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1686,
							"linearizedBaseContracts": [
								1686
							],
							"name": "Strings",
							"nameLocation": "239:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1465,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "279:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1686,
									"src": "254:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1463,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1464,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "290:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1468,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "338:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1686,
									"src": "315:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1466,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "315:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1467,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "356:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "536:645:6",
										"statements": [
											{
												"id": 1514,
												"nodeType": "UncheckedBlock",
												"src": "547:627:6",
												"statements": [
													{
														"assignments": [
															1477
														],
														"declarations": [
															{
																"constant": false,
																"id": 1477,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "580:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1514,
																"src": "572:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1476,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1484,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1480,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "600:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1478,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2588,
																		"src": "589:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2588_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "594:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2425,
																	"src": "589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "589:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "609:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "589:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:38:6"
													},
													{
														"assignments": [
															1486
														],
														"declarations": [
															{
																"constant": false,
																"id": 1486,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "639:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1514,
																"src": "625:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1485,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "625:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1491,
														"initialValue": {
															"arguments": [
																{
																	"id": 1489,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "659:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "648:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1487,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "652:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "648:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "625:41:6"
													},
													{
														"assignments": [
															1493
														],
														"declarations": [
															{
																"constant": false,
																"id": 1493,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "689:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1514,
																"src": "681:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1492,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "681:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1494,
														"nodeType": "VariableDeclarationStatement",
														"src": "681:11:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "764:69:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "783:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "794:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "806:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "802:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "802:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1486,
																"isOffset": false,
																"isSlot": false,
																"src": "794:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1477,
																"isOffset": false,
																"isSlot": false,
																"src": "810:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1493,
																"isOffset": false,
																"isSlot": false,
																"src": "783:3:6",
																"valueSize": 1
															}
														],
														"id": 1495,
														"nodeType": "InlineAssembly",
														"src": "755:78:6"
													},
													{
														"body": {
															"id": 1510,
															"nodeType": "Block",
															"src": "860:275:6",
															"statements": [
																{
																	"expression": {
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "879:5:6",
																		"subExpression": {
																			"id": 1497,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1493,
																			"src": "879:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1499,
																	"nodeType": "ExpressionStatement",
																	"src": "879:5:6"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "964:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "995:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1009:5:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1016:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1005:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1005:14:6"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1021:8:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1000:4:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1000:30:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "987:7:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "987:44:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "987:44:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1465,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1021:8:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1493,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "995:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1471,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1009:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1500,
																	"nodeType": "InlineAssembly",
																	"src": "955:95:6"
																},
																{
																	"expression": {
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "1068:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1068:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1504,
																	"nodeType": "ExpressionStatement",
																	"src": "1068:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1505,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1471,
																			"src": "1102:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1111:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1102:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1509,
																	"nodeType": "IfStatement",
																	"src": "1098:21:6",
																	"trueBody": {
																		"id": 1508,
																		"nodeType": "Break",
																		"src": "1114:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "854:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1511,
														"nodeType": "WhileStatement",
														"src": "847:288:6"
													},
													{
														"expression": {
															"id": 1512,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "1156:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1475,
														"id": 1513,
														"nodeType": "Return",
														"src": "1149:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "367:92:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "474:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "491:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "483:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:15:6"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "521:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "521:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:15:6"
									},
									"scope": 1686,
									"src": "465:716:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "1356:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1528,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "1398:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:6",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1537,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "1444:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1535,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2693,
																					"src": "1429:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2693_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1440:3:6",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2692,
																				"src": "1429:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1534,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1516,
																			1544
																		],
																		"referencedDeclaration": 1516,
																		"src": "1420:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1526,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:71:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1524,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1542,
												"nodeType": "Return",
												"src": "1367:86:6"
											}
										]
									},
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "1189:91:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1295:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1311:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "1304:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1518,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1304:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:14:6"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "1341:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1341:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:15:6"
									},
									"scope": 1686,
									"src": "1286:175:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "1645:104:6",
										"statements": [
											{
												"id": 1562,
												"nodeType": "UncheckedBlock",
												"src": "1656:86:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "1700:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1556,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1547,
																				"src": "1719:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1554,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2588,
																				"src": "1707:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2588_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1712:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2548,
																			"src": "1707:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1707:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1728:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1707:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1552,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1564,
																	1640,
																	1660
																],
																"referencedDeclaration": 1640,
																"src": "1688:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1688:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1551,
														"id": 1561,
														"nodeType": "Return",
														"src": "1681:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "1469:96:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1580:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1600:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "1592:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:15:6"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "1630:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1630:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:6"
									},
									"scope": 1686,
									"src": "1571:178:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "1967:357:6",
										"statements": [
											{
												"assignments": [
													1575
												],
												"declarations": [
													{
														"constant": false,
														"id": 1575,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1991:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "1978:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1574,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1978:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2010:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1579,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "2014:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2010:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2010:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2000:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1576,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2004:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1978:47:6"
											},
											{
												"expression": {
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1585,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "2036:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1587,
														"indexExpression": {
															"hexValue": "30",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2043:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2036:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2048:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2036:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "2036:15:6"
											},
											{
												"expression": {
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1591,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "2062:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1593,
														"indexExpression": {
															"hexValue": "31",
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2069:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2062:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2074:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2062:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "2062:15:6"
											},
											{
												"body": {
													"id": 1625,
													"nodeType": "Block",
													"src": "2133:86:6",
													"statements": [
														{
															"expression": {
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1611,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "2148:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1613,
																	"indexExpression": {
																		"id": 1612,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "2155:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2148:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1614,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "2160:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1618,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "2169:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2177:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2169:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2160:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2148:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "2148:33:6"
														},
														{
															"expression": {
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "2196:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2206:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2196:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1624,
															"nodeType": "ExpressionStatement",
															"src": "2196:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1605,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "2121:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2125:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1626,
												"initializationExpression": {
													"assignments": [
														1598
													],
													"declarations": [
														{
															"constant": false,
															"id": 1598,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2101:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1626,
															"src": "2093:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1597,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2093:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1604,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1600,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "2109:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2105:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2118:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2105:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2093:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2128:3:6",
														"subExpression": {
															"id": 1608,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2130:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1610,
													"nodeType": "ExpressionStatement",
													"src": "2128:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2088:131:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1628,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "2237:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2246:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2237:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2249:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2229:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "2229:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1636,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "2309:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2302:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1634,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2302:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1638,
												"nodeType": "Return",
												"src": "2295:21:6"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "1757:114:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1886:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1906:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "1898:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1921:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "1913:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:31:6"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "1952:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1952:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1951:15:6"
									},
									"scope": 1686,
									"src": "1877:447:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "2554:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1653,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1643,
																			"src": "2600:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2592:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1651,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2592:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2592:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2584:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1649,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2584:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2584:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1656,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "2608:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1648,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1564,
															1640,
															1660
														],
														"referencedDeclaration": 1640,
														"src": "2572:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1647,
												"id": 1658,
												"nodeType": "Return",
												"src": "2565:59:6"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "2332:143:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2490:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2510:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2502:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:14:6"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2538:15:6"
									},
									"scope": 1686,
									"src": "2481:151:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "2792:68:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1673,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "2826:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2820:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1671,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2820:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2820:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1670,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2810:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2810:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1679,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "2849:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2843:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1677,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2843:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2843:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1676,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2833:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2833:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2810:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1683,
												"nodeType": "Return",
												"src": "2803:49:6"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "2640:68:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2723:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2743:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "2729:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2729:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2760:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "2746:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2746:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:34:6"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "2786:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2786:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:6:6"
									},
									"scope": 1686,
									"src": "2714:146:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1687,
							"src": "231:2632:6",
							"usedErrors": []
						}
					],
					"src": "104:2759:6"
				},
				"id": 6
			},
			"contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1710
						],
						"IERC165": [
							1722
						]
					},
					"id": 1711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:7"
						},
						{
							"absolutePath": "contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1711,
							"sourceUnit": 1723,
							"src": "129:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1691,
										"name": "IERC165",
										"nameLocations": [
											"775:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "775:7:7"
									},
									"id": 1692,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1690,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1710,
							"linearizedBaseContracts": [
								1710,
								1722
							],
							"name": "ERC165",
							"nameLocation": "765:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1721
									],
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "945:66:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1701,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "963:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1703,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "983:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1722_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1722_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1702,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1722",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "992:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1707,
												"nodeType": "Return",
												"src": "956:47:7"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1697,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:7"
									},
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "881:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:7"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "939:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:7"
									},
									"scope": 1710,
									"src": "854:157:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1711,
							"src": "747:267:7",
							"usedErrors": []
						}
					],
					"src": "102:912:7"
				},
				"id": 7
			},
			"contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1722
						]
					},
					"id": 1723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1713,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1722,
							"linearizedBaseContracts": [
								1722
							],
							"name": "IERC165",
							"nameLocation": "429:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "824:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1715,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:8"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "867:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:8"
									},
									"scope": 1722,
									"src": "797:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1723,
							"src": "419:457:8",
							"usedErrors": []
						}
					],
					"src": "103:773:8"
				},
				"id": 8
			},
			"contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2588
						]
					},
					"id": 2589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1725,
								"nodeType": "StructuredDocumentation",
								"src": "133:75:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2588,
							"linearizedBaseContracts": [
								2588
							],
							"name": "Math",
							"nameLocation": "218:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1729,
									"members": [
										{
											"id": 1726,
											"name": "Down",
											"nameLocation": "255:4:9",
											"nodeType": "EnumValue",
											"src": "255:4:9"
										},
										{
											"id": 1727,
											"name": "Up",
											"nameLocation": "298:2:9",
											"nodeType": "EnumValue",
											"src": "298:2:9"
										},
										{
											"id": 1728,
											"name": "Zero",
											"nameLocation": "330:4:9",
											"nodeType": "EnumValue",
											"src": "330:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "235:8:9",
									"nodeType": "EnumDefinition",
									"src": "230:126:9"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "498:39:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1739,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "516:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1740,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "520:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "516:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1743,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "528:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "516:13:9",
													"trueExpression": {
														"id": 1742,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "524:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1745,
												"nodeType": "Return",
												"src": "509:20:9"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "364:61:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "440:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "452:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "444:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "463:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "455:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:22:9"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "489:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:9"
									},
									"scope": 2588,
									"src": "431:106:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "680:39:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1757,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "698:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1758,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "702:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "698:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1761,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "710:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "698:13:9",
													"trueExpression": {
														"id": 1760,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "706:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1756,
												"id": 1763,
												"nodeType": "Return",
												"src": "691:20:9"
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "545:62:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "622:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "634:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "626:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "645:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "637:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:22:9"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "671:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:9"
									},
									"scope": 2588,
									"src": "613:106:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "909:85:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1775,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "966:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1776,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "970:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "966:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1778,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "965:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1779,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "976:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1780,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "980:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "976:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1782,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "975:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "985:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "975:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "965:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1786,
												"nodeType": "Return",
												"src": "958:28:9"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "727:105:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "847:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "863:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "855:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "874:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "866:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:22:9"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "900:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:9:9"
									},
									"scope": 2588,
									"src": "838:156:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "1272:126:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1798,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "1362:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1362:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1802,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "1376:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1380:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1376:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1805,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1806,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "1385:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1375:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1375:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1362:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1371:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1797,
												"id": 1811,
												"nodeType": "Return",
												"src": "1355:35:9"
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "1002:193:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1210:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1226:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1218:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1237:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1229:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:22:9"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1263:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:9:9"
									},
									"scope": 2588,
									"src": "1201:197:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "1819:4194:9",
										"statements": [
											{
												"id": 1934,
												"nodeType": "UncheckedBlock",
												"src": "1830:4176:9",
												"statements": [
													{
														"assignments": [
															1826
														],
														"declarations": [
															{
																"constant": false,
																"id": 1826,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2163:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1934,
																"src": "2155:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1825,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2155:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1827,
														"nodeType": "VariableDeclarationStatement",
														"src": "2155:13:9"
													},
													{
														"assignments": [
															1829
														],
														"declarations": [
															{
																"constant": false,
																"id": 1829,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2236:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1934,
																"src": "2228:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1828,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2228:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1830,
														"nodeType": "VariableDeclarationStatement",
														"src": "2228:13:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2309:161:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2328:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2345:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2348:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2355:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2351:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2351:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2338:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2332:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2376:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2389:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2392:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2376:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2412:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2429:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2433:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2444:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2448:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2441:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2441:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2412:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "2376:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "2433:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "2448:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1829,
																"isOffset": false,
																"isSlot": false,
																"src": "2412:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "2345:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "2392:1:9",
																"valueSize": 1
															}
														],
														"id": 1831,
														"nodeType": "InlineAssembly",
														"src": "2300:170:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "2554:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2563:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2554:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1840,
														"nodeType": "IfStatement",
														"src": "2550:373:9",
														"trueBody": {
															"id": 1839,
															"nodeType": "Block",
															"src": "2566:357:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1835,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "2888:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1836,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1820,
																			"src": "2896:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2888:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1824,
																	"id": 1838,
																	"nodeType": "Return",
																	"src": "2881:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1842,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "3036:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1843,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "3050:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3036:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3057:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1841,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3028:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3028:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1847,
														"nodeType": "ExpressionStatement",
														"src": "3028:53:9"
													},
													{
														"assignments": [
															1849
														],
														"declarations": [
															{
																"constant": false,
																"id": 1849,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3352:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1934,
																"src": "3344:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1848,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3344:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1850,
														"nodeType": "VariableDeclarationStatement",
														"src": "3344:17:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3385:298:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3456:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3476:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3479:1:9"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3482:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3469:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3456:9:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3579:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3592:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3602:9:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3613:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3599:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3599:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3588:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3588:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3579:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3638:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3651:5:9"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3638:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1820,
																"isOffset": false,
																"isSlot": false,
																"src": "3482:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "3613:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "3638:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "3651:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1829,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1829,
																"isOffset": false,
																"isSlot": false,
																"src": "3592:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1849,
																"isOffset": false,
																"isSlot": false,
																"src": "3456:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1849,
																"isOffset": false,
																"isSlot": false,
																"src": "3602:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1849,
																"isOffset": false,
																"isSlot": false,
																"src": "3658:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1816,
																"isOffset": false,
																"isSlot": false,
																"src": "3476:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "3479:1:9",
																"valueSize": 1
															}
														],
														"id": 1851,
														"nodeType": "InlineAssembly",
														"src": "3376:307:9"
													},
													{
														"assignments": [
															1853
														],
														"declarations": [
															{
																"constant": false,
																"id": 1853,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "4004:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1934,
																"src": "3996:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1852,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3996:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1861,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1854,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "4011:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "4026:12:9",
																			"subExpression": {
																				"id": 1855,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1820,
																				"src": "4027:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4041:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4026:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4025:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4011:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3996:47:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4067:371:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4134:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4153:11:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4166:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4134:11:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4241:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4254:5:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4261:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4241:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4384:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4404:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4407:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4400:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4400:12:9"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4414:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4396:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4396:23:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4421:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4392:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4392:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4384:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1820,
																"isOffset": false,
																"isSlot": false,
																"src": "4134:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1820,
																"isOffset": false,
																"isSlot": false,
																"src": "4153:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "4241:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1826,
																"isOffset": false,
																"isSlot": false,
																"src": "4254:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "4166:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "4261:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "4384:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "4407:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "4414:4:9",
																"valueSize": 1
															}
														],
														"id": 1862,
														"nodeType": "InlineAssembly",
														"src": "4058:380:9"
													},
													{
														"expression": {
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1863,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "4507:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1864,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "4516:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1865,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "4524:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4516:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4507:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1868,
														"nodeType": "ExpressionStatement",
														"src": "4507:21:9"
													},
													{
														"assignments": [
															1870
														],
														"declarations": [
															{
																"constant": false,
																"id": 1870,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4859:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1934,
																"src": "4851:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1869,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4851:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1877,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4870:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1872,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1820,
																			"src": "4874:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4870:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4869:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4889:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4869:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4851:39:9"
													},
													{
														"expression": {
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5111:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "5126:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "5140:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5122:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5111:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1885,
														"nodeType": "ExpressionStatement",
														"src": "5111:36:9"
													},
													{
														"expression": {
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5181:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5192:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "5196:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "5210:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5196:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5192:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5181:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1893,
														"nodeType": "ExpressionStatement",
														"src": "5181:36:9"
													},
													{
														"expression": {
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1894,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5252:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5263:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1896,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "5267:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1897,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "5281:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5267:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5263:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5252:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1901,
														"nodeType": "ExpressionStatement",
														"src": "5252:36:9"
													},
													{
														"expression": {
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1902,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5323:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5334:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1904,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "5338:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1905,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "5352:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5338:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5334:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5323:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1909,
														"nodeType": "ExpressionStatement",
														"src": "5323:36:9"
													},
													{
														"expression": {
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1910,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5394:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5405:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1912,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "5409:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1913,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "5423:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5409:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5405:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5394:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1917,
														"nodeType": "ExpressionStatement",
														"src": "5394:36:9"
													},
													{
														"expression": {
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1918,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5466:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5477:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1920,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "5481:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1921,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "5495:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5481:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5477:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5466:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1925,
														"nodeType": "ExpressionStatement",
														"src": "5466:36:9"
													},
													{
														"expression": {
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1926,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "5942:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1927,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "5951:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1928,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "5959:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5951:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5942:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1931,
														"nodeType": "ExpressionStatement",
														"src": "5942:24:9"
													},
													{
														"expression": {
															"id": 1932,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "5988:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1824,
														"id": 1933,
														"nodeType": "Return",
														"src": "5981:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "1406:309:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1730:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1745:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1737:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1756:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1748:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1767:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1759:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:43:9"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1811:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1803:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:16:9"
									},
									"scope": 2588,
									"src": "1721:4292:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "6260:195:9",
										"statements": [
											{
												"assignments": [
													1952
												],
												"declarations": [
													{
														"constant": false,
														"id": 1952,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6279:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1979,
														"src": "6271:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6271:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1958,
												"initialValue": {
													"arguments": [
														{
															"id": 1954,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "6295:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1955,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "6298:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1956,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "6301:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1953,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1936,
															1980
														],
														"referencedDeclaration": 1936,
														"src": "6288:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6288:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6271:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1729",
															"typeString": "enum Math.Rounding"
														},
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1959,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "6328:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1729",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1960,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "6340:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1729_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6349:2:9",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1727,
															"src": "6340:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1729",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6328:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1964,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "6362:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1965,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "6365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1966,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "6368:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1963,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6355:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6355:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6355:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6328:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"nodeType": "IfStatement",
												"src": "6324:100:9",
												"trueBody": {
													"id": 1975,
													"nodeType": "Block",
													"src": "6386:38:9",
													"statements": [
														{
															"expression": {
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1971,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "6401:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6411:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6401:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "6401:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1977,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1952,
													"src": "6441:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1950,
												"id": 1978,
												"nodeType": "Return",
												"src": "6434:13:9"
											}
										]
									},
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "6021:123:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6159:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6174:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6166:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6185:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6177:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6196:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6188:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6188:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6218:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6209:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1729",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1944,
														"name": "Rounding",
														"nameLocations": [
															"6209:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "6209:8:9"
													},
													"referencedDeclaration": 1729,
													"src": "6209:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1729",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6165:62:9"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6251:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6251:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:9:9"
									},
									"scope": 2588,
									"src": "6150:305:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "6738:1616:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1988,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "6753:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6758:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6753:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1994,
												"nodeType": "IfStatement",
												"src": "6749:47:9",
												"trueBody": {
													"id": 1993,
													"nodeType": "Block",
													"src": "6761:35:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6783:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1987,
															"id": 1992,
															"nodeType": "Return",
															"src": "6776:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7495:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2091,
														"src": "7487:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7487:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2005,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7504:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1999,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1983,
																			"src": "7515:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1998,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2260,
																			2296
																		],
																		"referencedDeclaration": 2260,
																		"src": "7510:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7510:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7521:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7510:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2003,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7509:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7504:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7487:36:9"
											},
											{
												"id": 2090,
												"nodeType": "UncheckedBlock",
												"src": "7930:417:9",
												"statements": [
													{
														"expression": {
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2006,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "7955:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2007,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1996,
																				"src": "7965:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2008,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "7974:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2009,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "7978:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7974:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7965:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2012,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7964:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7989:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7964:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7955:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2016,
														"nodeType": "ExpressionStatement",
														"src": "7955:35:9"
													},
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2017,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "8005:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2018,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1996,
																				"src": "8015:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2019,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "8024:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2020,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "8028:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8024:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8015:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2023,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8014:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8039:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8014:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8005:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "8005:35:9"
													},
													{
														"expression": {
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2028,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "8055:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2029,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1996,
																				"src": "8065:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2030,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "8074:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2031,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "8078:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8074:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8065:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8064:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8089:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8064:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8055:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2038,
														"nodeType": "ExpressionStatement",
														"src": "8055:35:9"
													},
													{
														"expression": {
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "8105:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2040,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1996,
																				"src": "8115:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2041,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "8124:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2042,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "8128:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8124:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8115:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8114:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8139:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8114:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8105:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2049,
														"nodeType": "ExpressionStatement",
														"src": "8105:35:9"
													},
													{
														"expression": {
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2050,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "8155:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2051,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1996,
																				"src": "8165:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2052,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "8174:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2053,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "8178:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8174:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8165:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8164:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8189:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8164:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8155:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2060,
														"nodeType": "ExpressionStatement",
														"src": "8155:35:9"
													},
													{
														"expression": {
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2061,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "8205:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2062,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1996,
																				"src": "8215:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2063,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "8224:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2064,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "8228:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8224:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8215:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8214:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8239:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8214:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8205:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2071,
														"nodeType": "ExpressionStatement",
														"src": "8205:35:9"
													},
													{
														"expression": {
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2072,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "8255:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2073,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1996,
																				"src": "8265:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2074,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "8274:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2075,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "8278:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8274:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8265:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2078,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8264:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8289:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8264:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8255:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2082,
														"nodeType": "ExpressionStatement",
														"src": "8255:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2084,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "8316:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2085,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1983,
																		"src": "8324:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2086,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "8328:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8324:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2083,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "8312:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8312:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1987,
														"id": 2089,
														"nodeType": "Return",
														"src": "8305:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "6463:212:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6690:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6703:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "6695:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6695:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6694:11:9"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "6729:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:9:9"
									},
									"scope": 2588,
									"src": "6681:1673:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "8535:166:9",
										"statements": [
											{
												"id": 2126,
												"nodeType": "UncheckedBlock",
												"src": "8546:148:9",
												"statements": [
													{
														"assignments": [
															2104
														],
														"declarations": [
															{
																"constant": false,
																"id": 2104,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8579:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2126,
																"src": "8571:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2103,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8571:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2108,
														"initialValue": {
															"arguments": [
																{
																	"id": 2106,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "8593:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2105,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2092,
																	2128
																],
																"referencedDeclaration": 2092,
																"src": "8588:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8588:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8571:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2109,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "8617:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1729",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2110,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2098,
																					"src": "8627:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2111,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "8639:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1729_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8648:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1727,
																					"src": "8639:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8627:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2114,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2104,
																						"src": "8654:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2115,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2104,
																						"src": "8663:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8654:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2117,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2095,
																					"src": "8672:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8654:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8627:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8680:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8627:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8676:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2123,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8626:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8617:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2102,
														"id": 2125,
														"nodeType": "Return",
														"src": "8610:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "8362:91:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8468:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8481:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "8473:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8473:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8493:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "8484:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1729",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2096,
														"name": "Rounding",
														"nameLocations": [
															"8484:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "8484:8:9"
													},
													"referencedDeclaration": 1729,
													"src": "8484:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1729",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8472:30:9"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "8526:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8526:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8525:9:9"
									},
									"scope": 2588,
									"src": "8459:242:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "8892:958:9",
										"statements": [
											{
												"assignments": [
													2137
												],
												"declarations": [
													{
														"constant": false,
														"id": 2137,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8911:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2259,
														"src": "8903:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8903:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2139,
												"initialValue": {
													"hexValue": "30",
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8920:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8903:18:9"
											},
											{
												"id": 2256,
												"nodeType": "UncheckedBlock",
												"src": "8932:887:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "8961:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8970:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8961:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8976:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8961:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2154,
														"nodeType": "IfStatement",
														"src": "8957:102:9",
														"trueBody": {
															"id": 2153,
															"nodeType": "Block",
															"src": "8979:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2145,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "8998:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9008:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8998:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2148,
																	"nodeType": "ExpressionStatement",
																	"src": "8998:13:9"
																},
																{
																	"expression": {
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2149,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9030:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9040:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "9030:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2152,
																	"nodeType": "ExpressionStatement",
																	"src": "9030:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9077:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9086:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "9077:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9091:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9077:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2169,
														"nodeType": "IfStatement",
														"src": "9073:99:9",
														"trueBody": {
															"id": 2168,
															"nodeType": "Block",
															"src": "9094:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "9113:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9123:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "9113:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2163,
																	"nodeType": "ExpressionStatement",
																	"src": "9113:12:9"
																},
																{
																	"expression": {
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9144:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9154:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "9144:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2167,
																	"nodeType": "ExpressionStatement",
																	"src": "9144:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9190:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9199:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "9190:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9204:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9190:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2184,
														"nodeType": "IfStatement",
														"src": "9186:99:9",
														"trueBody": {
															"id": 2183,
															"nodeType": "Block",
															"src": "9207:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "9226:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9226:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2178,
																	"nodeType": "ExpressionStatement",
																	"src": "9226:12:9"
																},
																{
																	"expression": {
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9257:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9267:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9257:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2182,
																	"nodeType": "ExpressionStatement",
																	"src": "9257:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9303:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9312:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9303:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9317:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9303:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2199,
														"nodeType": "IfStatement",
														"src": "9299:99:9",
														"trueBody": {
															"id": 2198,
															"nodeType": "Block",
															"src": "9320:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "9339:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9339:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2193,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:12:9"
																},
																{
																	"expression": {
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9370:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9380:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9370:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2197,
																	"nodeType": "ExpressionStatement",
																	"src": "9370:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9416:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9425:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9416:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9429:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9416:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2214,
														"nodeType": "IfStatement",
														"src": "9412:96:9",
														"trueBody": {
															"id": 2213,
															"nodeType": "Block",
															"src": "9432:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "9451:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9461:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9451:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2208,
																	"nodeType": "ExpressionStatement",
																	"src": "9451:11:9"
																},
																{
																	"expression": {
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9481:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9491:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9481:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2212,
																	"nodeType": "ExpressionStatement",
																	"src": "9481:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9526:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9535:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9526:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9539:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9526:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2229,
														"nodeType": "IfStatement",
														"src": "9522:96:9",
														"trueBody": {
															"id": 2228,
															"nodeType": "Block",
															"src": "9542:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "9561:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9571:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9561:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2223,
																	"nodeType": "ExpressionStatement",
																	"src": "9561:11:9"
																},
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9591:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9601:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9591:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "9591:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2230,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9636:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9645:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9636:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9649:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9636:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2244,
														"nodeType": "IfStatement",
														"src": "9632:96:9",
														"trueBody": {
															"id": 2243,
															"nodeType": "Block",
															"src": "9652:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2235,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "9671:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9681:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9671:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2238,
																	"nodeType": "ExpressionStatement",
																	"src": "9671:11:9"
																},
																{
																	"expression": {
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9701:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9711:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9701:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2242,
																	"nodeType": "ExpressionStatement",
																	"src": "9701:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2245,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "9746:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9755:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9746:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9759:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9746:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2255,
														"nodeType": "IfStatement",
														"src": "9742:66:9",
														"trueBody": {
															"id": 2254,
															"nodeType": "Block",
															"src": "9762:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 2252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9781:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9791:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9781:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2253,
																	"nodeType": "ExpressionStatement",
																	"src": "9781:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2257,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2137,
													"src": "9836:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2135,
												"id": 2258,
												"nodeType": "Return",
												"src": "9829:13:9"
											}
										]
									},
									"documentation": {
										"id": 2129,
										"nodeType": "StructuredDocumentation",
										"src": "8709:116:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8840:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8853:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "8845:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:15:9"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "8883:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8883:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8882:9:9"
									},
									"scope": 2588,
									"src": "8831:1019:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "10089:170:9",
										"statements": [
											{
												"id": 2294,
												"nodeType": "UncheckedBlock",
												"src": "10100:152:9",
												"statements": [
													{
														"assignments": [
															2272
														],
														"declarations": [
															{
																"constant": false,
																"id": 2272,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10133:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2294,
																"src": "10125:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2271,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10125:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2276,
														"initialValue": {
															"arguments": [
																{
																	"id": 2274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "10147:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2273,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2260,
																	2296
																],
																"referencedDeclaration": 2260,
																"src": "10142:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10142:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10125:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "10175:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1729",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2278,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "10185:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2279,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "10197:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1729_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "10206:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1727,
																					"src": "10197:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "10185:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10212:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2283,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2272,
																						"src": "10217:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10212:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2285,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "10226:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10212:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10185:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10238:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10185:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10234:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10184:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10175:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2270,
														"id": 2293,
														"nodeType": "Return",
														"src": "10168:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "9858:145:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10018:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10031:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "10023:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10023:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10047:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "10038:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1729",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2264,
														"name": "Rounding",
														"nameLocations": [
															"10038:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "10038:8:9"
													},
													"referencedDeclaration": 1729,
													"src": "10038:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1729",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10022:34:9"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "10080:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10080:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10079:9:9"
									},
									"scope": 2588,
									"src": "10009:250:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "10452:886:9",
										"statements": [
											{
												"assignments": [
													2305
												],
												"declarations": [
													{
														"constant": false,
														"id": 2305,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10471:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2424,
														"src": "10463:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10463:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2307,
												"initialValue": {
													"hexValue": "30",
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10480:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10463:18:9"
											},
											{
												"id": 2421,
												"nodeType": "UncheckedBlock",
												"src": "10492:815:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "10521:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10530:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10536:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10530:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10521:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2324,
														"nodeType": "IfStatement",
														"src": "10517:106:9",
														"trueBody": {
															"id": 2323,
															"nodeType": "Block",
															"src": "10540:83:9",
															"statements": [
																{
																	"expression": {
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "10559:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10568:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10574:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10568:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10559:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2318,
																	"nodeType": "ExpressionStatement",
																	"src": "10559:17:9"
																},
																{
																	"expression": {
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "10595:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10605:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10595:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2322,
																	"nodeType": "ExpressionStatement",
																	"src": "10595:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "10641:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10650:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10656:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10650:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10641:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2341,
														"nodeType": "IfStatement",
														"src": "10637:106:9",
														"trueBody": {
															"id": 2340,
															"nodeType": "Block",
															"src": "10660:83:9",
															"statements": [
																{
																	"expression": {
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "10679:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10688:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10694:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10688:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10679:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2335,
																	"nodeType": "ExpressionStatement",
																	"src": "10679:17:9"
																},
																{
																	"expression": {
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "10715:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10725:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10715:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2339,
																	"nodeType": "ExpressionStatement",
																	"src": "10715:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "10761:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10770:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10776:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10770:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10761:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2358,
														"nodeType": "IfStatement",
														"src": "10757:106:9",
														"trueBody": {
															"id": 2357,
															"nodeType": "Block",
															"src": "10780:83:9",
															"statements": [
																{
																	"expression": {
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "10799:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10808:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10814:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10808:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10799:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2352,
																	"nodeType": "ExpressionStatement",
																	"src": "10799:17:9"
																},
																{
																	"expression": {
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "10835:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10845:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10835:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2356,
																	"nodeType": "ExpressionStatement",
																	"src": "10835:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "10881:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10890:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10896:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10890:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10881:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2375,
														"nodeType": "IfStatement",
														"src": "10877:103:9",
														"trueBody": {
															"id": 2374,
															"nodeType": "Block",
															"src": "10899:81:9",
															"statements": [
																{
																	"expression": {
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "10918:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10927:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10933:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10927:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10918:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2369,
																	"nodeType": "ExpressionStatement",
																	"src": "10918:16:9"
																},
																{
																	"expression": {
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "10953:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10963:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10953:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2373,
																	"nodeType": "ExpressionStatement",
																	"src": "10953:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "10998:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11007:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11013:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11007:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10998:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2392,
														"nodeType": "IfStatement",
														"src": "10994:103:9",
														"trueBody": {
															"id": 2391,
															"nodeType": "Block",
															"src": "11016:81:9",
															"statements": [
																{
																	"expression": {
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "11035:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11044:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11050:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "11044:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "11035:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2386,
																	"nodeType": "ExpressionStatement",
																	"src": "11035:16:9"
																},
																{
																	"expression": {
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2387,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "11070:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11080:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11070:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2390,
																	"nodeType": "ExpressionStatement",
																	"src": "11070:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2393,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "11115:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11124:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11130:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11124:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "11115:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2409,
														"nodeType": "IfStatement",
														"src": "11111:103:9",
														"trueBody": {
															"id": 2408,
															"nodeType": "Block",
															"src": "11133:81:9",
															"statements": [
																{
																	"expression": {
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "11152:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11161:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11167:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "11161:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "11152:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2403,
																	"nodeType": "ExpressionStatement",
																	"src": "11152:16:9"
																},
																{
																	"expression": {
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2404,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "11187:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11197:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11187:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2407,
																	"nodeType": "ExpressionStatement",
																	"src": "11187:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2410,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "11232:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11241:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11247:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11241:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "11232:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2420,
														"nodeType": "IfStatement",
														"src": "11228:68:9",
														"trueBody": {
															"id": 2419,
															"nodeType": "Block",
															"src": "11250:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2415,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "11269:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11279:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11269:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2418,
																	"nodeType": "ExpressionStatement",
																	"src": "11269:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2422,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2305,
													"src": "11324:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2303,
												"id": 2423,
												"nodeType": "Return",
												"src": "11317:13:9"
											}
										]
									},
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "10267:117:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10399:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10413:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "10405:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10405:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10404:15:9"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "10443:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10442:9:9"
									},
									"scope": 2588,
									"src": "10390:948:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "11579:172:9",
										"statements": [
											{
												"id": 2459,
												"nodeType": "UncheckedBlock",
												"src": "11590:154:9",
												"statements": [
													{
														"assignments": [
															2437
														],
														"declarations": [
															{
																"constant": false,
																"id": 2437,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11623:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2459,
																"src": "11615:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2436,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11615:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2441,
														"initialValue": {
															"arguments": [
																{
																	"id": 2439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "11638:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2438,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2425,
																	2461
																],
																"referencedDeclaration": 2425,
																"src": "11632:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11632:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11615:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2442,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2437,
																"src": "11666:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1729",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2443,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2431,
																					"src": "11676:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2444,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "11688:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1729_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11697:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1727,
																					"src": "11688:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11676:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2447,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11703:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2448,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2437,
																						"src": "11709:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11703:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2450,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2428,
																					"src": "11718:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11703:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11676:47:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11730:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11676:55:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11726:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2456,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11675:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11666:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2435,
														"id": 2458,
														"nodeType": "Return",
														"src": "11659:73:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2426,
										"nodeType": "StructuredDocumentation",
										"src": "11346:146:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11507:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11521:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "11513:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11537:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "11528:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1729",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2429,
														"name": "Rounding",
														"nameLocations": [
															"11528:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "11528:8:9"
													},
													"referencedDeclaration": 1729,
													"src": "11528:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1729",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11512:34:9"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "11570:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11569:9:9"
									},
									"scope": 2588,
									"src": "11498:253:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2547,
										"nodeType": "Block",
										"src": "12073:624:9",
										"statements": [
											{
												"assignments": [
													2470
												],
												"declarations": [
													{
														"constant": false,
														"id": 2470,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12092:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2547,
														"src": "12084:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12084:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2472,
												"initialValue": {
													"hexValue": "30",
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12101:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12084:18:9"
											},
											{
												"id": 2544,
												"nodeType": "UncheckedBlock",
												"src": "12113:553:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2473,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2464,
																	"src": "12142:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12151:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "12142:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12157:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12142:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2487,
														"nodeType": "IfStatement",
														"src": "12138:101:9",
														"trueBody": {
															"id": 2486,
															"nodeType": "Block",
															"src": "12160:79:9",
															"statements": [
																{
																	"expression": {
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2478,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2464,
																			"src": "12179:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12189:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "12179:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "12179:13:9"
																},
																{
																	"expression": {
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2470,
																			"src": "12211:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12221:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12211:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2485,
																	"nodeType": "ExpressionStatement",
																	"src": "12211:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2488,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2464,
																	"src": "12257:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12266:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12257:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12271:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12257:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2502,
														"nodeType": "IfStatement",
														"src": "12253:98:9",
														"trueBody": {
															"id": 2501,
															"nodeType": "Block",
															"src": "12274:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2464,
																			"src": "12293:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12303:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12293:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2496,
																	"nodeType": "ExpressionStatement",
																	"src": "12293:12:9"
																},
																{
																	"expression": {
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2497,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2470,
																			"src": "12324:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12324:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2500,
																	"nodeType": "ExpressionStatement",
																	"src": "12324:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2464,
																	"src": "12369:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12378:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12369:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12383:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12369:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2517,
														"nodeType": "IfStatement",
														"src": "12365:98:9",
														"trueBody": {
															"id": 2516,
															"nodeType": "Block",
															"src": "12386:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2464,
																			"src": "12405:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12415:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12405:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2511,
																	"nodeType": "ExpressionStatement",
																	"src": "12405:12:9"
																},
																{
																	"expression": {
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2470,
																			"src": "12436:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12446:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12436:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2515,
																	"nodeType": "ExpressionStatement",
																	"src": "12436:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2464,
																	"src": "12481:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12490:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12481:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12495:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12481:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2532,
														"nodeType": "IfStatement",
														"src": "12477:98:9",
														"trueBody": {
															"id": 2531,
															"nodeType": "Block",
															"src": "12498:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2464,
																			"src": "12517:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12527:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12517:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2526,
																	"nodeType": "ExpressionStatement",
																	"src": "12517:12:9"
																},
																{
																	"expression": {
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2470,
																			"src": "12548:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12558:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12548:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2530,
																	"nodeType": "ExpressionStatement",
																	"src": "12548:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2464,
																	"src": "12593:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12593:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12606:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12593:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2543,
														"nodeType": "IfStatement",
														"src": "12589:66:9",
														"trueBody": {
															"id": 2542,
															"nodeType": "Block",
															"src": "12609:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2470,
																			"src": "12628:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12638:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12628:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2541,
																	"nodeType": "ExpressionStatement",
																	"src": "12628:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2545,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2470,
													"src": "12683:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2468,
												"id": 2546,
												"nodeType": "Return",
												"src": "12676:13:9"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "11759:245:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12019:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "12026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12025:15:9"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "12064:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12064:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12063:9:9"
									},
									"scope": 2588,
									"src": "12010:687:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "12940:179:9",
										"statements": [
											{
												"id": 2585,
												"nodeType": "UncheckedBlock",
												"src": "12951:161:9",
												"statements": [
													{
														"assignments": [
															2560
														],
														"declarations": [
															{
																"constant": false,
																"id": 2560,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12984:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "12976:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12976:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2564,
														"initialValue": {
															"arguments": [
																{
																	"id": 2562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2551,
																	"src": "13000:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2561,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2548,
																	2587
																],
																"referencedDeclaration": 2548,
																"src": "12993:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12993:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12976:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2565,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2560,
																"src": "13028:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1729",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2566,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2554,
																					"src": "13038:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2567,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "13050:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1729_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13059:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1727,
																					"src": "13050:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1729",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13038:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13065:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2573,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2571,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2560,
																									"src": "13071:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2572,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13081:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "13071:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2574,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13070:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13065:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2576,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2551,
																					"src": "13086:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13065:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13038:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13098:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13038:61:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13094:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13037:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13028:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2558,
														"id": 2584,
														"nodeType": "Return",
														"src": "13021:79:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2549,
										"nodeType": "StructuredDocumentation",
										"src": "12705:147:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12867:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12882:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "12874:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12874:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12898:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "12889:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1729",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2552,
														"name": "Rounding",
														"nameLocations": [
															"12889:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "12889:8:9"
													},
													"referencedDeclaration": 1729,
													"src": "12889:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1729",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12873:34:9"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "12931:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12931:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12930:9:9"
									},
									"scope": 2588,
									"src": "12858:261:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2589,
							"src": "210:12912:9",
							"usedErrors": []
						}
					],
					"src": "106:13016:9"
				},
				"id": 9
			},
			"contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2693
						]
					},
					"id": 2694,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2591,
								"nodeType": "StructuredDocumentation",
								"src": "139:82:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2693,
							"linearizedBaseContracts": [
								2693
							],
							"name": "SignedMath",
							"nameLocation": "231:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2608,
										"nodeType": "Block",
										"src": "387:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2601,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "405:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2602,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "409:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "405:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2605,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "417:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "405:13:10",
													"trueExpression": {
														"id": 2604,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2594,
														"src": "413:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2600,
												"id": 2607,
												"nodeType": "Return",
												"src": "398:20:10"
											}
										]
									},
									"documentation": {
										"id": 2592,
										"nodeType": "StructuredDocumentation",
										"src": "249:68:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "332:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "343:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "336:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2593,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "353:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "346:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2595,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:20:10"
									},
									"returnParameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "379:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2598,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "379:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:8:10"
									},
									"scope": 2693,
									"src": "323:103:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2626,
										"nodeType": "Block",
										"src": "573:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2619,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "591:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2620,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "595:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "591:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2623,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "603:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "591:13:10",
													"trueExpression": {
														"id": 2622,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "599:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2618,
												"id": 2625,
												"nodeType": "Return",
												"src": "584:20:10"
											}
										]
									},
									"documentation": {
										"id": 2610,
										"nodeType": "StructuredDocumentation",
										"src": "434:69:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "518:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "529:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "522:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2611,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "539:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "532:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:20:10"
									},
									"returnParameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "565:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2616,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:8:10"
									},
									"scope": 2693,
									"src": "509:103:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2670,
										"nodeType": "Block",
										"src": "823:166:10",
										"statements": [
											{
												"assignments": [
													2638
												],
												"declarations": [
													{
														"constant": false,
														"id": 2638,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "894:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2670,
														"src": "887:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2637,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "887:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2651,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2639,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2630,
																	"src": "899:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2640,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "903:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "899:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2642,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "898:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2643,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2630,
																				"src": "910:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2644,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "914:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "910:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2646,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "909:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "920:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "909:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2649,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "908:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "898:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2652,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2638,
														"src": "940:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2657,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2638,
																						"src": "960:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "952:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2655,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "952:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "952:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "966:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "952:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "945:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2653,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "945:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "945:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2662,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2630,
																				"src": "974:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2663,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2632,
																				"src": "978:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "974:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2665,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "973:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "945:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2667,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "944:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "940:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2636,
												"id": 2669,
												"nodeType": "Return",
												"src": "933:48:10"
											}
										]
									},
									"documentation": {
										"id": 2628,
										"nodeType": "StructuredDocumentation",
										"src": "620:129:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "764:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "779:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "772:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2629,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "772:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "789:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "782:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2631,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:20:10"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "815:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2634,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "815:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:8:10"
									},
									"scope": 2693,
									"src": "755:234:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "1138:163:10",
										"statements": [
											{
												"id": 2690,
												"nodeType": "UncheckedBlock",
												"src": "1149:145:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2681,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "1266:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1271:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1266:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1279:2:10",
																		"subExpression": {
																			"id": 2685,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "1280:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1266:15:10",
																	"trueExpression": {
																		"id": 2684,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2674,
																		"src": "1275:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1258:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2679,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1258:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1258:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2678,
														"id": 2689,
														"nodeType": "Return",
														"src": "1251:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2672,
										"nodeType": "StructuredDocumentation",
										"src": "997:80:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1092:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1103:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "1096:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2673,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1096:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:10:10"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "1129:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:9:10"
									},
									"scope": 2693,
									"src": "1083:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2694,
							"src": "223:1081:10",
							"usedErrors": []
						}
					],
					"src": "112:1192:10"
				},
				"id": 10
			}
		}
	}
}